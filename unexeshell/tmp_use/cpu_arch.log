第四章
处理器体系结构

========================================================
名词：ISA: instruction-set architecture :指令体系结构
每种处理器家族（Arch）使用不同的ISA

=======================================================
常见的Arch包含了：
RISC：
alpha---- DEC  RISC 3-D图象处理和计算机辅助设计,指令预测能力强和很高的存储系统带宽
arc ---- Synopsys RISC  主要用于微控领域：固态硬盘、联网设备、汽车控制器，工业微控制器，也有一些高端用于图像处理
arm
/arm64 --- arm [Advanced RISC Machines] ,消费电子，通用嵌入式设备，服务器等
avr32 ---ATMEL ，RISC精简指令集的高速8位单片机 ， 替代51 [Intel 8031] 单片机；
blackfin
  ADI/Intel  RISC  嵌入式音频、视频和通信应用
c[num]x
  TI RISC   DSP 音频，无限通信，国防
cris -- Axis  RISC   网络
frv -- 富士通 RISC 数码刻录机、数码相机
h8300-- 萨科 RISC 汽车电子、家用电器、医疗器械
hexagon--Qualcomm  RISC  DSP modem GPS wifi BT VEDIO media
ia64 ---Intel  RISC  服务器 100 万TB 的地址空间,超大规模的数据库
m32r--萨科 RISC   车载系统、数字AV 设备、数字成像

m68k --Motorola RISC 工业自动化设备、控制设备、医疗仪器系统、安全系统 
microblaze --- Xilinx/FPGA  RISC 网络、电信、数据通信
mips -- 斯坦福大学 RISC  网络，图像，服务器，通用PC
mn10300 --松下 RISC  多媒体
nios2--Altera/FPGA RISC   工业控制
openrisc --OpenCores RISC    特点开源：爱好者，大量免费的IP核，有用于多媒体处理
parisc --HP RISC   用于HP自家服务器
powerpc --IBM/Apple/Motorola  RISC  网络设备、视频系统、工业系统 ，特别要提一下，美国航空，国防都是用这个CPU
s390-- IBM RISC   服务器
score -- 凌阳 RISC  取代51单片机市场
sh--Hitachi/ST Microelectronics RISC  已经开源了， 多媒体
sparc --SUN/TI RISC  服务器
tile -- Tilera RISC  未商业化，特点，及其省电
xtensa -- Xtensa   RISC  用于研究，有标准的课扩展IP结构，可以随意组装IP核
CISC:
x86/IA32/x64    CISC
=================================================================

RISC(精简指令集计算机)和CISC(复杂指令集计算机)
CISC与RISC的区别　
CISC与RISC到底有何区别？
　　从硬件角度来看CISC处理的是不等长指令集，它必须对不等长指令进行分割，因此在执行单一指令的时候需要进行较多的处理工作。
而RISC执行的是等长精简指令集，CPU在执行指令的时候速度较快且性能稳定。因此在并行处理方面RISC明显优于CISC，RISC可同时执行多条指令，
它可将一条指令分割成若干个进程或线程，交由多个处理器同时执行。由于RISC执行的是精简指令集，所以它的制造工艺简单且成本低廉。
=================================================================

逻辑设计和硬件控制语言：
设计语言两大阵营：Verilog (类似C语言，面向过程), VHDL（类似CPP，面向对象）
数字电路基本电路：与，或，非

================================================================
指令的顺序执行
取指，译码，执行，访存，写回，更新PC
流水线执行
cpu流水线技术是一种将指令分解为多步，并让不同指令的各步操作重叠，
从而实现几条指令并行处理，以加速程序运行过程的技术。指令的每步有各自独立的电路来处理，
每完成一步，就进到下一步，而前一步则处理后续指令
注意：流水线深度和条数，
===============================================================
补充ARM 处理器代数
===============================================================