diff --git a/external/wpa_supplicant_8/src/ap/wpa_auth.c b/external/wpa_supplicant_8/src/ap/wpa_auth.c
index 3fb97a2..f8adcd9 100644
--- a/external/wpa_supplicant_8/src/ap/wpa_auth.c
+++ b/external/wpa_supplicant_8/src/ap/wpa_auth.c
@@ -211,6 +211,7 @@ static void wpa_sta_disconnect(struct wpa_authenticator *wpa_auth,
 	if (wpa_auth->cb.disconnect == NULL)
 		return;
 	wpa_printf(MSG_DEBUG, "wpa_sta_disconnect STA " MACSTR, MAC2STR(addr));
+	wpa_printf(MSG_DEBUG, "############# func = %s, line= %d\n ", __func__, __LINE__);
 	wpa_auth->cb.disconnect(wpa_auth->cb.ctx, addr,
 				WLAN_REASON_PREV_AUTH_NOT_VALID);
 }
@@ -970,6 +971,7 @@ continue_processing:
 				   "collect more entropy for random number "
 				   "generation");
 			random_mark_pool_ready();
+	wpa_printf(MSG_DEBUG, "############# func = %s, line= %d\n ", __func__, __LINE__);
 			wpa_sta_disconnect(wpa_auth, sm->addr);
 			return;
 		}
@@ -1015,11 +1017,13 @@ continue_processing:
 			wpa_hexdump(MSG_DEBUG, "WPA IE in msg 2/4",
 				    eapol_key_ie, eapol_key_ie_len);
 			/* MLME-DEAUTHENTICATE.request */
+	wpa_printf(MSG_DEBUG, "############# func = %s, line= %d\n ", __func__, __LINE__);
 			wpa_sta_disconnect(wpa_auth, sm->addr);
 			return;
 		}
 #ifdef CONFIG_IEEE80211R
 		if (ft && ft_check_msg_2_of_4(wpa_auth, sm, &kde) < 0) {
+	wpa_printf(MSG_DEBUG, "############# func = %s, line= %d\n ", __func__, __LINE__);
 			wpa_sta_disconnect(wpa_auth, sm->addr);
 			return;
 		}
@@ -1586,6 +1590,7 @@ SM_STATE(WPA_PTK, DISCONNECT)
 {
 	SM_ENTRY_MA(WPA_PTK, DISCONNECT, wpa_ptk);
 	sm->Disconnect = FALSE;
+	wpa_printf(MSG_DEBUG, "############# func = %s, line= %d\n ", __func__, __LINE__);
 	wpa_sta_disconnect(sm->wpa_auth, sm->addr);
 }
 
@@ -2123,6 +2128,7 @@ SM_STATE(WPA_PTK, PTKINITDONE)
 		int klen = wpa_cipher_key_len(sm->pairwise);
 		if (wpa_auth_set_key(sm->wpa_auth, 0, alg, sm->addr, 0,
 				     sm->PTK.tk1, klen)) {
+	wpa_printf(MSG_DEBUG, "############# func = %s, line= %d\n ", __func__, __LINE__);
 			wpa_sta_disconnect(sm->wpa_auth, sm->addr);
 			return;
 		}
