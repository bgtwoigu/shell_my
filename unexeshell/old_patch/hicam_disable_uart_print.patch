diff --git a/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_driver.c b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_driver.c
index 49d260d..913fb6a 100755
--- a/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_driver.c
+++ b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_driver.c
@@ -2451,7 +2451,7 @@ static void elan_touch_esd_func(struct work_struct *work)
     //add by baojun.fu for i'm alive
     static int por_cnt = 0;
 
-    printk("[elan esd] %s: enter.......\n", __FUNCTION__);      /* elan_dlx */
+ //   printk("[elan esd] %s: enter.......\n", __FUNCTION__);      /* elan_dlx */
     if(work_lock == 1) //updating or doing something else
     {
         printk("[elan esd] %s: work locked ..\n", __FUNCTION__);        /* elan_dlx */
@@ -2461,7 +2461,7 @@ static void elan_touch_esd_func(struct work_struct *work)
 
     if(have_interrupts == 1)
     {
-        printk("[elan esd] %s: had interrup not need check\n", __func__);
+  //      printk("[elan esd] %s: had interrup not need check\n", __func__);
     }
     else
     {
@@ -2531,7 +2531,7 @@ static void elan_touch_esd_func(struct work_struct *work)
 
     have_interrupts = 0;
     queue_delayed_work(esd_wq, &esd_work, delay);
-    printk("[elan esd] %s: exit.......\n", __FUNCTION__);       /* elan_dlx */
+    //printk("[elan esd] %s: exit.......\n", __FUNCTION__);       /* elan_dlx */
 }
 #endif
 
diff --git a/mediatek/kernel/drivers/power/battery_common.c b/mediatek/kernel/drivers/power/battery_common.c
index 8b14104..247aead 100755
--- a/mediatek/kernel/drivers/power/battery_common.c
+++ b/mediatek/kernel/drivers/power/battery_common.c
@@ -75,7 +75,7 @@
 ////////////////////////////////////////////////////////////////////////////////
 // Battery Logging Entry
 ////////////////////////////////////////////////////////////////////////////////
-int Enable_BATDRV_LOG = BAT_LOG_CRTI;
+int Enable_BATDRV_LOG = 0;
 //static struct proc_dir_entry *proc_entry;
 char proc_bat_data[32];  
 
diff --git a/mediatek/platform/mt6595/kernel/drivers/thermal/mtk_ts_cpu.c b/mediatek/platform/mt6595/kernel/drivers/thermal/mtk_ts_cpu.c
index 9028f58..9dce2f5 100644
--- a/mediatek/platform/mt6595/kernel/drivers/thermal/mtk_ts_cpu.c
+++ b/mediatek/platform/mt6595/kernel/drivers/thermal/mtk_ts_cpu.c
@@ -413,9 +413,6 @@ static void set_adaptive_cpu_power_limit(unsigned int limit)
 
     if (prv_adp_cpu_pwr_lim != adaptive_cpu_power_limit)
     {
-        tscpu_printk("set_adaptive_cpu_power_limit %d, T=%d,%d,%d,%d,%d,%d,%d,%d,%d\n", (final_limit != 0x7FFFFFFF) ? final_limit : 0,
-                     CA7_TS1_T, CA15_TS1_T, CA7_TS2_T, CORE_TS2_T, CA15_TS3_T, GPU_TS3_T, GPU_TS4_T, CORE_TS4_T, CORE_TSABB_T);
-
         mt_cpufreq_thermal_protect((final_limit != 0x7FFFFFFF) ? final_limit : 0);
     }
 }
diff --git a/mediatek/platform/mt6595/kernel/drivers/videox/primary_display.c b/mediatek/platform/mt6595/kernel/drivers/videox/primary_display.c
index 9fbbe7c..c66d19b 100755
--- a/mediatek/platform/mt6595/kernel/drivers/videox/primary_display.c
+++ b/mediatek/platform/mt6595/kernel/drivers/videox/primary_display.c
@@ -1127,7 +1127,7 @@ int primary_display_esd_check(void)
 
 	dprec_logger_start(DPREC_LOGGER_ESD_CHECK, 0, 0);
 	MMProfileLogEx(ddp_mmp_get_events()->esd_check_t, MMProfileFlagStart, 0, 0);
-	DISPCHECK("[ESD]ESD check begin\n");
+	//DISPCHECK("[ESD]ESD check begin\n");
 
         _primary_path_lock(__func__);
 	if(pgc->state == DISP_SLEEPED)
@@ -1293,7 +1293,7 @@ destory_cmdq:
 	MMProfileLogEx(ddp_mmp_get_events()->esd_rdlcm, MMProfileFlagEnd, 0, ret);
 
 done:
-	DISPCHECK("[ESD]ESD check end\n");
+	//DISPCHECK("[ESD]ESD check end\n");
 	MMProfileLogEx(ddp_mmp_get_events()->esd_check_t, MMProfileFlagEnd, 0, ret);	
 	dprec_logger_done(DPREC_LOGGER_ESD_CHECK, 0, 0);
 	return ret;
