From 6dde00a5e077403d1e1777ed7c5b3ad8ecf35104 Mon Sep 17 00:00:00 2001
From: "haolong.zhang" <haolong.zhang@ck-telecom.com>
Date: Mon, 25 May 2015 17:49:08 +0800
Subject: [PATCH] 11

Change-Id: Ifd15e405b2552eec4c5fc7e6c5ac84e0d1d5fda1
---
 mediatek/kernel/drivers/power/battery_common.c    |  5 +-
 mediatek/platform/mt6595/kernel/core/mt_cpufreq.c | 69 +++++++++++++----------
 2 files changed, 42 insertions(+), 32 deletions(-)

diff --git a/mediatek/kernel/drivers/power/battery_common.c b/mediatek/kernel/drivers/power/battery_common.c
index 2b3ee91..335aace 100755
--- a/mediatek/kernel/drivers/power/battery_common.c
+++ b/mediatek/kernel/drivers/power/battery_common.c
@@ -95,7 +95,7 @@ int g_battery_thermal_throttling_flag=3; // 0:nothing, 1:enable batTT&chrTimer,
 int battery_cmd_thermal_test_mode=0;
 int battery_cmd_thermal_test_mode_value=0;
 int g_battery_tt_check_flag=0; // 0:default enable check batteryTT, 1:default disable check batteryTT
-int g_MAX_CHARGE_TEMPERATURE = 60;
+int g_MAX_CHARGE_TEMPERATURE = 200;
 
 
 ///////////////////////////////////////////////////////////////////////////////////////////
@@ -1730,6 +1730,7 @@ PMU_STATUS do_batt_temp_state_machine(void)
 	if (BMT_status.temperature >= g_MAX_CHARGE_TEMPERATURE) 
 	{
 		battery_xlog_printk(BAT_LOG_CRTI, "[BATTERY] Battery Over Temperature !!\n\r"); 
+		printk(KERN_ERR "Battery over Tem %s:[%d]...\n", __func__, __LINE__);
 		g_batt_temp_status =TEMP_POS_HIGH;
 		return PMU_STATUS_FAIL; 
 	}
@@ -1975,6 +1976,7 @@ static PMU_STATUS mt_battery_CheckBatteryTemp(void)
     if (BMT_status.temperature >= g_MAX_CHARGE_TEMPERATURE)
     {
         battery_xlog_printk(BAT_LOG_CRTI, "[BATTERY] Battery Over Temperature !!\n\r");                
+		printk(KERN_ERR "Battery over Tem %s:[%d]...\n", __func__, __LINE__);
         status = PMU_STATUS_FAIL;       
     }    
 #endif
@@ -2165,6 +2167,7 @@ static void mt_battery_notify_VBatTemp_check(void)
 	if(BMT_status.temperature >= g_MAX_CHARGE_TEMPERATURE)
     {
         g_BatteryNotifyCode |= 0x0002;
+		printk(KERN_ERR "Battery over Tem %s:[%d]...\n", __func__, __LINE__);
         battery_xlog_printk(BAT_LOG_CRTI, "[BATTERY] bat_temp(%d) out of range(too high)\n", BMT_status.temperature);		
     }
 #if defined(MTK_JEITA_STANDARD_SUPPORT)
diff --git a/mediatek/platform/mt6595/kernel/core/mt_cpufreq.c b/mediatek/platform/mt6595/kernel/core/mt_cpufreq.c
index 1d9c5d3..a6a6b9f 100755
--- a/mediatek/platform/mt6595/kernel/core/mt_cpufreq.c
+++ b/mediatek/platform/mt6595/kernel/core/mt_cpufreq.c
@@ -103,49 +103,49 @@ extern void hp_limited_cpu_num(int num); // TODO: ask Marc to provide the head f
 
 /* for DVFS OPP table */ // TODO: necessary or just specify in opp table directly???
 
-#define DVFS_BIG_F0 (1898000) /* KHz */
-#define DVFS_BIG_F1 (1495000) /* KHz */
+#define DVFS_BIG_F0 (1897992) /* KHz */
+#define DVFS_BIG_F1 (1494996) /* KHz */
 #define DVFS_BIG_F2 (1365000) /* KHz */
 #define DVFS_BIG_F3 (1248000) /* KHz */
-#define DVFS_BIG_F4 (1144000) /* KHz */
-#define DVFS_BIG_F5 (1001000) /* KHz */
-#define DVFS_BIG_F6 (806000)  /* KHz */
-#define DVFS_BIG_F7 (403000)  /* KHz */
+#define DVFS_BIG_F4 (1143996) /* KHz */
+#define DVFS_BIG_F5 (1000992) /* KHz */
+#define DVFS_BIG_F6 (805992)  /* KHz */
+#define DVFS_BIG_F7 (402996)  /* KHz */
 
 #if defined(SLT_VMAX)
-#define DVFS_BIG_V0 (1150)    /* mV */
+#define DVFS_BIG_V0 (1350)    /* mV */
 #else
-#define DVFS_BIG_V0 (1100)    /* mV */
+#define DVFS_BIG_V0 (1300)    /* mV */
 #endif
-#define DVFS_BIG_V1 (1079)    /* mV */
-#define DVFS_BIG_V2 (1050)    /* mV */
-#define DVFS_BIG_V3 (1032)    /* mV */
-#define DVFS_BIG_V4 (1000)    /* mV */
-#define DVFS_BIG_V5 (963)     /* mV */
-#define DVFS_BIG_V6 (914)     /* mV */
-#define DVFS_BIG_V7 (814)     /* mV */
-
-#define DVFS_LITTLE_F0 (1690000) /* KHz */
-#define DVFS_LITTLE_F1 (1495000) /* KHz */
+#define DVFS_BIG_V1 (1279)    /* mV */
+#define DVFS_BIG_V2 (1250)    /* mV */
+#define DVFS_BIG_V3 (1232)    /* mV */
+#define DVFS_BIG_V4 (1200)    /* mV */
+#define DVFS_BIG_V5 (1163)     /* mV */
+#define DVFS_BIG_V6 (1114)     /* mV */
+#define DVFS_BIG_V7 (1014)     /* mV */
+
+#define DVFS_LITTLE_F0 (1689996) /* KHz */
+#define DVFS_LITTLE_F1 (1494996) /* KHz */
 #define DVFS_LITTLE_F2 (1365000) /* KHz */
 #define DVFS_LITTLE_F3 (1248000) /* KHz */
-#define DVFS_LITTLE_F4 (1144000) /* KHz */
-#define DVFS_LITTLE_F5 (1001000) /* KHz */
-#define DVFS_LITTLE_F6 (806000)  /* KHz */
-#define DVFS_LITTLE_F7 (403000)  /* KHz */
+#define DVFS_LITTLE_F4 (1143996) /* KHz */
+#define DVFS_LITTLE_F5 (1000992) /* KHz */
+#define DVFS_LITTLE_F6 (805992)  /* KHz */
+#define DVFS_LITTLE_F7 (402996)  /* KHz */
 
 #if defined(SLT_VMAX)
-#define DVFS_LITTLE_V0 (1150)    /* mV */
+#define DVFS_LITTLE_V0 (1350)    /* mV */
 #else
-#define DVFS_LITTLE_V0 (1125)    /* mV */
+#define DVFS_LITTLE_V0 (1325)    /* mV */
 #endif
-#define DVFS_LITTLE_V1 (1079)    /* mV */
-#define DVFS_LITTLE_V2 (1050)    /* mV */
-#define DVFS_LITTLE_V3 (1023)    /* mV */
-#define DVFS_LITTLE_V4 (1000)    /* mV */
-#define DVFS_LITTLE_V5 (963)     /* mV */
-#define DVFS_LITTLE_V6 (914)     /* mV */
-#define DVFS_LITTLE_V7 (814)     /* mV */
+#define DVFS_LITTLE_V1 (1279)    /* mV */
+#define DVFS_LITTLE_V2 (1250)    /* mV */
+#define DVFS_LITTLE_V3 (1223)    /* mV */
+#define DVFS_LITTLE_V4 (1200)    /* mV */
+#define DVFS_LITTLE_V5 (1163)     /* mV */
+#define DVFS_LITTLE_V6 (1114)     /* mV */
+#define DVFS_LITTLE_V7 (1014)     /* mV */
 
 #define PWR_THRO_MODE_LBAT_1365MHZ	BIT(0)
 #define PWR_THRO_MODE_BAT_OC_806MHZ	BIT(1)
@@ -162,6 +162,7 @@ extern void hp_limited_cpu_num(int num); // TODO: ask Marc to provide the head f
 #define HEX_FMT "0x%08x"
 #undef TAG
 
+#define cpufreq_debug_switch 0 //1
 #ifdef USING_XLOG
 #include <linux/xlog.h>
 
@@ -186,12 +187,18 @@ extern void hp_limited_cpu_num(int num); // TODO: ask Marc to provide the head f
 	printk(KERN_ERR TAG KERN_CONT fmt, ##args)
 #define cpufreq_warn(fmt, args...)      \
 	printk(KERN_WARNING TAG KERN_CONT fmt, ##args)
+#if cpufreq_debug_switch
 #define cpufreq_info(fmt, args...)      \
 	printk(KERN_NOTICE TAG KERN_CONT fmt, ##args)
 #define cpufreq_dbg(fmt, args...)       \
 	printk(KERN_INFO TAG KERN_CONT fmt, ##args)
 #define cpufreq_ver(fmt, args...)       \
 	printk(KERN_DEBUG TAG KERN_CONT fmt, ##args)
+#else
+#define cpufreq_info(fmt, args...)      
+#define cpufreq_dbg(fmt, args...)       
+#define cpufreq_ver(fmt, args...)      
+#endif
 
 #endif  /* USING_XLOG */
 
-- 
1.9.1

