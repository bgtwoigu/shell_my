diff --git a/external/wpa_supplicant_8/Android.mk b/external/wpa_supplicant_8/Android.mk
index 19714d2..4a74b24 100644
--- a/external/wpa_supplicant_8/Android.mk
+++ b/external/wpa_supplicant_8/Android.mk
@@ -8,15 +8,9 @@ ifeq ($(WPA_SUPPLICANT_VERSION),VER_0_8_X)
 # TODO: Clean up the Android.mks, reset all the temporary variables at the
 # end of each Android.mk, so that one Android.mk doesn't depend on variables
 # set up in the other Android.mk.
-ifeq ($(MTK_WAPI_SUPPORT), yes)
-include $(LOCAL_PATH)/hostapd/Android.mk \
-        $(LOCAL_PATH)/wpa_supplicant/Android.mk \
-        $(LOCAL_PATH)/wapi/Android.mk
-else
 include $(LOCAL_PATH)/hostapd/Android.mk \
         $(LOCAL_PATH)/wpa_supplicant/Android.mk
 endif
-endif
 ifeq ($(WPA_SUPPLICANT_VERSION),VER_2_1_DEVEL)
 include $(call all-subdir-makefiles)
 endif
diff --git a/external/wpa_supplicant_8/hostapd/Android.mk b/external/wpa_supplicant_8/hostapd/Android.mk
index bae374e..695e99c 100644
--- a/external/wpa_supplicant_8/hostapd/Android.mk
+++ b/external/wpa_supplicant_8/hostapd/Android.mk
@@ -36,17 +36,6 @@ ifeq ($(BOARD_WLAN_DEVICE), mrvl)
 L_CFLAGS += -DANDROID_P2P
 endif
 
-ifeq ($(strip $(BOARD_CONNECTIVITY_VENDOR)), MediaTek)
-$(warning set ANDROID_P2P)
-L_CFLAGS += -DANDROID_P2P
-endif
-
-L_CFLAGS += -DCONFIG_MTK_WPAPSK
-
-ifdef CONFIG_MTK_LTE_COEX
-L_CFLAGS += -DCONFIG_MTK_LTE_COEX
-endif
-
 # Use Android specific directory for control interface sockets
 L_CFLAGS += -DCONFIG_CTRL_IFACE_CLIENT_DIR=\"/data/misc/wifi/sockets\"
 L_CFLAGS += -DCONFIG_CTRL_IFACE_DIR=\"/data/system/hostapd\"
@@ -901,11 +890,6 @@ OBJS += src/ap/acs.c
 LIBS += -lm
 endif
 
-# MTK WiFi Hotspot Manager Support
-#ifeq ($(MTK_HOTSPOT_MGR_SUPPORT), yes)
-L_CFLAGS += -DCONFIG_HOTSPOT_MGR_SUPPORT
-#endif
-
 ########################
 
 include $(CLEAR_VARS)
diff --git a/external/wpa_supplicant_8/hostapd/Makefile b/external/wpa_supplicant_8/hostapd/Makefile
index fda4e4e..89fb851 100644
--- a/external/wpa_supplicant_8/hostapd/Makefile
+++ b/external/wpa_supplicant_8/hostapd/Makefile
@@ -6,6 +6,8 @@ ifndef CFLAGS
 CFLAGS = -MMD -O2 -Wall -g
 endif
 
+export BINDIR ?= /usr/local/bin/
+
 CFLAGS += -I../src
 CFLAGS += -I../src/utils
 
@@ -84,6 +86,14 @@ CONFIG_ELOOP=eloop
 endif
 OBJS += ../src/utils/$(CONFIG_ELOOP).o
 OBJS_c += ../src/utils/$(CONFIG_ELOOP).o
+
+ifeq ($(CONFIG_ELOOP), eloop)
+# Using glibc < 2.17 requires -lrt for clock_gettime()
+LIBS += -lrt
+LIBS_c += -lrt
+LIBS_h += -lrt
+endif
+
 OBJS += ../src/utils/common.o
 OBJS += ../src/utils/wpa_debug.o
 OBJS_c += ../src/utils/wpa_debug.o
@@ -865,9 +875,10 @@ verify_config:
 		exit 1; \
 	fi
 
-install: all
-	mkdir -p $(DESTDIR)/usr/local/bin
-	for i in $(ALL); do cp -f $$i $(DESTDIR)/usr/local/bin/$$i; done
+$(DESTDIR)$(BINDIR)/%: %
+	install -D $(<) $(@)
+
+install: $(addprefix $(DESTDIR)$(BINDIR)/,$(ALL))
 
 ../src/drivers/build.hostapd:
 	@if [ -f ../src/drivers/build.wpa_supplicant ]; then \
diff --git a/external/wpa_supplicant_8/hostapd/android.config b/external/wpa_supplicant_8/hostapd/android.config
index 2c397bc..51d6656 100644
--- a/external/wpa_supplicant_8/hostapd/android.config
+++ b/external/wpa_supplicant_8/hostapd/android.config
@@ -52,7 +52,7 @@ CONFIG_LIBNL20=y
 # This version is an experimental implementation based on IEEE 802.11w/D1.0
 # draft and is subject to change since the standard has not yet been finalized.
 # Driver support is also needed for IEEE 802.11w.
-#CONFIG_IEEE80211W=y
+CONFIG_IEEE80211W=y
 
 # Integrated EAP server
 #CONFIG_EAP=y
@@ -188,6 +188,3 @@ CONFIG_OS=unix
 
 # Enable AP
 CONFIG_AP=y
-
-#CONFIG_MTK_LTE_COEX support MTK LTE coexistence
-CONFIG_MTK_LTE_COEX=y
diff --git a/external/wpa_supplicant_8/hostapd/ctrl_iface.c b/external/wpa_supplicant_8/hostapd/ctrl_iface.c
index da081df..be941c4 100644
--- a/external/wpa_supplicant_8/hostapd/ctrl_iface.c
+++ b/external/wpa_supplicant_8/hostapd/ctrl_iface.c
@@ -949,32 +949,6 @@ static int hostapd_ctrl_iface_disable(struct hostapd_iface *iface)
 }
 
 
-#ifdef CONFIG_HOTSPOT_MGR_SUPPORT
-static int hostapd_driver_cmd(struct hostapd_data *hapd, char *cmd,
-				  char *buf, size_t buflen)
-{
-	int ret;
-
-	if (!hapd->driver->driver_cmd)
-		return -1;
-
-	ret = hapd->driver->driver_cmd(hapd->drv_priv, cmd, buf, buflen);
-	if (ret == 0) {
-		if (os_strncmp(cmd, "STA-BLOCK ", 10) == 0) {
-			u8 bssid[ETH_ALEN];
-			if (hwaddr_aton(cmd + 10, bssid))
-				return -1;
-
-			ap_sta_disconnect(hapd, NULL, bssid, WLAN_REASON_PREV_AUTH_NOT_VALID);
-		}
-
-		ret = sprintf(buf, "%s\n", "OK");
-	}
-
-	return ret;
-}
-#endif /* CONFIG_HOTSPOT_MGR_SUPPORT */
-
 static void hostapd_ctrl_iface_receive(int sock, void *eloop_ctx,
 				       void *sock_ctx)
 {
@@ -1145,11 +1119,6 @@ static void hostapd_ctrl_iface_receive(int sock, void *eloop_ctx,
 	} else if (os_strncmp(buf, "DISABLE", 7) == 0) {
 		if (hostapd_ctrl_iface_disable(hapd->iface))
 			reply_len = -1;
-#ifdef CONFIG_HOTSPOT_MGR_SUPPORT
-	} else if (os_strncmp(buf, "DRIVER ", 7) == 0) {
-		reply_len = hostapd_driver_cmd(hapd, buf + 7, reply,
-						   reply_size);
-#endif /* CONFIG_HOTSPOT_MGR_SUPPORT */
 	} else {
 		os_memcpy(reply, "UNKNOWN COMMAND\n", 16);
 		reply_len = 16;
diff --git a/frameworks/base/core/res/res/values/config.xml b/frameworks/base/core/res/res/values/config.xml
index 302be15..8001690 100755
--- a/frameworks/base/core/res/res/values/config.xml
+++ b/frameworks/base/core/res/res/values/config.xml
@@ -255,7 +255,7 @@
          Wifi interfaces.  If the device doesn't want to support tethering over Wifi this
          should be empty.  An example would be "softap.*" -->
     <string-array translatable="false" name="config_tether_wifi_regexs">
-        <item>"ap\\d"</item>
+        <item>"wlan\\d"</item>
     </string-array>
 
     <!-- List of regexpressions describing the interface (if any) that represent tetherable
diff --git a/frameworks/base/wifi/java/android/net/wifi/WifiStateMachine.java b/frameworks/base/wifi/java/android/net/wifi/WifiStateMachine.java
index 7fe9c3d..93391da 100644
--- a/frameworks/base/wifi/java/android/net/wifi/WifiStateMachine.java
+++ b/frameworks/base/wifi/java/android/net/wifi/WifiStateMachine.java
@@ -885,9 +885,9 @@ public class WifiStateMachine extends StateMachine {
         IBinder b = ServiceManager.getService(Context.NETWORKMANAGEMENT_SERVICE);
         mNwService = INetworkManagementService.Stub.asInterface(b);
 
-        mP2pSupported = mContext.getPackageManager().hasSystemFeature(
-                PackageManager.FEATURE_WIFI_DIRECT);
-
+        //mP2pSupported = mContext.getPackageManager().hasSystemFeature(
+          //      PackageManager.FEATURE_WIFI_DIRECT);
+		mP2pSupported = false;
         mWifiNative = new WifiNative(mInterfaceName);
         mWifiConfigStore = new WifiConfigStore(context, mWifiNative);
         mWifiMonitor = new WifiMonitor(this, mWifiNative);
diff --git a/frameworks/base/wifi/java/android/net/wifi/p2p/WifiP2pService.java b/frameworks/base/wifi/java/android/net/wifi/p2p/WifiP2pService.java
index 5935857..880c5c9 100644
--- a/frameworks/base/wifi/java/android/net/wifi/p2p/WifiP2pService.java
+++ b/frameworks/base/wifi/java/android/net/wifi/p2p/WifiP2pService.java
@@ -481,9 +481,9 @@ public class WifiP2pService extends IWifiP2pManager.Stub {
         mInterface = "p2p0";
         mNetworkInfo = new NetworkInfo(ConnectivityManager.TYPE_WIFI_P2P, 0, NETWORKTYPE, "");
 
-        mP2pSupported = mContext.getPackageManager().hasSystemFeature(
-                PackageManager.FEATURE_WIFI_DIRECT);
-
+       // mP2pSupported = mContext.getPackageManager().hasSystemFeature(
+         //       PackageManager.FEATURE_WIFI_DIRECT);
+		mP2pSupported = false;
         mThisDevice.primaryDeviceType = mContext.getResources().getString(
                 com.android.internal.R.string.config_wifi_p2p_device_type);
 
diff --git a/hardware/libhardware_legacy/wifi/wifi.c b/hardware/libhardware_legacy/wifi/wifi.c
index 9710d33..d4f0e93 100644
--- a/hardware/libhardware_legacy/wifi/wifi.c
+++ b/hardware/libhardware_legacy/wifi/wifi.c
@@ -689,7 +689,12 @@ int wifi_connect_on_socket_path(const char *path)
     char supp_status[PROPERTY_VALUE_MAX] = {'\0'};
 
     ALOGD("enter -->%s path=%s\n", __func__, path);
-
+	if (strcmp(path, "/data/misc/wifi/hostapd/ap0") ==0)
+	{
+		ALOGD("soft ap com socket come,old path = %s, change to rtlink wlan0 socket\n", path);
+		path = "/data/misc/wifi/hostapd/wlan0";
+		ALOGD("now sockect path = %s\n", path);
+	}
 #ifdef CONFIG_HOTSPOT_MGR_SUPPORT
     if (property_get(FW_PATH_PROP_NAME, current_fw_path, NULL)
             && strcmp(current_fw_path, WIFI_DRIVER_FW_PATH_AP) == 0) {
diff --git a/mediatek/config/mt6595/autoconfig/kconfig/platform b/mediatek/config/mt6595/autoconfig/kconfig/platform
index 221deff..8f1162b 100755
--- a/mediatek/config/mt6595/autoconfig/kconfig/platform
+++ b/mediatek/config/mt6595/autoconfig/kconfig/platform
@@ -328,9 +328,6 @@ CONFIG_HMP_GLOBAL_BALANCE=y
 CONFIG_HMP_TASK_ASSIGNMENT=y
 CONFIG_HMP_DISCARD_CFS_SELECTION_RESULT=y
 # CONFIG_HMP_PACK_SMALL_TASK is not set
-# CONFIG_HMP_PACK_BUDDY_INFO is not set
-CONFIG_HMP_LAZY_BALANCE=y
-CONFIG_HMP_POWER_AWARE_CONTROLLER=y
 CONFIG_HEVTASK_INTERFACE=y
 # CONFIG_ARCH_SCALE_INVARIANT_CPU_CAPACITY is not set
 # CONFIG_HAVE_ARM_ARCH_TIMER is not set
@@ -390,7 +387,7 @@ CONFIG_USE_OF=y
 CONFIG_ATAGS=y
 # CONFIG_DEPRECATED_PARAM_STRUCT is not set
 CONFIG_BUILD_ARM_APPENDED_DTB_IMAGE=y
-CONFIG_BUILD_ARM_APPENDED_DTB_IMAGE_NAMES=""
+CONFIG_BUILD_ARM_APPENDED_DTB_IMAGE_NAMES="ckt95_lw_kk"
 CONFIG_ZBOOT_ROM_TEXT=0
 CONFIG_ZBOOT_ROM_BSS=0
 # CONFIG_COMPAT_CPUINFO is not set
@@ -910,7 +907,18 @@ CONFIG_CFG80211_INTERNAL_REGDB=y
 CONFIG_CFG80211_WEXT=y
 # CONFIG_LIB80211 is not set
 # CONFIG_CFG80211_ALLOW_RECONNECT is not set
-# CONFIG_MAC80211 is not set
+CONFIG_MAC80211=y
+CONFIG_MAC80211_HAS_RC=y
+# CONFIG_MAC80211_RC_PID is not set
+CONFIG_MAC80211_RC_MINSTREL=y
+CONFIG_MAC80211_RC_MINSTREL_HT=y
+CONFIG_MAC80211_RC_DEFAULT_MINSTREL=y
+CONFIG_MAC80211_RC_DEFAULT="minstrel_ht"
+# CONFIG_MAC80211_MESH is not set
+# CONFIG_MAC80211_LEDS is not set
+# CONFIG_MAC80211_DEBUGFS is not set
+# CONFIG_MAC80211_MESSAGE_TRACING is not set
+# CONFIG_MAC80211_DEBUG_MENU is not set
 # CONFIG_WIMAX is not set
 # CONFIG_RFKILL is not set
 # CONFIG_NET_9P is not set
@@ -1221,14 +1229,39 @@ CONFIG_SLHC=y
 # CONFIG_USB_USBNET is not set
 # CONFIG_USB_IPHETH is not set
 CONFIG_WLAN=y
+# CONFIG_LIBERTAS_THINFIRM is not set
+# CONFIG_AT76C50X_USB is not set
 # CONFIG_USB_ZD1201 is not set
 # CONFIG_USB_NET_RNDIS_WLAN is not set
+# CONFIG_RTL8187 is not set
+# CONFIG_MAC80211_HWSIM is not set
 # CONFIG_WIFI_CONTROL_FUNC is not set
 # CONFIG_ATH_CARDS is not set
+# CONFIG_B43 is not set
+# CONFIG_B43LEGACY is not set
 # CONFIG_BRCMFMAC is not set
 # CONFIG_HOSTAP is not set
 # CONFIG_LIBERTAS is not set
+# CONFIG_P54_COMMON is not set
+CONFIG_RT2X00=m
+# CONFIG_RT2500USB is not set
+# CONFIG_RT73USB is not set
+CONFIG_RT2800USB=m
+CONFIG_RT2800USB_RT33XX=y
+CONFIG_RT2800USB_RT35XX=y
+CONFIG_RT2800USB_RT53XX=y
+CONFIG_RT2800USB_RT55XX=y
+CONFIG_RT2800USB_UNKNOWN=y
+CONFIG_RT2800_LIB=m
+CONFIG_RT2X00_LIB_USB=m
+CONFIG_RT2X00_LIB=m
+CONFIG_RT2X00_LIB_FIRMWARE=y
+CONFIG_RT2X00_LIB_CRYPTO=y
+CONFIG_RT2X00_LIB_LEDS=y
+CONFIG_RT2X00_DEBUG=y
+# CONFIG_RTLWIFI is not set
 # CONFIG_WL_TI is not set
+# CONFIG_ZD1211RW is not set
 # CONFIG_MWIFIEX is not set
 
 #
@@ -1688,7 +1721,8 @@ CONFIG_SND_DRIVERS=y
 CONFIG_SND_SOC=y
 # CONFIG_SND_ATMEL_SOC is not set
 CONFIG_MT_SND_SOC_V1=y
-# CONFIG_MTK_SPEAKER is not set
+CONFIG_MTK_SPEAKER=y
+# CONFIG_MTK_NXP_TFA9890 is not set
 CONFIG_SND_SOC_I2C_AND_SPI=y
 # CONFIG_SND_SOC_ALL_CODECS is not set
 CONFIG_SND_SIMPLE_CARD=y
@@ -2100,6 +2134,7 @@ CONFIG_RTC_INTF_DEV=y
 #
 CONFIG_STAGING=y
 # CONFIG_USBIP_CORE is not set
+# CONFIG_W35UND is not set
 # CONFIG_PRISM2_USB is not set
 # CONFIG_ECHO is not set
 # CONFIG_COMEDI is not set
@@ -2437,10 +2472,6 @@ CONFIG_TRACING_SUPPORT=y
 CONFIG_FTRACE=y
 CONFIG_FUNCTION_TRACER=y
 CONFIG_FUNCTION_GRAPH_TRACER=y
-CONFIG_DYNAMIC_FTRACE=y
-# CONFIG_FUNCTION_PROFILER is not set
-CONFIG_FTRACE_MCOUNT_RECORD=y
-# CONFIG_FUNCTION_DURATION_TRACER is not set
 # CONFIG_IRQSOFF_TRACER is not set
 # CONFIG_PREEMPT_TRACER is not set
 # CONFIG_SCHED_TRACER is not set
@@ -2453,6 +2484,9 @@ CONFIG_BRANCH_PROFILE_NONE=y
 # CONFIG_BLK_DEV_IO_TRACE is not set
 # CONFIG_KPROBE_EVENT is not set
 # CONFIG_PROBE_EVENTS is not set
+CONFIG_DYNAMIC_FTRACE=y
+# CONFIG_FUNCTION_PROFILER is not set
+CONFIG_FTRACE_MCOUNT_RECORD=y
 # CONFIG_FTRACE_STARTUP_TEST is not set
 # CONFIG_RING_BUFFER_BENCHMARK is not set
 # CONFIG_RING_BUFFER_STARTUP_TEST is not set
@@ -2472,6 +2506,7 @@ CONFIG_KDB_CONTINUE_CATASTROPHIC=0
 # CONFIG_TEST_KSTRTOX is not set
 # CONFIG_STRICT_DEVMEM is not set
 # CONFIG_ARM_UNWIND is not set
+CONFIG_OLD_MCOUNT=y
 # CONFIG_DEBUG_USER is not set
 CONFIG_DEBUG_RODATA=y
 # CONFIG_DEBUG_RODATA_TEST is not set
@@ -2660,7 +2695,7 @@ CONFIG_CPU_RMAP=y
 CONFIG_DQL=y
 CONFIG_NLATTR=y
 CONFIG_ARCH_HAS_ATOMIC64_DEC_IF_POSITIVE=y
-# CONFIG_AVERAGE is not set
+CONFIG_AVERAGE=y
 # CONFIG_CORDIC is not set
 # CONFIG_DDR is not set
 # CONFIG_VIRTUALIZATION is not set
@@ -2687,6 +2722,7 @@ CONFIG_MTK_SCHED_CMP_TGS_WAKEUP=y
 CONFIG_MTK_SCHED_TRACERS=y
 CONFIG_MTK_FTRACE_DEFAULT_ENABLE=y
 # CONFIG_MTK_KERNEL_MARKER is not set
+# CONFIG_FUNCTION_DURATION_TRACER is not set
 # CONFIG_MT65XX_TRACER is not set
 
 #
@@ -2701,10 +2737,11 @@ CONFIG_MTK_MET_PLF=y
 CONFIG_MTK_MUTATION=y
 CONFIG_MTPROF_CPUTIME=y
 CONFIG_MTPROF_IRQ_DURATION=y
-# CONFIG_MTK_AEE_FEATURE is not set
-# CONFIG_MTK_AEE_AED is not set
-# CONFIG_MTK_AEE_IPANIC is not set
-# CONFIG_MTK_AEE_MRDUMP is not set
+CONFIG_MTK_AEE_FEATURE=y
+CONFIG_MTK_AEE_AED=y
+CONFIG_MTK_AEE_IPANIC=y
+CONFIG_MTK_AEE_IPANIC_TYPES=0x0fffffff
+CONFIG_MTK_AEE_MRDUMP=y
 CONFIG_MTK_AEE_POWERKEY_HANG_DETECT=y
 # CONFIG_ANDROID_VMEM is not set
 # CONFIG_CPUTIME_SUPPORT is not set
@@ -2726,7 +2763,7 @@ CONFIG_PRINTK_PROCESS_INFO=y
 CONFIG_MT_PRINTK_UART_CONSOLE=y
 CONFIG_MT_ENG_BUILD=y
 CONFIG_RAMDISK_OFFSET=0xF00000
-CONFIG_EARLY_LINUX_PORTING=y
+# CONFIG_EARLY_LINUX_PORTING is not set
 # CONFIG_MTK_MCI is not set
 # CONFIG_MTK_ETM is not set
 CONFIG_MTK_MEMCFG=y
@@ -2739,8 +2776,6 @@ CONFIG_MT_SCHED=y
 CONFIG_MT_LOAD_BALANCE_ENHANCEMENT=y
 # CONFIG_MT_LOAD_BALANCE_PROFILER is not set
 # CONFIG_MT_SCHED_NOTICE is not set
-# CONFIG_MT_SCHED_INFO is not set
-# CONFIG_MT_SCHED_DEBUG is not set
 # CONFIG_MT_SCHED_DEBUG_ONLY is not set
 CONFIG_MTK_CIRQ=y
 CONFIG_MTK_HIBERNATION=y
@@ -2749,7 +2784,6 @@ CONFIG_MTK_WQ_DEBUG=y
 CONFIG_MTK_SCHED_RQAVG_US=y
 CONFIG_MTK_SCHED_RQAVG_KS=y
 CONFIG_MTK_STORAGE_PID_LOGGER=y
-CONFIG_MTK_CPU_TOPOLOGY=y
 
 #
 # MTK Large Memory mode support
@@ -2757,6 +2791,9 @@ CONFIG_MTK_CPU_TOPOLOGY=y
 CONFIG_MTK_LM_MODE=y
 CONFIG_GATOR_DRIVER=y
 CONFIG_MTK_SYSTRACKER=y
+CONFIG_VFP_OPT=y
+CONFIG_MT_DYNAMIC_COREPATH=y
+# CONFIG_MTK_WQHD is not set
 
 #
 # MT6595 Board Support Package
@@ -2778,7 +2815,9 @@ CONFIG_MTK_FB=y
 CONFIG_MTK_FB_SUPPORT_ASSERTION_LAYER=y
 CONFIG_GPS=y
 CONFIG_MTK_GPS=y
-# CONFIG_MTK_NFC is not set
+CONFIG_MTK_NFC=y
+CONFIG_NFC_MT6605=y
+# CONFIG_NFC_MSR3110 is not set
 # CONFIG_MTK_BTIF is not set
 CONFIG_MTK_COMBO=y
 CONFIG_MTK_COMBO_CHIP_MT6620=y
@@ -2802,7 +2841,7 @@ CONFIG_MTK_I2C=y
 CONFIG_MTK_SPI=y
 CONFIG_MTK_CMMB=m
 # CONFIG_MTK_JPEG is not set
-# CONFIG_MTK_KEYPAD is not set
+CONFIG_MTK_KEYPAD=y
 # CONFIG_KEYBOARD_HID is not set
 CONFIG_MTK_LEDS=y
 CONFIG_MTK_MMC=y
@@ -2816,14 +2855,13 @@ CONFIG_MTK_MMC=y
 CONFIG_MTK_SMART_BATTERY=y
 CONFIG_MTK_PMIC=y
 CONFIG_MTK_PMIC_WRAP=y
-CONFIG_POWER_EXT=y
+# CONFIG_POWER_EXT is not set
 CONFIG_MTK_RTC=y
 CONFIG_MTK_SERIAL=y
 CONFIG_MTK_SERIAL_CONSOLE=y
 # CONFIG_MTK_SERIAL_MODEM_TEST is not set
 # CONFIG_MTK_SIM2 is not set
 # CONFIG_MTK_SOUND is not set
-# CONFIG_MTK_NXP_TFA9890 is not set
 CONFIG_MTK_TOUCHPANEL=y
 CONFIG_MTK_USB_GADGET=y
 # CONFIG_USB_MU3D_PIO_ONLY is not set
@@ -2844,8 +2882,6 @@ CONFIG_MTK_WD_KICKER=y
 # CONFIG_MT592X_SDIO_CLNT is not set
 # CONFIG_USB_MTK_ACM_TEMP is not set
 # CONFIG_USB_MTK_HDRC is not set
-CONFIG_USB_MTK_HDRC_HCD=y
-CONFIG_USB_MTK_OTG=y
 # CONFIG_USB_MTK_HDRC_GADGET is not set
 # CONFIG_USB_MTK_OTG is not set
 CONFIG_USB_MTK_DUALMODE=y
@@ -2866,12 +2902,9 @@ CONFIG_MTKPASR_MAFL=y
 CONFIG_MTKPASR_DEBUG=y
 # CONFIG_MTKPASR_NO_LASTBANK is not set
 # CONFIG_PWR_LOSS_MTK_TEST is not set
-# CONFIG_MTK_EMMC_CACHE is not set
 CONFIG_MTK_EMMC_CACHE=y
 CONFIG_PVR_RGX_MT6595=y
 # CONFIG_MTK_THERMAL_STATUS_COLLECTION is not set
 CONFIG_MD32_SUPPORT=y
 CONFIG_MTK_FAKE_CORE_COUNT=0
-CONFIG_VFP_OPT=y
-CONFIG_MT_DYNAMIC_COREPATH=y
-CONFIG_MTK_WQHD=n
+CONFIG_MTK_CPU_TOPOLOGY=y
diff --git a/mediatek/config/mt6595/init.rc b/mediatek/config/mt6595/init.rc
index accf551..8491bac 100755
--- a/mediatek/config/mt6595/init.rc
+++ b/mediatek/config/mt6595/init.rc
@@ -1394,20 +1394,6 @@ service rmmod rmmod
 
 #remove -puse_p2p_group_interface=1. our driver doesnot support this ffeature
 #
-service p2p_supplicant /system/bin/wpa_supplicant \
-	-iwlan0 -Dnl80211 -c/data/misc/wifi/wpa_supplicant.conf \
-	-I/system/etc/wifi/wpa_supplicant_overlay.conf -N \
-	-ip2p0 -Dnl80211 -c/data/misc/wifi/p2p_supplicant.conf -e/data/misc/wifi/entropy.bin -ddd \
-	-I/system/etc/wifi/p2p_supplicant_overlay.conf \
-	-O/data/misc/wifi/sockets -g@android:wpa_wlan0
-	#   we will start as root and wpa_supplicant will switch to user wifi
-	#   after setting up the capabilities required for WEXT
-	#   user wifi
-	#   group wifi inet keystore
-	class main
-	socket wpa_wlan0 dgram 660 wifi wifi
-	disabled
-	oneshot
 
 service wpa_supplicant /system/bin/wpa_supplicant \
 	-iwlan0 -Dnl80211 -c/data/misc/wifi/wpa_supplicant.conf -e/data/misc/wifi/entropy.bin -ddd \
@@ -1423,7 +1409,7 @@ service wpa_supplicant /system/bin/wpa_supplicant \
 	oneshot
 
 service ap_daemon /system/bin/wpa_supplicant \
-	-iap0 -Dnl80211 -c/data/misc/wifi/p2p_supplicant.conf -e/data/misc/wifi/entropy.bin -puse_p2p_group_interface=1 -ddd
+	-iwlan0 -Dnl80211 -c/data/misc/wifi/p2p_supplicant.conf -e/data/misc/wifi/entropy.bin -puse_p2p_group_interface=1 -ddd
 	#   we will start as root and wpa_supplicant will switch to user wifi
 	#   after setting up the capabilities required for WEXT
 	#   user wifi
diff --git a/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_driver.c b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_driver.c
index 49d260d..913fb6a 100755
--- a/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_driver.c
+++ b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_driver.c
@@ -2451,7 +2451,7 @@ static void elan_touch_esd_func(struct work_struct *work)
     //add by baojun.fu for i'm alive
     static int por_cnt = 0;
 
-    printk("[elan esd] %s: enter.......\n", __FUNCTION__);      /* elan_dlx */
+ //   printk("[elan esd] %s: enter.......\n", __FUNCTION__);      /* elan_dlx */
     if(work_lock == 1) //updating or doing something else
     {
         printk("[elan esd] %s: work locked ..\n", __FUNCTION__);        /* elan_dlx */
@@ -2461,7 +2461,7 @@ static void elan_touch_esd_func(struct work_struct *work)
 
     if(have_interrupts == 1)
     {
-        printk("[elan esd] %s: had interrup not need check\n", __func__);
+  //      printk("[elan esd] %s: had interrup not need check\n", __func__);
     }
     else
     {
@@ -2531,7 +2531,7 @@ static void elan_touch_esd_func(struct work_struct *work)
 
     have_interrupts = 0;
     queue_delayed_work(esd_wq, &esd_work, delay);
-    printk("[elan esd] %s: exit.......\n", __FUNCTION__);       /* elan_dlx */
+    //printk("[elan esd] %s: exit.......\n", __FUNCTION__);       /* elan_dlx */
 }
 #endif
 
diff --git a/mediatek/external/mtk_wifi/config/mtk-wpa_supplicant.conf b/mediatek/external/mtk_wifi/config/mtk-wpa_supplicant.conf
index ef8a8af..0a73b19 100755
--- a/mediatek/external/mtk_wifi/config/mtk-wpa_supplicant.conf
+++ b/mediatek/external/mtk_wifi/config/mtk-wpa_supplicant.conf
@@ -7,6 +7,4 @@ model_number=1.0
 serial_number=2.0
 device_type=10-0050F204-5
 os_version=01020300
-config_methods=display push_button keypad
-p2p_no_group_iface=1
-driver_param=use_p2p_group_interface=1
+
diff --git a/mediatek/kernel/drivers/power/battery_common.c b/mediatek/kernel/drivers/power/battery_common.c
index 8b14104..247aead 100755
--- a/mediatek/kernel/drivers/power/battery_common.c
+++ b/mediatek/kernel/drivers/power/battery_common.c
@@ -75,7 +75,7 @@
 ////////////////////////////////////////////////////////////////////////////////
 // Battery Logging Entry
 ////////////////////////////////////////////////////////////////////////////////
-int Enable_BATDRV_LOG = BAT_LOG_CRTI;
+int Enable_BATDRV_LOG = 0;
 //static struct proc_dir_entry *proc_entry;
 char proc_bat_data[32];  
 
diff --git a/mediatek/platform/mt6595/kernel/drivers/thermal/mtk_ts_cpu.c b/mediatek/platform/mt6595/kernel/drivers/thermal/mtk_ts_cpu.c
index 9028f58..9dce2f5 100644
--- a/mediatek/platform/mt6595/kernel/drivers/thermal/mtk_ts_cpu.c
+++ b/mediatek/platform/mt6595/kernel/drivers/thermal/mtk_ts_cpu.c
@@ -413,9 +413,6 @@ static void set_adaptive_cpu_power_limit(unsigned int limit)
 
     if (prv_adp_cpu_pwr_lim != adaptive_cpu_power_limit)
     {
-        tscpu_printk("set_adaptive_cpu_power_limit %d, T=%d,%d,%d,%d,%d,%d,%d,%d,%d\n", (final_limit != 0x7FFFFFFF) ? final_limit : 0,
-                     CA7_TS1_T, CA15_TS1_T, CA7_TS2_T, CORE_TS2_T, CA15_TS3_T, GPU_TS3_T, GPU_TS4_T, CORE_TS4_T, CORE_TSABB_T);
-
         mt_cpufreq_thermal_protect((final_limit != 0x7FFFFFFF) ? final_limit : 0);
     }
 }
diff --git a/mediatek/platform/mt6595/kernel/drivers/videox/primary_display.c b/mediatek/platform/mt6595/kernel/drivers/videox/primary_display.c
index 9fbbe7c..c66d19b 100755
--- a/mediatek/platform/mt6595/kernel/drivers/videox/primary_display.c
+++ b/mediatek/platform/mt6595/kernel/drivers/videox/primary_display.c
@@ -1127,7 +1127,7 @@ int primary_display_esd_check(void)
 
 	dprec_logger_start(DPREC_LOGGER_ESD_CHECK, 0, 0);
 	MMProfileLogEx(ddp_mmp_get_events()->esd_check_t, MMProfileFlagStart, 0, 0);
-	DISPCHECK("[ESD]ESD check begin\n");
+	//DISPCHECK("[ESD]ESD check begin\n");
 
         _primary_path_lock(__func__);
 	if(pgc->state == DISP_SLEEPED)
@@ -1293,7 +1293,7 @@ destory_cmdq:
 	MMProfileLogEx(ddp_mmp_get_events()->esd_rdlcm, MMProfileFlagEnd, 0, ret);
 
 done:
-	DISPCHECK("[ESD]ESD check end\n");
+	//DISPCHECK("[ESD]ESD check end\n");
 	MMProfileLogEx(ddp_mmp_get_events()->esd_check_t, MMProfileFlagEnd, 0, ret);	
 	dprec_logger_done(DPREC_LOGGER_ESD_CHECK, 0, 0);
 	return ret;
diff --git a/mediatek/preloader/preloader_ckt95_lw_kk.bin b/mediatek/preloader/preloader_ckt95_lw_kk.bin
index 1bac548..e3cd6d6 100644
Binary files a/mediatek/preloader/preloader_ckt95_lw_kk.bin and b/mediatek/preloader/preloader_ckt95_lw_kk.bin differ
diff --git a/system/netd/SoftapController.cpp b/system/netd/SoftapController.cpp
index f296980..57c989a 100644
--- a/system/netd/SoftapController.cpp
+++ b/system/netd/SoftapController.cpp
@@ -45,6 +45,7 @@
 
 static const char HOSTAPD_CONF_FILE[]    = "/data/misc/wifi/hostapd.conf";
 static const char HOSTAPD_BIN_FILE[]    = "/system/bin/hostapd";
+//static const char HOSTAPD_CONF_FILE[]  =  "/system/etc/mytest_hostapd.conf";
 
 SoftapController::SoftapController()
     : mPid(0) {}
@@ -67,7 +68,7 @@ int SoftapController::startSoftap() {
 
     if (!pid) {
         ensure_entropy_file_exists();
-        if (execl(HOSTAPD_BIN_FILE, HOSTAPD_BIN_FILE,
+        if (execl(HOSTAPD_BIN_FILE, HOSTAPD_BIN_FILE, "-d",
                   "-e", WIFI_ENTROPY_FILE,
                   HOSTAPD_CONF_FILE, (char *) NULL)) {
             ALOGE("execl failed (%s)", strerror(errno));
@@ -171,14 +172,14 @@ int SoftapController::setSoftap(int argc, char *argv[]) {
  */
     if (argc > 9) {
         asprintf(&wbuf, "interface=%s\ndriver=nl80211\nctrl_interface="
-            "/data/misc/wifi/hostapd\nssid=%s\nchannel=%d\nieee80211n=1\n"
+            "/data/misc/wifi/hostapd\nssid=%s\nchannel=%d\nieee80211n=0\n"
             "hw_mode=g\nignore_broadcast_ssid=%d\nmax_num_sta=%d\n"
         #ifndef MTK_BSP_PACKAGE
             "eap_server=1\nwps_state=2\nconfig_methods=display physical_display push_button\n"
         #endif
-            "device_name=AndroidAP\nmanufacturer=MediaTek Inc.\nmodel_name=MTK Wireless Model\n"
-            "model_number=66xx\nserial_number=1.0\ndevice_type=10-0050F204-5\n",
-            "ap0", argv[3], channel, hidden, atoi(argv[9]));
+            "device_name=AndroidAP\n"
+            "auth_algs=1\nwpa_key_mgmt=WPA-PSK\n",
+            "wlan0", argv[3], channel, hidden, atoi(argv[9]));
     } else {
         asprintf(&wbuf, "interface=%s\ndriver=nl80211\nctrl_interface="
             "/data/misc/wifi/hostapd\nssid=%s\nchannel=%d\nieee80211n=1\n"
@@ -272,7 +273,8 @@ int SoftapController::fwReloadSoftap(int argc, char *argv[])
         return ResponseCode::CommandParameterError;
     if (wifi_change_fw_path((const char *)fwpath)) {
         ALOGE("Softap fwReload failed");
-        return ResponseCode::OperationFailed;
+		ALOGD("##### test wifi dongle so return OK");
+        //return ResponseCode::OperationFailed;
     }
     else {
         ALOGD("Softap fwReload - Ok");
diff --git a/system/netd/SoftapController.h b/system/netd/SoftapController.h
index 7063067..65cebbd 100644
--- a/system/netd/SoftapController.h
+++ b/system/netd/SoftapController.h
@@ -25,7 +25,7 @@
 #define AP_BSS_STOP_DELAY	500000
 #define AP_SET_CFG_DELAY	500000
 #define AP_DRIVER_START_DELAY	800000
-#define AP_CHANNEL_DEFAULT	6
+#define AP_CHANNEL_DEFAULT	9
 
 class SoftapController {
 public:
