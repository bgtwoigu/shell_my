From b39b388f007902870b7a295d81e084f52c406ef8 Mon Sep 17 00:00:00 2001
From: "haolong.zhang" <haolong.zhang@ck-telecom.com>
Date: Mon, 20 Oct 2014 11:25:54 +0800
Subject: [PATCH] msg step2

Change-Id: If9d12325a24f2378248a66e75cbff1dcabfd4ce2
---
 mediatek/config/ckt95_lw_kk/ProjectConfig.mk       |    2 +-
 .../msg2133_and_ektf2k_v2/ektf2k_driver.c          | 2724 ++++++++++++++
 .../msg2133_and_ektf2k_v2/ektf2k_driver.h          |   90 +
 .../msg2133_and_ektf2k_v2/ektf2k_firmware.h        |   33 +
 .../msg2133_and_ektf2k_v2/hicam_mstar_update.i     | 2112 +++++++++++
 .../msg2133_and_ektf2k_v2/huaruichuan_03.i         |  250 ++
 .../msg2133_and_ektf2k_v2/msg2133_driver_gesture.c | 3864 ++++++++++++++++++++
 .../msg2133_and_ektf2k_v2/tpd_custom_ektf2k.h      |   46 +
 .../msg2133_and_ektf2k_v2/tpd_custom_msg2133.h     |  158 +
 9 files changed, 9278 insertions(+), 1 deletion(-)
 create mode 100755 mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_driver.c
 create mode 100755 mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_driver.h
 create mode 100755 mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_firmware.h
 create mode 100644 mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/hicam_mstar_update.i
 create mode 100755 mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/huaruichuan_03.i
 create mode 100644 mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/msg2133_driver_gesture.c
 create mode 100755 mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/tpd_custom_ektf2k.h
 create mode 100644 mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/tpd_custom_msg2133.h

diff --git a/mediatek/config/ckt95_lw_kk/ProjectConfig.mk b/mediatek/config/ckt95_lw_kk/ProjectConfig.mk
index fda8f33..4d10c7f 100755
--- a/mediatek/config/ckt95_lw_kk/ProjectConfig.mk
+++ b/mediatek/config/ckt95_lw_kk/ProjectConfig.mk
@@ -169,7 +169,7 @@ CUSTOM_KERNEL_SUB_IMGSENSOR=
 CUSTOM_KERNEL_SUB_LENS=
 
 # touch driver  need to report correct touch axes
-CUSTOM_KERNEL_TOUCHPANEL=msg2133_and_ektf2k  #GT9XX_hotknot
+CUSTOM_KERNEL_TOUCHPANEL=msg2133_and_ektf2k_v2  #GT9XX_hotknot
 
 # Configuration for USB PHY
 CUSTOM_KERNEL_USB=mt6577
diff --git a/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_driver.c b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_driver.c
new file mode 100755
index 0000000..49d260d
--- /dev/null
+++ b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_driver.c
@@ -0,0 +1,2724 @@
+//TP driver
+#include "tpd.h"
+#include "ektf2k_driver.h"
+#include "tpd_custom_ektf2k.h"
+#include "ektf2k_firmware.h"
+#include <linux/dma-mapping.h>
+
+#ifdef TP_PROXIMITY_SENSOR_NEW
+#include <linux/hwmsensor.h>
+#include <linux/hwmsen_dev.h>
+#include <linux/sensors_io.h>
+static int PROXIMITY =0;
+static int PROXIMITY_STATE = -1;
+static U8 PROXIMITY_SLEEP = 0;
+
+static int CTP_Face_Mode_State(void);
+static  int CTP_Face_Mode_Switch(int onoff_state);
+static  int Get_Ctp_Face_Mode(void);
+s32 ektf2k_ps_operate(void *self, u32 command, void *buff_in, s32 size_in,
+                      void *buff_out, s32 size_out, s32 *actualout);
+#endif
+
+#ifdef ESD_CHECK
+int have_interrupts = 0;
+struct workqueue_struct *esd_wq = NULL;
+struct delayed_work esd_work;
+unsigned long delay = 2*HZ;
+static void elan_touch_esd_func(struct work_struct *work);
+#endif
+
+#if (defined(TPD_WARP_START) && defined(TPD_WARP_END))
+static int tpd_wb_start_local[TPD_WARP_CNT] = TPD_WARP_START;
+static int tpd_wb_end_local[TPD_WARP_CNT]   = TPD_WARP_END;
+#endif
+#if (defined(TPD_HAVE_CALIBRATION) && !defined(TPD_CUSTOM_CALIBRATION))
+static int tpd_calmat_local[8]     = TPD_CALIBRATION_MATRIX;
+static int tpd_def_calmat_local[8] = TPD_CALIBRATION_MATRIX;
+#endif
+
+//below add for ekt and mstar compat
+int ektf2k_probed = 0;
+int have_ektf2k_chip_on_board = 0;
+//end add for ekt and mstar compat
+#define MTK_ELAN_DEBUG
+#ifdef MTK_ELAN_DEBUG
+static int ekt_debug = 0,  ekt_debug_in = 0, man_made = 0;
+module_param(ekt_debug, int, 00664);
+module_param(man_made, int, 00664);
+#define MTK_TP_DEBUG(fmt, args ...) \
+do { \
+	if (ekt_debug || ekt_debug_in) { \
+		printk("Elan: %5d: " fmt, __LINE__,##args); \
+	} \
+} while(0)
+#else
+#define MTK_TP_DEBUG(fmt, args ...)
+#endif
+//below add for reflush IC
+#ifdef _DMA_MODE_
+#define NEED_FLUSH_DMA 150
+#endif
+#define NEED_RESET_IC 155
+static unsigned int err_buf_times = 0;
+static unsigned int dma_alloc_err = 0;
+//end add for reflush IC
+#ifdef TPD_HAVE_BUTTON
+#define TPD_BUTTON_HEIGH                100
+#define TPD_KEY_COUNT           2
+#define TPD_KEYS                { KEY_MENU, KEY_BACK}
+#define TPD_KEYS_DIM            {{107,1370,109,TPD_BUTTON_HEIGH},{300,1370,109,TPD_BUTTON_HEIGH}}
+static struct kobject *ektf2t_kobj;
+static int tpd_keys_local[TPD_KEY_COUNT] = TPD_KEYS;
+static int tpd_keys_dim_local[TPD_KEY_COUNT][4] = TPD_KEYS_DIM;
+#endif
+
+// modify
+#define SYSTEM_RESET_PIN_SR   135
+
+//Add these Define
+
+#ifdef IAP_PORTION                         //upgrade  FW DMA mode
+#define _DMA_FW_UPGRADE_MODE_
+#endif
+#define PAGERETRY                   30
+#define IAPRESTART                  5
+
+
+#ifdef _DMA_MODE_
+static uint8_t *gpDMABuf_va = NULL;
+static uint32_t *gpDMABuf_pa = NULL;
+#endif
+
+#ifdef _DMA_FW_UPGRADE_MODE_
+static uint8_t *gpDMAFWBuf_va = NULL;
+static uint32_t *gpDMAFWBuf_pa = NULL;
+static int elan_i2c_dma_fw_recv_data(struct i2c_client *client, uint8_t *buf,uint8_t len);
+static int elan_i2c_dma_fw_send_data(struct i2c_client *client, uint8_t *buf,uint8_t len);
+#endif
+
+// For Firmware Update
+#define ELAN_IOCTLID                            0xD0
+#define IOCTL_I2C_SLAVE                 _IOW(ELAN_IOCTLID, 1, int)
+#define IOCTL_MAJOR_FW_VER                  _IOR(ELAN_IOCTLID, 2, int)
+#define IOCTL_MINOR_FW_VER                  _IOR(ELAN_IOCTLID, 3, int)
+#define IOCTL_RESET                                 _IOR(ELAN_IOCTLID, 4, int)
+#define IOCTL_IAP_MODE_LOCK                 _IOR(ELAN_IOCTLID, 5, int)
+#define IOCTL_CHECK_RECOVERY_MODE   _IOR(ELAN_IOCTLID, 6, int)
+#define IOCTL_FW_VER                            _IOR(ELAN_IOCTLID, 7, int)
+#define IOCTL_X_RESOLUTION                  _IOR(ELAN_IOCTLID, 8, int)
+#define IOCTL_Y_RESOLUTION                  _IOR(ELAN_IOCTLID, 9, int)
+#define IOCTL_FW_ID                                 _IOR(ELAN_IOCTLID, 10, int)
+#define IOCTL_ROUGH_CALIBRATE           _IOR(ELAN_IOCTLID, 11, int)
+#define IOCTL_IAP_MODE_UNLOCK           _IOR(ELAN_IOCTLID, 12, int)
+#define IOCTL_I2C_INT                           _IOR(ELAN_IOCTLID, 13, int)
+#define IOCTL_RESUME                            _IOR(ELAN_IOCTLID, 14, int)
+#define IOCTL_POWER_LOCK                    _IOR(ELAN_IOCTLID, 15, int)
+#define IOCTL_POWER_UNLOCK                  _IOR(ELAN_IOCTLID, 16, int)
+#define IOCTL_FW_UPDATE                         _IOR(ELAN_IOCTLID, 17, int)
+#define IOCTL_BC_VER                            _IOR(ELAN_IOCTLID, 18, int)
+#define IOCTL_2WIREICE                          _IOR(ELAN_IOCTLID, 19, int)
+
+#define CUSTOMER_IOCTLID                        0xA0
+#define IOCTL_CIRCUIT_CHECK                 _IOR(CUSTOMER_IOCTLID, 1, int)
+#define IOCTL_GET_UPDATE_PROGREE    _IOR(CUSTOMER_IOCTLID, 2, int)
+
+extern struct tpd_device *tpd;
+
+uint8_t RECOVERY=0x00;
+int FW_VERSION=0x00;
+int X_RESOLUTION=0x00;
+int Y_RESOLUTION=0x00;
+int FW_ID=0x00;
+int BC_VERSION = 0x00;
+int work_lock=0x00;
+int power_lock=0x00;
+int circuit_ver=0x01;
+int button_state = 0;
+static int probe_flage=0;
+
+/*++++i2c transfer start+++++++*/
+#ifdef ELAN_3K_IC_SOLUTION
+int file_fops_addr=0x10;
+#else
+int file_fops_addr=0x15;
+#endif
+/*++++i2c transfer end+++++++*/
+
+int tpd_down_flag=0;
+int tpd_reg_flag=0;// 1 -->elan; 0 -->other;
+
+struct i2c_client *i2c_client = NULL;
+struct task_struct *thread = NULL;
+struct task_struct *update_thread = NULL;
+
+static DECLARE_WAIT_QUEUE_HEAD(waiter);
+static inline int elan_ktf2k_ts_parse_xy(uint8_t *data,
+        uint16_t *x, uint16_t *y);
+extern void mt_eint_unmask(unsigned int line);
+extern void mt_eint_mask(unsigned int line);
+extern void mt_eint_set_hw_debounce(unsigned int eintno, unsigned int ms);
+extern unsigned int mt_eint_set_sens(unsigned int eintno, unsigned int sens);
+extern void mt_eint_registration(unsigned int eint_num, unsigned int flag,
+                                 void (EINT_FUNC_PTR) (void), unsigned int is_auto_umask);
+
+
+static int tpd_probe(struct i2c_client *client, const struct i2c_device_id *id);
+static int tpd_detect(struct i2c_client *client, int kind, struct i2c_board_info *info);
+static int tpd_remove(struct i2c_client *client);
+static int touch_event_handler(void *unused);
+
+
+static int tpd_flag = 0;
+
+#ifdef IAP_PORTION
+uint8_t ic_status=0x00;  //0:OK 1:master fail 2:slave fail
+int update_progree=0;
+
+#ifdef ELAN_3K_IC_SOLUTION
+uint8_t I2C_DATA[3] = {0x10, 0x20, 0x21};/*I2C devices address*/
+#else
+uint8_t I2C_DATA[3] = {0x15, 0x20, 0x21};/*I2C devices address*/
+#endif
+
+int is_OldBootCode = 0; // 0:new 1:old
+
+static uint8_t* file_fw_data = NULL;
+
+enum
+{
+    PageSize           = 132,
+    PageNum            = 249,
+    ACK_Fail           = 0x00,
+    ACK_OK             = 0xAA,
+    ACK_REWRITE        = 0x55,
+};
+
+enum
+{
+    E_FD               = -1,
+};
+#endif
+
+static const struct i2c_device_id tpd_id[] =
+{
+    { "ektf2k", 0 },
+    { }
+};
+
+#ifdef ELAN_3K_IC_SOLUTION
+static struct i2c_board_info __initdata ektf2k_i2c_tpd = { I2C_BOARD_INFO("ektf2k", (0x20>>1))};
+#else
+static struct i2c_board_info __initdata ektf2k_i2c_tpd = { I2C_BOARD_INFO("ektf2k", (0x2a>>1))};
+#endif
+
+static struct i2c_driver tpd_i2c_driver =
+{
+    .driver = {
+        .name = "ektf2k",
+//        .owner = THIS_MODULE,
+    },
+    .probe = tpd_probe,
+    .remove =  tpd_remove,
+    .id_table = tpd_id,
+    .detect = tpd_detect,
+//    .address_data = &addr_data,
+};
+
+struct elan_ktf2k_ts_data
+{
+    struct i2c_client *client;
+    struct input_dev *input_dev;
+    struct workqueue_struct *elan_wq;
+    struct work_struct work;
+    struct early_suspend early_suspend;
+    int intr_gpio;
+// Firmware Information
+    int fw_ver;
+    int fw_id;
+    int bc_ver;
+    int x_resolution;
+    int y_resolution;
+// For Firmare Update
+    struct miscdevice firmware;
+    struct hrtimer timer;
+};
+
+static struct elan_ktf2k_ts_data *private_ts;
+static int __hello_packet_handler(struct i2c_client *client);
+static int __check_ekt_ic_on_board(struct i2c_client *client);
+static int __fw_packet_handler(struct i2c_client *client);
+static int elan_ktf2k_ts_rough_calibrate(struct i2c_client *client);
+static int tpd_resume(struct i2c_client *client);
+
+#ifdef IAP_PORTION
+static int update_fw_handler(void *unused);
+int Update_FW_One(/*struct file *filp,*/ struct i2c_client *client, int recovery);
+int IAPReset();
+#endif
+
+#ifdef _DMA_MODE_
+static int elan_i2c_dma_recv_data(struct i2c_client *client, uint8_t *buf,uint8_t len)
+{
+    int rc;
+    uint8_t *pReadData = 0;
+    unsigned short addr = 0;
+    addr = client->addr ;
+    client->addr |= I2C_DMA_FLAG;
+    pReadData = gpDMABuf_va;
+    if(!pReadData)
+    {
+        printk("[elan] dma_alloc_coherent failed!\n");
+        return -1;
+    }
+    rc = i2c_master_recv(client, gpDMABuf_pa, len);
+    printk("[elan] elan_i2c_dma_recv_data rc=%d!\n",rc);
+    copy_to_user(buf, pReadData, len);
+    client->addr = addr;
+    return rc;
+}
+
+static int elan_i2c_dma_send_data(struct i2c_client *client, uint8_t *buf,uint8_t len)
+{
+    int rc;
+    unsigned short addr = 0;
+    addr = client->addr ;
+    client->addr |= I2C_DMA_FLAG;
+    uint8_t *pWriteData = gpDMABuf_va;
+    if(!pWriteData)
+    {
+        printk("[elan] dma_alloc_coherent failed!\n");
+        return -1;
+    }
+    copy_from_user(pWriteData, ((void*)buf), len);
+
+    rc = i2c_master_send(client, gpDMABuf_pa, len);
+    printk("[elan] elan_i2c_dma_send_data rc=%d!\n",rc);
+    client->addr = addr;
+    return rc;
+}
+#endif
+
+//DMA_FW_Upgrade Start Function
+#ifdef _DMA_FW_UPGRADE_MODE_
+static int elan_i2c_dma_fw_recv_data(struct i2c_client *client, uint8_t *buf,uint8_t len)
+{
+    int rc;
+    uint8_t *pReadData = 0;
+    unsigned short addr = 0;
+    addr = client->addr ;
+    client->addr |= I2C_DMA_FLAG;
+    pReadData = gpDMAFWBuf_va;
+    if(!pReadData)
+    {
+        printk("[elan] dma_alloc_coherent failed!\n");
+        return -1;
+    }
+    rc = i2c_master_recv(client, gpDMAFWBuf_pa, len);
+    printk("[elan] elan_i2c_dma_recv_data rc=%d!\n",rc);
+    copy_to_user(buf, pReadData, len);
+    client->addr = addr;
+    return rc;
+}
+
+static int elan_i2c_dma_fw_send_data(struct i2c_client *client, uint8_t *buf,uint8_t len)
+{
+    int rc;
+    unsigned short addr = 0;
+    addr = client->addr ;
+    client->addr |= I2C_DMA_FLAG;
+    uint8_t *pWriteData = gpDMAFWBuf_va;
+    if(!pWriteData)
+    {
+        printk("[elan] dma_alloc_coherent failed!\n");
+        return -1;
+    }
+    copy_from_user(pWriteData, ((void*)buf), len);
+
+    rc = i2c_master_send(client, gpDMAFWBuf_pa, len);
+    printk("[elan] elan_i2c_dma_send_data rc=%d!\n",rc);
+    client->addr = addr;
+    return rc;
+}
+#endif
+//DMA_FW_Upgrade End Function
+
+// For Firmware Update
+int elan_iap_open(struct inode *inode, struct file *filp)
+{
+
+    printk("[ELAN]into elan_iap_open\n");
+    if (private_ts == NULL)  printk("private_ts is NULL~~~");
+
+    return 0;
+}
+
+int elan_iap_release(struct inode *inode, struct file *filp)
+{
+    return 0;
+}
+
+static ssize_t elan_iap_write(struct file *filp, const char *buff, size_t count, loff_t *offp)
+{
+    int ret;
+    char *tmp;
+
+    printk("[ELAN]into elan_iap_write\n");
+    if (count > 8192)
+        count = 8192;
+
+    tmp = kmalloc(count, GFP_KERNEL);
+
+    if (tmp == NULL)
+        return -ENOMEM;
+
+    if (copy_from_user(tmp, buff, count))
+    {
+        return -EFAULT;
+    }
+#if 0 //_DMA_MODE_
+    ret = elan_i2c_dma_send_data(private_ts->client, tmp, count);
+#else
+    ret = i2c_master_send(private_ts->client, tmp, count);
+#endif
+    kfree(tmp);
+    return (ret == 1) ? count : ret;
+
+}
+
+ssize_t elan_iap_read(struct file *filp, char *buff, size_t count, loff_t *offp)
+{
+    char *tmp;
+    int ret;
+    long rc;
+
+    printk("[ELAN]into elan_iap_read\n");
+    if (count > 8192)
+        count = 8192;
+
+    tmp = kmalloc(count, GFP_KERNEL);
+
+    if (tmp == NULL)
+        return -ENOMEM;
+#if 0 // _DMA_MODE_
+    ret = elan_i2c_dma_recv_data(private_ts->client, tmp, count);
+#else
+    ret = i2c_master_recv(private_ts->client, tmp, count);
+#endif
+    if (ret >= 0)
+        rc = copy_to_user(buff, tmp, count);
+
+    kfree(tmp);
+
+    //return ret;
+    return (ret == 1) ? count : ret;
+
+}
+
+static long elan_iap_ioctl(/*struct inode *inode,*/ struct file *filp,    unsigned int cmd, unsigned long arg)
+{
+
+    int __user *ip = (int __user *)arg;
+    printk("[ELAN]into elan_iap_ioctl\n");
+    printk("[ELAN]cmd value %x\n",cmd);
+
+    switch (cmd)
+    {
+        case IOCTL_I2C_SLAVE:
+            private_ts->client->addr = (int __user)arg;
+            private_ts->client->addr &= I2C_MASK_FLAG;
+            private_ts->client->addr |= I2C_ENEXT_FLAG;
+            //file_fops_addr = 0x15;
+            break;
+        case IOCTL_MAJOR_FW_VER:
+            break;
+        case IOCTL_MINOR_FW_VER:
+            break;
+        case IOCTL_RESET:
+
+            mt_set_gpio_mode( GPIO_CTP_RST_PIN, GPIO_CTP_RST_PIN_M_GPIO );
+            mt_set_gpio_dir( GPIO_CTP_RST_PIN, GPIO_DIR_OUT );
+            mt_set_gpio_out( GPIO_CTP_RST_PIN, GPIO_OUT_ONE );
+            msleep(10);
+            //#if !defined(EVB)
+            mt_set_gpio_out(GPIO_CTP_RST_PIN, GPIO_OUT_ZERO);
+            //#endif
+            msleep(10);
+            mt_set_gpio_out( GPIO_CTP_RST_PIN, GPIO_OUT_ONE );
+
+            break;
+        case IOCTL_IAP_MODE_LOCK:
+            if(work_lock==0)
+            {
+                printk("[elan]%s %x=IOCTL_IAP_MODE_LOCK\n", __func__,IOCTL_IAP_MODE_LOCK);
+                work_lock=1;
+                //disable_irq(CUST_EINT_TOUCH_PANEL_NUM);
+                mt_eint_mask(CUST_EINT_TOUCH_PANEL_NUM);
+                //cancel_work_sync(&private_ts->work);
+            }
+            break;
+        case IOCTL_IAP_MODE_UNLOCK:
+            if(work_lock==1)
+            {
+                work_lock=0;
+                //enable_irq(CUST_EINT_TOUCH_PANEL_NUM);
+                mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM);
+            }
+            break;
+        case IOCTL_CHECK_RECOVERY_MODE:
+            return RECOVERY;
+            break;
+        case IOCTL_FW_VER:
+            __fw_packet_handler(private_ts->client);
+            return FW_VERSION;
+            break;
+        case IOCTL_X_RESOLUTION:
+            __fw_packet_handler(private_ts->client);
+            return X_RESOLUTION;
+            break;
+        case IOCTL_Y_RESOLUTION:
+            __fw_packet_handler(private_ts->client);
+            return Y_RESOLUTION;
+            break;
+        case IOCTL_FW_ID:
+            __fw_packet_handler(private_ts->client);
+            return FW_ID;
+            break;
+        case IOCTL_ROUGH_CALIBRATE:
+            return elan_ktf2k_ts_rough_calibrate(private_ts->client);
+        case IOCTL_I2C_INT:
+            put_user(mt_get_gpio_in(GPIO_CTP_EINT_PIN),ip);
+            printk("[elan]GPIO_CTP_EINT_PIN = %d\n", mt_get_gpio_in(GPIO_CTP_EINT_PIN));
+
+            break;
+        case IOCTL_RESUME:
+            tpd_resume(private_ts->client);
+            break;
+        case IOCTL_CIRCUIT_CHECK:
+            return circuit_ver;
+            break;
+        case IOCTL_POWER_LOCK:
+            power_lock=1;
+            break;
+        case IOCTL_POWER_UNLOCK:
+            power_lock=0;
+            break;
+#ifdef IAP_PORTION
+        case IOCTL_GET_UPDATE_PROGREE:
+            update_progree=(int __user)arg;
+            break;
+
+        case IOCTL_FW_UPDATE:
+            //RECOVERY = IAPReset(private_ts->client);
+            RECOVERY=0;
+            Update_FW_One(private_ts->client, RECOVERY);
+#endif
+        case IOCTL_BC_VER:
+            __fw_packet_handler(private_ts->client);
+            return BC_VERSION;
+            break;
+        default:
+            break;
+    }
+    return 0;
+}
+
+struct file_operations elan_touch_fops =
+{
+    .open =             elan_iap_open,
+    .write =            elan_iap_write,
+    .read =             elan_iap_read,
+    .release =              elan_iap_release,
+    .unlocked_ioctl = elan_iap_ioctl,
+};
+
+#ifdef IAP_PORTION
+int EnterISPMode(struct i2c_client *client, uint8_t  *isp_cmd)
+{
+    char buff[4] = {0};
+    int len = 0;
+
+#ifdef _DMA_FW_UPGRADE_MODE_
+    len = elan_i2c_dma_fw_send_data(private_ts->client,isp_cmd,  sizeof(isp_cmd));
+#else
+    len = i2c_master_send(private_ts->client, isp_cmd,  sizeof(isp_cmd));
+#endif
+
+    if (len != sizeof(buff))
+    {
+        printk("[ELAN] ERROR: EnterISPMode fail! len=%d\r\n", len);
+        return -1;
+    }
+    else
+        printk("[ELAN] IAPMode write data successfully! cmd = [%2x, %2x, %2x, %2x]\n", isp_cmd[0], isp_cmd[1], isp_cmd[2], isp_cmd[3]);
+    return 0;
+}
+
+int ExtractPage(struct file *filp, uint8_t * szPage, int byte)
+{
+    int len = 0;
+
+    len = filp->f_op->read(filp, szPage,byte, &filp->f_pos);
+    if (len != byte)
+    {
+        printk("[ELAN] ExtractPage ERROR: read page error, read error. len=%d\r\n", len);
+        return -1;
+    }
+
+    return 0;
+}
+
+int WritePage(uint8_t * szPage, int byte)
+{
+    int len = 0;
+
+#ifdef _DMA_FW_UPGRADE_MODE_
+    len = elan_i2c_dma_fw_send_data(private_ts->client, szPage,  byte);
+#else
+    len = i2c_master_send(private_ts->client, szPage,  byte);
+#endif
+
+    if (len != byte)
+    {
+        printk("[ELAN] ERROR: write page error, write error. len=%d\r\n", len);
+        return -1;
+    }
+
+    return 0;
+}
+
+int GetAckData(struct i2c_client *client)
+{
+    int len = 0;
+
+    char buff[2] = {0};
+
+#ifdef _DMA_FW_UPGRADE_MODE_
+    len = elan_i2c_dma_fw_recv_data(private_ts->client, buff, sizeof(buff));
+#else
+    len = i2c_master_recv(private_ts->client, buff, sizeof(buff));
+#endif
+
+    if (len != sizeof(buff))
+    {
+        printk("[ELAN] ERROR: read data error, write 50 times error. len=%d\r\n", len);
+        return -1;
+    }
+
+    printk("[ELAN] GetAckData:%x,%x\n",buff[0],buff[1]);
+    if (buff[0] == 0xaa/* && buff[1] == 0xaa*/)
+        return ACK_OK;
+    else if (buff[0] == 0x55 && buff[1] == 0x55)
+        return ACK_REWRITE;
+    else
+        return ACK_Fail;
+
+    return 0;
+}
+
+void print_progress(int page, int ic_num, int j)
+{
+    int i, percent,page_tatol,percent_tatol;
+    char str[256];
+    str[0] = '\0';
+    for (i=0; i<((page)/10); i++)
+    {
+        str[i] = '#';
+        str[i+1] = '\0';
+    }
+
+    page_tatol=page+249*(ic_num-j);
+    percent = ((100*page)/(249));
+    percent_tatol = ((100*page_tatol)/(249*ic_num));
+
+    if ((page) == (249))
+        percent = 100;
+
+    if ((page_tatol) == (249*ic_num))
+        percent_tatol = 100;
+
+    printk("\rprogress %s| %d%%", str, percent);
+
+    if (page == (249))
+        printk("\n");
+}
+
+/*
+* Restet and (Send normal_command ?)
+* Get Hello Packet
+*/
+int  IAPReset()
+{
+    int res;
+
+    mt_set_gpio_mode( GPIO_CTP_RST_PIN, GPIO_CTP_RST_PIN_M_GPIO );
+    mt_set_gpio_dir( GPIO_CTP_RST_PIN, GPIO_DIR_OUT );
+    mt_set_gpio_out( GPIO_CTP_RST_PIN, GPIO_OUT_ONE );
+    msleep(10);
+    //#if !defined(EVB)
+    mt_set_gpio_out(GPIO_CTP_RST_PIN, GPIO_OUT_ZERO);
+    //#endif
+    msleep(10);
+    mt_set_gpio_out( GPIO_CTP_RST_PIN, GPIO_OUT_ONE );
+    return 1;
+
+#if 0
+    printk("[ELAN] read Hello packet data!\n");
+    res= __hello_packet_handler(client);
+    return res;
+#endif
+}
+
+/* Check Master & Slave is "55 aa 33 cc" */
+int CheckIapMode(void)
+{
+    char buff[4] = {0},len = 0;
+    //WaitIAPVerify(1000000);
+    //len = read(fd, buff, sizeof(buff));
+
+
+#ifdef _DMA_FW_UPGRADE_MODE_
+    len = elan_i2c_dma_fw_recv_data(private_ts->client, buff, sizeof(buff));
+#else
+    len = i2c_master_recv(private_ts->client, buff, sizeof(buff));
+#endif
+
+    if (len != sizeof(buff))
+    {
+        printk("[ELAN] CheckIapMode ERROR: read data error,len=%d\r\n", len);
+        return -1;
+    }
+    else
+    {
+
+        if (buff[0] == 0x55 && buff[1] == 0xaa && buff[2] == 0x33 && buff[3] == 0xcc)
+        {
+            //printk("[ELAN] CheckIapMode is 55 aa 33 cc\n");
+            return 0;
+        }
+        else// if ( j == 9 )
+        {
+            printk("[ELAN] Mode= 0x%x 0x%x 0x%x 0x%x\r\n", buff[0], buff[1], buff[2], buff[3]);
+            printk("[ELAN] ERROR:  CheckIapMode error\n");
+            return -1;
+        }
+    }
+    printk("\n");
+}
+
+int Update_FW_One(struct i2c_client *client, int recovery)
+{
+    int res = 0,ic_num = 1;
+    int iPage = 0, rewriteCnt = 0; //rewriteCnt for PAGE_REWRITE
+    int i = 0;
+    uint8_t data;
+
+    int restartCnt = 0, checkCnt = 0; // For IAP_RESTART
+    //uint8_t recovery_buffer[4] = {0};
+    int byte_count;
+    uint8_t *szBuff = NULL;
+    int curIndex = 0;
+#ifdef ELAN_3K_IC_SOLUTION
+    uint8_t isp_cmd[] = {0x45, 0x49, 0x41, 0x50};         //45 49 41 50
+#else
+    uint8_t isp_cmd[] = {0x54, 0x00, 0x12, 0x34};         //54 00 12 34
+#endif
+    uint8_t recovery_buffer[4] = {0};
+
+IAP_RESTART:
+
+    data=I2C_DATA[0];//Master
+    printk("[ELAN] %s: address data=0x%x \r\n", __func__, data);
+
+    if(RECOVERY != 0x80)
+    {
+        printk("[ELAN] Firmware upgrade normal mode !\n");
+
+        IAPReset();
+        msleep(20);
+
+        res = EnterISPMode(private_ts->client, isp_cmd); //enter ISP mode
+
+
+#ifdef _DMA_FW_UPGRADE_MODE_
+        res = elan_i2c_dma_fw_recv_data(private_ts->client, recovery_buffer, 4);
+#else
+        res = i2c_master_recv(private_ts->client, recovery_buffer, 4);   //55 aa 33 cc
+#endif
+
+        printk("[ELAN] recovery byte data:%x,%x,%x,%x \n",recovery_buffer[0],recovery_buffer[1],recovery_buffer[2],recovery_buffer[3]);
+
+        msleep(10);
+    }
+    else
+        printk("[ELAN] Firmware upgrade recovery mode !\n");
+    // Send Dummy Byte
+    printk("[ELAN] send one byte data:%x,%x",private_ts->client->addr,data);
+
+#ifdef _DMA_FW_UPGRADE_MODE_
+    res = elan_i2c_dma_fw_send_data(private_ts->client, &data,  sizeof(data));
+#else
+    res = i2c_master_send(private_ts->client, &data,  sizeof(data));
+#endif
+
+    if(res!=sizeof(data))
+    {
+        printk("[ELAN] dummy error code = %d\n",res);
+    }
+    msleep(50);
+
+    // Start IAP
+    for( iPage = 1; iPage <= PageNum; iPage++ )
+    {
+    PAGE_REWRITE:
+
+#if 1 // 132byte mode                
+        szBuff = file_fw_data + curIndex;
+        curIndex =  curIndex + PageSize;
+        res = WritePage(szBuff, PageSize);
+#endif
+
+        msleep(50);
+        res = GetAckData(private_ts->client);
+
+        if (ACK_OK != res)
+        {
+            msleep(50);
+            printk("[ELAN] ERROR: GetAckData fail! res=%d\r\n", res);
+            if ( res == ACK_REWRITE )
+            {
+                rewriteCnt = rewriteCnt + 1;
+                if (rewriteCnt == PAGERETRY)
+                {
+                    printk("[ELAN] ID 0x%02x %dth page ReWrite %d times fails!\n", data, iPage, PAGERETRY);
+                    return E_FD;
+                }
+                else
+                {
+                    printk("[ELAN] ---%d--- page ReWrite %d times!\n",  iPage, rewriteCnt);
+                    curIndex = curIndex - PageSize;
+                    goto PAGE_REWRITE;
+                }
+            }
+            else
+            {
+                restartCnt = restartCnt + 1;
+                if (restartCnt >= 5)
+                {
+                    printk("[ELAN] ID 0x%02x ReStart %d times fails!\n", data, IAPRESTART);
+                    return E_FD;
+                }
+                else
+                {
+                    printk("[ELAN] ===%d=== page ReStart %d times!\n",  iPage, restartCnt);
+                    goto IAP_RESTART;
+                }
+            }
+        }
+        else
+        {
+            printk("  data : 0x%02x ",  data);
+            rewriteCnt=0;
+            print_progress(iPage,ic_num,i);
+        }
+
+        msleep(10);
+    } // end of for(iPage = 1; iPage <= PageNum; iPage++)
+
+    //if (IAPReset() > 0)
+    printk("[ELAN] Update ALL Firmware successfully!\n");
+    return 0;
+}
+
+#endif
+// End Firmware Update
+
+
+#if 0
+static void elan_ktf2k_ts_early_suspend(struct early_suspend *h);
+static void elan_ktf2k_ts_late_resume(struct early_suspend *h);
+#endif
+
+static ssize_t elan_ktf2k_gpio_show(struct device *dev,
+                                    struct device_attribute *attr, char *buf)
+{
+    int ret = 0;
+    struct elan_ktf2k_ts_data *ts = private_ts;
+
+    //ret = gpio_get_value(ts->intr_gpio);
+    ret = mt_get_gpio_in(GPIO_CTP_EINT_PIN);
+    printk(KERN_DEBUG "GPIO_TP_INT_N=%d\n", ts->intr_gpio);
+    sprintf(buf, "GPIO_TP_INT_N=%d\n", ret);
+    ret = strlen(buf) + 1;
+    return ret;
+}
+
+static DEVICE_ATTR(gpio, S_IRUGO, elan_ktf2k_gpio_show, NULL);
+
+static ssize_t elan_ktf2k_vendor_show(struct device *dev,
+                                      struct device_attribute *attr, char *buf)
+{
+    ssize_t ret = 0;
+    struct elan_ktf2k_ts_data *ts = private_ts;
+
+    sprintf(buf, "%s_x%4.4x\n", "ELAN_KTF2K", ts->fw_ver);
+    ret = strlen(buf) + 1;
+    return ret;
+}
+
+static int __elan_ktf2k_ts_poll(struct i2c_client *client)
+{
+    struct elan_ktf2k_ts_data *ts = i2c_get_clientdata(client);
+    int status = 0, retry = 10;
+
+    do
+    {
+        //status = gpio_get_value(ts->intr_gpio);
+        status = mt_get_gpio_in(GPIO_CTP_EINT_PIN);
+        printk("mtk-tpd:[elan]: %s: status = %d\n", __func__, status);
+        retry--;
+        msleep(20);
+    }
+    while (status == 1 && retry > 0);
+
+    printk( "mtk-tpd:[elan]%s: poll interrupt status %s\n",
+            __func__, status == 1 ? "high" : "low");
+
+    //status=0;
+    //printk("[elan]: %s: force status = 0\n", __func__);
+
+    return (status == 0 ? 0 : -ETIMEDOUT);
+}
+
+static int elan_ktf2k_ts_poll(struct i2c_client *client)
+{
+    return __elan_ktf2k_ts_poll(client);
+}
+
+static int elan_ktf2k_ts_get_data(struct i2c_client *client, uint8_t *cmd,
+                                  uint8_t *buf, size_t size)
+{
+    int rc;
+
+    dev_dbg(&client->dev, "[elan]%s: enter\n", __func__);
+
+    if (buf == NULL)
+        return -EINVAL;
+
+
+    if ((i2c_master_send(client, cmd, 4)) != 4)
+    {
+        dev_err(&client->dev,
+                "[elan]%s: i2c_master_send failed\n", __func__);
+        return -EINVAL;
+    }
+
+    rc = elan_ktf2k_ts_poll(client);
+    if (rc < 0)
+        return -EINVAL;
+    else
+    {
+
+        if (i2c_master_recv(client, buf, size) != size ||
+            buf[0] != CMD_S_PKT)
+        {
+            printk("mtk-tpd:[elan_ktf2k_ts_get_data] buf[0]=%x buf[1]=%x buf[2]=%x buf[3]=%x\n", buf[0], buf[1], buf[2], buf[3]);
+            return -EINVAL;
+        }
+    }
+
+    return 0;
+}
+
+static int __check_ekt_ic_on_board(struct i2c_client *client)
+{
+	int rc;
+	uint8_t buf_recv[8] = { 0 };
+
+	msleep(100);
+	rc = elan_ktf2k_ts_poll(client);
+	if (rc < 0)
+	{
+		printk( "mtk-tpd:[elan] %s: Int poll failed!\n", __func__);	
+		return rc;
+	}
+	rc = i2c_master_recv(client, buf_recv, 8);
+
+	return rc;
+}
+static int __hello_packet_handler(struct i2c_client *client)
+{
+    int rc = 0;
+    uint8_t buf_recv[8] = { 0 };
+    //uint8_t buf_recv1[4] = { 0 };
+
+    //msleep(1500);
+    msleep(100);
+    //rc = elan_ktf2k_ts_poll(client);
+    if (rc < 0)
+    {
+        printk( "mtk-tpd:[elan] %s: Int poll failed!\n", __func__);
+        RECOVERY=0x80;
+        return RECOVERY;
+    }
+
+    rc = i2c_master_recv(client, buf_recv, 8);
+
+    printk("mtk-tpd:[elan] %s: Hello Packet %2x:%2X:%2x:%2x\n", __func__, buf_recv[0], buf_recv[1], buf_recv[2], buf_recv[3]);
+    /*  Received 8 bytes data will let TP die on old firmware on ektf21xx carbon player and MK5
+        rc = i2c_master_recv(client, buf_recv, 8);
+             printk("[elan] %s: hello packet %2x:%2X:%2x:%2x:%2x:%2X:%2x:%2x\n", __func__, buf_recv[0], buf_recv[1], buf_recv[2], buf_recv[3] , buf_recv[4], buf_recv[5], buf_recv[6], buf_recv[7]);
+    */
+  if((buf_recv[0]==0x55 && buf_recv[1]==0x55) ||(buf_recv[0]==0xCC && buf_recv[1]==0xCC))
+         {
+         	tpd_reg_flag=1;// 1 -->elan; 0 -->other;
+         }
+    if(buf_recv[0]==0x55 && buf_recv[1]==0x55 && buf_recv[2]==0x80 && buf_recv[3]==0x80)
+    {
+        RECOVERY=0x80;
+        FW_ID =  buf_recv[5] << 8 | buf_recv[4];// RECOVERY MODE for yeji TP 2013/11/27 no need to read FW ID
+        printk("[elan] FW_ID = %x\r\n", FW_ID);
+
+        rc = i2c_master_recv(client, buf_recv, 8);
+
+        printk("mtk-tpd:[elan] %s: Bootcode Verson %2x:%2X:%2x:%2x\n", __func__, buf_recv[0], buf_recv[1], buf_recv[2], buf_recv[3]);
+        return RECOVERY;
+    }
+
+    return 0;
+}
+//record the FW ID in IC section
+static int write_check_fwid_to_rom(struct i2c_client *client, uint8_t *cmd, size_t size)
+{
+    int rc;
+    uint8_t get_cmd[] = {0x53, 0xD3, 0x00, 0x01}; /* Get CHECK FWID */
+    uint8_t buf_recv[4] = { 0 };
+
+    printk("[elan] check cmd: %02x, %02x, %02x, %02x\n", cmd[0], cmd[1], cmd[2], cmd[3]);
+
+    rc = elan_ktf2k_ts_get_data(client, get_cmd, buf_recv, 4);//get the infomation and show out
+    if (rc < 0)
+    {
+        return rc;
+    }
+    printk("[elan] read SENSOR option: %02x, %02x, %02x, %02x\n", buf_recv[0], buf_recv[1], buf_recv[2], buf_recv[3]);
+
+    if(buf_recv[2] == cmd[2])
+        return 0;
+
+    if ((i2c_master_send(client, cmd, sizeof(cmd))) != sizeof(cmd))
+    {
+        printk("[elan] %s: i2c_master_send failed\n", __func__);
+        return -1;
+    }
+    msleep(50);
+
+    return 0;
+}
+
+static int __fw_packet_handler(struct i2c_client *client)
+{
+    int rc;
+    int major, minor;
+    uint8_t cmd[] = {CMD_R_PKT, 0x00, 0x00, 0x01}; /* Get Firmware Version*/
+    uint8_t cmd_x[] = {0x53, 0x60, 0x00, 0x00};        /*Get x resolution*/
+    uint8_t cmd_y[] = {0x53, 0x63, 0x00, 0x00};        /*Get y resolution*/
+    uint8_t cmd_id[] = {0x53, 0xf0, 0x00, 0x01};   /*Get firmware ID*/
+    uint8_t cmd_check_fwid[] = { 0x54, 0XD2, 0xFF,0xFF };  /* Get Check FWID */
+    //uint8_t cmd_bc[] = {CMD_R_PKT, 0x01, 0x00, 0x01};/* Get BootCode Version*/
+    uint8_t cmd_bc[] = {CMD_R_PKT, 0x10, 0x00, 0x01};/* Get BootCode Version*/
+    uint8_t buf_recv[8] = {0};
+
+    printk( "mtk-tpd:[elan] %s: n", __func__);
+
+#if 1
+// Firmware version
+    rc = elan_ktf2k_ts_get_data(client, cmd, buf_recv, 4);
+    if (rc < 0)
+        return rc;
+    major = ((buf_recv[1] & 0x0f) << 4) | ((buf_recv[2] & 0xf0) >> 4);
+    minor = ((buf_recv[2] & 0x0f) << 4) | ((buf_recv[3] & 0xf0) >> 4);
+//      ts->fw_ver = major << 8 | minor;
+    FW_VERSION = major << 8 | minor;
+
+#endif
+
+#if 1
+// Firmware ID
+    rc = elan_ktf2k_ts_get_data(client, cmd_id, buf_recv, 4);
+    if (rc < 0)
+        return rc;
+    major = ((buf_recv[1] & 0x0f) << 4) | ((buf_recv[2] & 0xf0) >> 4);
+    minor = ((buf_recv[2] & 0x0f) << 4) | ((buf_recv[3] & 0xf0) >> 4);
+    //ts->fw_id = major << 8 | minor;
+    cmd_check_fwid[2] = major;
+    cmd_check_fwid[3] = minor;
+    rc = write_check_fwid_to_rom(client, cmd_check_fwid , 4);  // write check fwid info
+
+    FW_ID = major << 8 | minor;
+#endif
+
+#if 1
+// X Resolution
+    rc = elan_ktf2k_ts_get_data(client, cmd_x, buf_recv, 4);
+    if (rc < 0)
+        return rc;
+    minor = ((buf_recv[2])) | ((buf_recv[3] & 0xf0) << 4);
+    //ts->x_resolution =minor;
+    X_RESOLUTION = minor;
+#endif
+
+#if 1
+// Y Resolution
+    rc = elan_ktf2k_ts_get_data(client, cmd_y, buf_recv, 4);
+    if (rc < 0)
+        return rc;
+    minor = ((buf_recv[2])) | ((buf_recv[3] & 0xf0) << 4);
+    //ts->y_resolution =minor;
+    Y_RESOLUTION = minor;
+#endif
+
+#if 1
+// Bootcode version
+    rc = elan_ktf2k_ts_get_data(client, cmd_bc, buf_recv, 4);
+    if (rc < 0)
+        return rc;
+    major = ((buf_recv[1] & 0x0f) << 4) | ((buf_recv[2] & 0xf0) >> 4);
+    minor = ((buf_recv[2] & 0x0f) << 4) | ((buf_recv[3] & 0xf0) >> 4);
+    //ts->bc_ver = major << 8 | minor;
+    BC_VERSION = major << 8 | minor;
+#endif
+
+    printk( "mtk-tpd:[elan] %s: firmware version: 0x%4.4x\n",
+            __func__, FW_VERSION);
+    printk( "mtk-tpd:[elan] %s: firmware ID: 0x%4.4x\n",
+            __func__, FW_ID);
+    printk( "mtk-tpd:[elan] %s: x resolution: %d, y resolution: %d\n",
+            __func__, X_RESOLUTION, Y_RESOLUTION);
+    printk( "mtk-tpd:[elan] %s: bootcode version: 0x%4.4x\n",
+            __func__, BC_VERSION);
+    return 0;
+}
+
+static inline int elan_ktf2k_ts_parse_xy(uint8_t *data,
+        uint16_t *x, uint16_t *y)
+{
+    *x = *y = 0;
+
+    *x = (data[0] & 0xf0);
+    *x <<= 4;
+    *x |= data[1];
+
+    *y = (data[0] & 0x0f);
+    *y <<= 8;
+    *y |= data[2];
+
+    return 0;
+}
+
+static int elan_ktf2k_ts_setup(struct i2c_client *client)
+{
+    int rc;
+
+    rc = __hello_packet_handler(client);
+    printk("[elan] hellopacket's rc = %d\n",rc);
+
+    msleep(10);
+    if (rc != 0x80)
+    {
+        rc = __fw_packet_handler(client);
+        if (rc < 0)
+            printk("mtk-tpd:[elan] %s, fw_packet_handler fail, rc = %d", __func__, rc);
+        else
+            printk("mtk-tpd:[elan] %s: firmware checking done.\n", __func__);
+        /* Check for FW_VERSION, if 0x0000 means FW update fail! */
+        if ( FW_VERSION == 0x00)
+        {
+            rc = 0x80;
+			RECOVERY = 0x80; //ZZ add	
+            printk("mtk-tpd:[elan] FW_VERSION = %d, last FW update fail\n", FW_VERSION);
+        }
+    }
+    return rc; /* Firmware need to be update if rc equal to 0x80(Recovery mode)   */
+}
+
+static int elan_ktf2k_ts_rough_calibrate(struct i2c_client *client)
+{
+    uint8_t cmd[] = {CMD_W_PKT, 0x29, 0x00, 0x01};
+
+    printk("[elan] %s: enter\n", __func__);
+    printk("[elan] dump cmd: %02x, %02x, %02x, %02x\n",
+           cmd[0], cmd[1], cmd[2], cmd[3]);
+
+    if ((i2c_master_send(client, cmd, sizeof(cmd))) != sizeof(cmd))
+    {
+        dev_err(&client->dev,
+                "[elan] %s: i2c_master_send failed\n", __func__);
+        return -EINVAL;
+    }
+
+    return 0;
+}
+
+static int elan_ktf2k_ts_set_power_state(struct i2c_client *client, int state)
+{
+    uint8_t cmd[] = {CMD_W_PKT, 0x50, 0x00, 0x01};
+
+    dev_dbg(&client->dev, "[elan] %s: enter\n", __func__);
+
+    cmd[1] |= (state << 3);
+
+    dev_dbg(&client->dev,
+            "[elan] dump cmd: %02x, %02x, %02x, %02x\n",
+            cmd[0], cmd[1], cmd[2], cmd[3]);
+
+    if ((i2c_master_send(client, cmd, sizeof(cmd))) != sizeof(cmd))
+    {
+        dev_err(&client->dev,
+                "[elan] %s: i2c_master_send failed\n", __func__);
+        return -EINVAL;
+    }
+
+    return 0;
+}
+
+static int elan_ktf2k_ts_get_power_state(struct i2c_client *client)
+{
+    int rc = 0;
+    uint8_t cmd[] = {CMD_R_PKT, 0x50, 0x00, 0x01};
+    uint8_t buf[4], power_state;
+
+    rc = elan_ktf2k_ts_get_data(client, cmd, buf, 4);
+    if (rc)
+        return rc;
+
+    power_state = buf[1];
+    dev_dbg(&client->dev, "[elan] dump repsponse: %0x\n", power_state);
+    power_state = (power_state & PWR_STATE_MASK) >> 3;
+    dev_dbg(&client->dev, "[elan] power state = %s\n",power_state == PWR_STATE_DEEP_SLEEP ? "Deep Sleep" : "Normal/Idle");
+
+    return power_state;
+}
+
+static int elan_ktf2k_read_block(struct i2c_client *client, u8 addr, u8 *data, u8 len)
+{
+    int err;
+    u8 beg = addr;
+    struct i2c_msg msgs[2] =
+    {
+        {
+            .addr = client->addr,
+            .flags = 0,
+            .len = 1,
+            .buf= &beg
+        },
+        {
+            .addr = client->addr,
+            .flags = I2C_M_RD,
+            .len = len,
+            .buf = data,
+            .ext_flag = I2C_DMA_FLAG,
+        }
+    };
+
+    if (!client)
+        return -EINVAL;
+
+    err = i2c_transfer(client->adapter, msgs, sizeof(msgs)/sizeof(msgs[0]));
+    if (err != len)
+    {
+        printk("[elan] elan_ktf2k_read_block err=%d\n", err);
+        err = -EIO;
+    }
+    else
+    {
+        printk("[elan] elan_ktf2k_read_block ok\n");
+        err = 0;    /*no error*/
+    }
+    return err;
+}
+
+
+static int elan_ktf2k_ts_recv_data(struct i2c_client *client, uint8_t *buf)
+{
+    int rc, bytes_to_recv=PACKET_SIZE;
+    uint8_t *pReadData = 0;
+    unsigned short addr = 0;
+
+    if ((buf == NULL) || (dma_alloc_err == 1))
+	{
+		printk("----------%s:[%d]------\n", __func__, __LINE__);
+		return -EINVAL;
+	}
+    memset(buf, 0, bytes_to_recv);
+
+#ifdef _DMA_MODE_
+    addr = client->addr ;
+    client->addr |= I2C_DMA_FLAG;
+    pReadData = gpDMABuf_va;
+    if(!pReadData)
+    {
+        printk("mtk-tpd:[elan] dma_alloc_coherent failed!\n");
+    }
+	MTK_TP_DEBUG("----%s:[%d]----\n", __func__, __LINE__);
+    rc = i2c_master_recv(client, gpDMABuf_pa, bytes_to_recv);
+    copy_to_user(buf, pReadData, bytes_to_recv);
+	MTK_TP_DEBUG("----%s:[%d]----\n", __func__, __LINE__);
+    client->addr = addr;
+#ifdef ELAN_DEBUG
+    MTK_TP_DEBUG("[elan_debug] %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x\n", buf[0], buf[1], buf[2], buf[3], buf[4], buf[5], buf[6], buf[7],buf[8], buf[9], buf[10], buf[11], buf[12], buf[13], buf[14], buf[15],buf[16], buf[17]);
+#endif
+
+#else
+#ifdef NON_MTK_MODE    //I2C support > 8bits transfer
+    rc = i2c_master_recv(client, buf, bytes_to_recv);      //for two finger and non-mtk five finger and ten finger
+    if (rc != bytes_to_recv)
+        printk("mtk-tpd:[elan_debug] The package error.\n");
+    MTK_TP_DEBUG("[elan_recv] %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x\n", buf[0], buf[1], buf[2], buf[3], buf[4], buf[5], buf[6], buf[7],buf[8], buf[9], buf[10], buf[11], buf[12], buf[13], buf[14], buf[15],buf[16], buf[17]);
+#else
+    rc = i2c_master_recv(client, buf, 8);  //for two finger and non-mtk five finger and ten finger
+    if (rc != 8)
+        printk("mtk-tpd:[elan_debug] The first package error.\n");
+    MTK_TP_DEBUG("[elan_recv] %x %x %x %x %x %x %x %x\n", buf[0], buf[1], buf[2], buf[3], buf[4], buf[5], buf[6], buf[7]);
+//	msleep(1);
+
+    if (buf[0] == MTK_FINGERS_PKT)             //for mtk five finger
+    {
+        rc = i2c_master_recv(client, buf+ 8, 8);
+        if (rc != 8)
+            printk("mtk-tpd:[elan_debug] The second package error.\n");
+        MTK_TP_DEBUG("[elan_recv] %x %x %x %x %x %x %x %x\n", buf[8], buf[9], buf[10], buf[11], buf[12], buf[13], buf[14], buf[15]);
+
+        rc = i2c_master_recv(client, buf+ 16, 2);
+        if (rc != 2)
+            printk("mtk-tpd:[elan_debug] The third package error.\n");
+        MTK_TP_DEBUG("[elan_recv] %x %x \n", buf[16], buf[17]);
+
+    }
+    else if (buf[0] == TEN_FINGERS_PKT)        //for ten finger
+    {
+        rc = i2c_master_recv(client, buf+ 8, 8);
+        if (rc != 8)
+            printk("[elan_debug] The second package error.\n");
+        MTK_TP_DEBUG("[elan_recv] %x %x %x %x %x %x %x %x\n", buf[8], buf[9], buf[10], buf[11], buf[12], buf[13], buf[14], buf[15]);
+
+        rc = i2c_master_recv(client, buf+ 16, 8);
+        if (rc != 8)
+            printk("mtk-tpd:[elan_debug] The third package error.\n");
+        MTK_TP_DEBUG("[elan_recv] %x %x %x %x %x %x %x %x\n", buf[16], buf[17], buf[18], buf[19], buf[20], buf[21], buf[22], buf[23]);
+
+        rc = i2c_master_recv(client, buf+ 24, 8);
+        if (rc != 8)
+            printk("[elan_debug] The four package error.\n");
+        MTK_TP_DEBUG("[elan_recv] %x %x %x %x %x %x %x %x\n", buf[24], buf[25], buf[26], buf[27], buf[28], buf[29], buf[30], buf[31]);
+
+        rc = i2c_master_recv(client, buf+ 32, 8);
+        if (rc != 8)
+            printk("mtk-tpd:[elan_debug] The five package error.\n");
+        MTK_TP_DEBUG("mtk-tpd:[elan_recv] %x %x %x %x %x %x %x %x\n", buf[32], buf[33], buf[34], buf[35], buf[36], buf[37], buf[38], buf[39]);
+
+        rc = i2c_master_recv(client, buf+ 40, 4);
+        if (rc != 4)
+            printk("mtk-tpd:[elan_debug] The six package error.\n");
+        MTK_TP_DEBUG("mtk-tpd:[elan_recv] %x %x %x %x\n", buf[40], buf[41], buf[42], buf[43]);
+
+    }
+#endif
+#endif
+	//below add for reflush IC
+	if ((buf[0] != 0 && buf[0] != 120 && buf[0] != 90) || (man_made != 0))
+	{
+		printk("-----%s:[%d]----err comming ----err_buf_times = %d\n", __func__, __LINE__, err_buf_times);
+		ekt_debug_in = 1; //fisrt open debug info
+		err_buf_times++;
+	#ifdef _DMA_MODE_
+		if (err_buf_times == NEED_FLUSH_DMA)
+		{
+			printk("reason one: DMA err, alloc new DMA -----%s:[%d]----\n",  __func__, __LINE__);
+			dma_free_coherent(NULL, 4096, gpDMABuf_va, gpDMABuf_pa);//free old
+			gpDMABuf_va = NULL;
+			gpDMABuf_pa = NULL;
+			msleep(10);
+			printk("reason one: DMA err, alloc new DMA -----%s:[%d]----\n",  __func__, __LINE__);
+			gpDMABuf_va = (u8 *)dma_alloc_writecombine(NULL, 4096, &gpDMABuf_pa, GFP_KERNEL);
+			if (!gpDMABuf_va){
+				printk("reason one: DMA err, alloc failed -----%s:[%d]----\n",  __func__, __LINE__);
+				dma_alloc_err = 1;
+			}
+			printk("reason one: DMA err, alloc new DMA ok -----%s:[%d]----\n",  __func__, __LINE__);
+		}
+	#endif
+		if (err_buf_times == NEED_RESET_IC)
+		{
+			printk("-----%s:[%d] need reset IC----\n", __func__, __LINE__);
+			// Reset Touch Pannel
+			mt_set_gpio_mode( GPIO_CTP_RST_PIN, GPIO_CTP_RST_PIN_M_GPIO );
+			mt_set_gpio_dir( GPIO_CTP_RST_PIN, GPIO_DIR_OUT );
+			mt_set_gpio_out(GPIO_CTP_RST_PIN, GPIO_OUT_ZERO);
+			msleep(50);
+			mt_set_gpio_out( GPIO_CTP_RST_PIN, GPIO_OUT_ONE );
+			msleep(300);
+			// End Reset Touch Pannel
+			err_buf_times = 0;
+		}
+	}else{
+		ekt_debug_in = 0; //close debug info
+	} 
+
+
+	//end reflush IC
+
+    return rc;
+}
+
+#ifdef SOFTKEY_AXIS_VER //SOFTKEY is reported via AXI
+static void elan_ktf2k_ts_report_data(struct i2c_client *client, uint8_t *buf)
+{
+    //struct elan_ktf2k_ts_data *ts = i2c_get_clientdata(client);
+    struct input_dev *idev = tpd->dev;
+    uint16_t x, y;
+    uint16_t fbits=0;
+    uint8_t i, num, reported = 0;
+    uint8_t idx, btn_idx;
+    int finger_num;
+    int limitY = Y_RESOLUTION - 100; // limitY need define by Case!
+
+#ifdef TP_PROXIMITY_SENSOR_NEW
+    hwm_sensor_data sensor_data;
+    int ret = 0;
+
+    if (buf[0] == 0x55)
+    {
+        if (PROXIMITY == 1)
+        {
+            CTP_Face_Mode_Switch(1);
+            MTK_TP_DEBUG("mtk-tpd:[elan] 55 55 55 55--PS ON---\n", __func__);
+        }
+    }
+    else if(buf[0] == 0xFA)
+    {
+        if(buf[2] == 0xAA && PROXIMITY == 1 ) // close to
+        {
+            PROXIMITY_STATE = 0;
+            MTK_TP_DEBUG("tpd_touchinfo PROXIMITY_STATE %d\n",PROXIMITY_STATE );
+        }
+        else if(buf[2] == 0x55 && PROXIMITY == 1 ) // leave
+        {
+            PROXIMITY_STATE = 1;
+            MTK_TP_DEBUG("tpd_touchinfo PROXIMITY_STATE %d\n",PROXIMITY_STATE );
+        }
+        if (PROXIMITY == 1)
+        {
+            //get raw data
+            MTK_TP_DEBUG(" ps change\n");
+            //map and store data to hwm_sensor_data
+            sensor_data.values[0] = Get_Ctp_Face_Mode();
+            sensor_data.value_divide = 1;
+            sensor_data.status = SENSOR_STATUS_ACCURACY_MEDIUM;
+            //report to the up-layer
+            ret = hwmsen_get_interrupt_data(ID_PROXIMITY, &sensor_data);
+
+            if (ret)
+            {
+                MTK_TP_DEBUG("Call hwmsen_get_interrupt_data fail = %d\n", ret);
+            }
+        }
+    }
+#endif
+    /* for 10 fingers       */
+    if (buf[0] == TEN_FINGERS_PKT)
+    {
+        finger_num = 10;
+        num = buf[2] & 0x0f;
+        fbits = buf[2] & 0x30;
+        fbits = (fbits << 4) | buf[1];
+        idx=3;
+        btn_idx=33;
+    }
+// for 5 fingers
+    else if ((buf[0] == MTK_FINGERS_PKT) || (buf[0] == FIVE_FINGERS_PKT))
+    {
+        finger_num = 5;
+        num = buf[1] & 0x07;
+        fbits = buf[1] >>3;
+        idx=2;
+        btn_idx=17;
+    }
+    else
+    {
+// for 2 fingers
+        finger_num = 2;
+        num = buf[7] & 0x03;
+        fbits = buf[7] & 0x03;
+        idx=1;
+        btn_idx=7;
+    }
+
+    switch (buf[0])
+    {
+        case MTK_FINGERS_PKT:
+        case TWO_FINGERS_PKT:
+        case FIVE_FINGERS_PKT:
+        case TEN_FINGERS_PKT:
+            //input_report_key(idev, BTN_TOUCH, 1);
+            if (num == 0)
+            {
+                //dev_dbg(&client->dev, "no press\n");
+                if(key_pressed < 0)
+                {
+                    input_report_key(tpd->dev, BTN_TOUCH, 0);
+                    input_report_abs(idev, ABS_MT_TOUCH_MAJOR, 0);
+                    input_report_abs(idev, ABS_MT_WIDTH_MAJOR, 0);
+                    input_mt_sync(idev);
+                    if (FACTORY_BOOT == get_boot_mode()|| RECOVERY_BOOT == get_boot_mode())
+                    {
+                        tpd_button(x, y, 0);
+                    }
+                    TPD_EM_PRINT(x, y, x, y, 0, 0);
+                }
+                else
+                {
+                    //dev_err(&client->dev, "[elan] KEY_RELEASE: key_code:%d\n",OSD_mapping[key_pressed].key_event);
+                    input_report_key(idev, OSD_mapping[key_pressed].key_event, 0);
+                    key_pressed = -1;
+                }
+            }
+            else
+            {
+                //dev_dbg(&client->dev, "[elan] %d fingers\n", num);
+                //input_report_key(idev, BTN_TOUCH, 1);
+                for (i = 0; i < finger_num; i++)
+                {
+                    if ((fbits & 0x01))
+                    {
+                        elan_ktf2k_ts_parse_xy(&buf[idx], &x, &y);
+                        //elan_ktf2k_ts_parse_xy(&buf[idx], &y, &x);
+                        //x = X_RESOLUTION-x;
+                        //y = Y_RESOLUTION-y;
+#if 1
+                        if(X_RESOLUTION > 0 && Y_RESOLUTION > 0)
+                        {
+                            x = ( x * LCM_X_MAX )/X_RESOLUTION;
+                            y = ( y * LCM_Y_MAX )/Y_RESOLUTION;
+                        }
+                        else
+                        {
+                            x = ( x * LCM_X_MAX )/ELAN_X_MAX;
+                            y = ( y * LCM_Y_MAX )/ELAN_Y_MAX;
+                        }
+#endif
+                        MTK_TP_DEBUG("[elan_debug SOFTKEY_AXIS_VER] %s, x=%d, y=%d\n",__func__, x , y);
+
+                        if (!((x<=0) || (y<=0) || (x>=X_RESOLUTION) || (y>=Y_RESOLUTION)))
+                        {
+                            if ( y < limitY )
+                            {
+                                MTK_TP_DEBUG("mtk-tpd elan_ktf2k_ts_report_data x=%d y=%d id=%d \n",x,y,i);
+                                input_report_key(tpd->dev, BTN_TOUCH, 1);
+                                input_report_abs(idev, ABS_MT_TRACKING_ID, i);
+                                input_report_abs(idev, ABS_MT_TOUCH_MAJOR, 8);
+                                input_report_abs(idev, ABS_MT_POSITION_X, x);
+                                input_report_abs(idev, ABS_MT_POSITION_Y, y);
+                                input_mt_sync(idev);
+                                if (FACTORY_BOOT == get_boot_mode()|| RECOVERY_BOOT == get_boot_mode())
+                                {
+                                    tpd_button(x, y, 1);
+                                }
+                                TPD_EM_PRINT(x, y, x, y, i-1, 1);
+                            }
+                            else
+                            {
+                                int i=0;
+                                for(i=0; i<4; i++)
+                                {
+                                    if((x > OSD_mapping[i].left_x) && (x < OSD_mapping[i].right_x))
+                                    {
+                                        //dev_err(&client->dev, "[elan] KEY_PRESS: key_code:%d\n",OSD_mapping[i].key_event);
+                                        //printk("[elan] %d KEY_PRESS: key_code:%d\n", i, OSD_mapping[i].key_event);
+                                        input_report_key(idev, OSD_mapping[i].key_event, 1);
+                                        key_pressed = i;
+                                    }
+                                }
+                            }
+                            reported++;
+
+                        } // end if border
+                    } // end if finger status
+                    fbits = fbits >> 1;
+                    idx += 3;
+                } // end for
+            }
+
+            if (reported)
+                input_sync(idev);
+            else
+            {
+                input_mt_sync(idev);
+                input_sync(idev);
+                MTK_TP_DEBUG("mtk-tpd elan_ktf2k_ts_report_data up\n");
+            }
+
+            break;
+        default:
+            MTK_TP_DEBUG("[elan] %s: unknown packet type: %0x\n", __func__, buf[0]);
+#if 0
+            if(buf[0]==0x66)
+            {
+                uint8_t cmd[] = {CMD_W_PKT, 0x50, 0x00, 0x01};
+
+                printk("[elan] TP enter into sleep mode\n");
+                if ((i2c_master_send(private_ts->client, cmd, sizeof(cmd))) != sizeof(cmd))
+                {
+                    printk("[elan] %s: i2c_master_send failed\n", __func__);
+                    //return -retval;
+                }
+                mt_set_gpio_mode( GPIO_CTP_RST_PIN, GPIO_CTP_RST_PIN_M_GPIO );
+                mt_set_gpio_dir( GPIO_CTP_RST_PIN, GPIO_DIR_OUT );
+                mt_set_gpio_out( GPIO_CTP_RST_PIN, GPIO_OUT_ONE );
+                msleep(10);
+                mt_set_gpio_out(GPIO_CTP_RST_PIN, GPIO_OUT_ZERO);
+                msleep(10);
+                mt_set_gpio_out( GPIO_CTP_RST_PIN, GPIO_OUT_ONE );
+                mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM);
+                printk("mtk-tpd elan_ktf2k_ts_report_data packet 0x66 reset\n");
+
+            }
+#endif
+            break;
+    } // end switch
+    return;
+}
+#else //SOFTKEY is reported via BTN bit
+static void elan_ktf2k_ts_report_data(struct i2c_client *client, uint8_t *buf)
+{
+    /*struct elan_ktf2k_ts_data *ts = i2c_get_clientdata(client);*/
+    struct input_dev *idev = tpd->dev;
+    uint16_t x, y;
+    uint16_t fbits=0;
+    uint8_t i, num, reported = 0;
+    uint8_t idx, btn_idx;
+    int finger_num;
+#ifdef TP_PROXIMITY_SENSOR_NEW
+    hwm_sensor_data sensor_data;
+    int ret = 0;
+
+    if (buf[0] == 0x55)
+    {
+    	//for finger up 
+        input_report_key(idev, BTN_TOUCH, 0);
+        input_report_abs(idev, ABS_MT_TOUCH_MAJOR, 0);
+        input_report_abs(idev, ABS_MT_WIDTH_MAJOR, 0);
+        input_mt_sync(idev);
+        input_sync(idev);
+		
+        if (PROXIMITY == 1)
+        {
+            CTP_Face_Mode_Switch(1);
+            MTK_TP_DEBUG("mtk-tpd:[elan] 55 55 55 55--PS ON---\n", __func__);
+        }
+    }
+    else if(buf[0] == 0xFA)
+    {
+        if(buf[2] == 0xAA && PROXIMITY == 1 ) // close to
+        {
+            PROXIMITY_STATE = 0;
+            MTK_TP_DEBUG("tpd_touchinfo PROXIMITY_STATE %d\n",PROXIMITY_STATE );
+        }
+        else if(buf[2] == 0x55 && PROXIMITY == 1 ) // leave
+        {
+            PROXIMITY_STATE = 1;
+            MTK_TP_DEBUG("tpd_touchinfo PROXIMITY_STATE %d\n",PROXIMITY_STATE );
+        }
+        if (PROXIMITY == 1)
+        {
+            //get raw data
+            MTK_TP_DEBUG(" ps change\n");
+            //map and store data to hwm_sensor_data
+            sensor_data.values[0] = Get_Ctp_Face_Mode();
+            sensor_data.value_divide = 1;
+            sensor_data.status = SENSOR_STATUS_ACCURACY_MEDIUM;
+            //report to the up-layer
+            ret = hwmsen_get_interrupt_data(ID_PROXIMITY, &sensor_data);
+
+            if (ret)
+            {
+                MTK_TP_DEBUG("Call hwmsen_get_interrupt_data fail = %d\n", ret);
+            }
+        }
+    }
+#endif
+
+    /* for 10 fingers       */
+    if (buf[0] == TEN_FINGERS_PKT)
+    {
+        finger_num = 10;
+        num = buf[2] & 0x0f;
+        fbits = buf[2] & 0x30;
+        fbits = (fbits << 4) | buf[1];
+        idx=3;
+        btn_idx=33;
+    }
+// for 5 fingers
+    else if ((buf[0] == MTK_FINGERS_PKT) || (buf[0] == FIVE_FINGERS_PKT))
+    {
+        finger_num = 5;
+        num = buf[1] & 0x07;
+        fbits = buf[1] >>3;
+        idx=2;
+        btn_idx=17;
+    }
+    else
+    {
+// for 2 fingers
+        finger_num = 2;
+        num = buf[7] & 0x03;
+        fbits = buf[7] & 0x03;
+        idx=1;
+        btn_idx=7;
+    }
+
+    switch (buf[0])
+    {
+        case MTK_FINGERS_PKT:
+        case TWO_FINGERS_PKT:
+        case FIVE_FINGERS_PKT:
+        case TEN_FINGERS_PKT:
+            //input_report_key(idev, BTN_TOUCH, 1);
+            if (num == 0)
+            {
+                dev_dbg(&client->dev, "no press\n");
+#ifdef ELAN_DEBUG
+                printk("button_state0 = %x\n",button_state);
+                printk("buf[btn_idx] = %x KEY_MENU=%x KEY_HOME=%x KEY_BACK=%x KEY_SEARCH =%x\n",buf[btn_idx], KEY_MENU, KEY_HOME, KEY_BACK, KEY_SEARCH);
+#endif
+				 printk("button_state0 = %x\n",button_state);
+                printk("buf[btn_idx] = %x KEY_MENU=%x KEY_HOME=%x KEY_BACK=%x KEY_SEARCH =%x\n",buf[btn_idx], KEY_MENU, KEY_HOME, KEY_BACK, KEY_SEARCH);
+                //if (FACTORY_BOOT == get_boot_mode()|| RECOVERY_BOOT == get_boot_mode())
+                //{
+                //  tpd_button(x, y, 0);
+                //}
+                //TPD_EM_PRINT(x, y, x, y, 0, 0);
+
+#ifdef ELAN_BUTTON
+
+                switch (buf[btn_idx]&0xFC)
+                {
+                    case ELAN_KEY_BACK:
+                        printk("KEY back 1\n");
+#ifndef LCT_VIRTUAL_KEY
+                        input_report_key(idev, KEY_BACK, 1);
+#else
+                        input_report_key(idev, BTN_TOUCH, 1);
+                        input_report_abs(idev, ABS_MT_TOUCH_MAJOR, 8);
+                        input_report_abs(idev, ABS_MT_POSITION_X, 617);
+                        input_report_abs(idev, ABS_MT_POSITION_Y, 1360);
+#endif
+                        if (FACTORY_BOOT == get_boot_mode()|| RECOVERY_BOOT == get_boot_mode())
+                        {
+                            x=617;
+                            y=1360;
+                            tpd_button(x, y, 1);
+                            MTK_TP_DEBUG("[elan] FACTORY_BOOT == get_boot_mode()|| RECOVERY_BOOT == get_boot_mode()\n\n",button_state);
+                        }
+                        button_state = KEY_BACK;
+                        break;
+
+                    case ELAN_KEY_HOME:
+                        printk("KEY home 1\n");
+#ifndef LCT_VIRTUAL_KEY
+                        input_report_key(idev, KEY_HOMEPAGE, 1);
+#else
+                        input_report_key(idev, BTN_TOUCH, 1);
+                        input_report_abs(idev, ABS_MT_TOUCH_MAJOR, 8);
+                        input_report_abs(idev, ABS_MT_POSITION_X, 300);
+                        input_report_abs(idev, ABS_MT_POSITION_Y, 1370);
+#endif
+                        if (FACTORY_BOOT == get_boot_mode()|| RECOVERY_BOOT == get_boot_mode())
+                        {
+                            x=300;
+                            y=1360;
+                           tpd_button(x, y, 1);
+				  //input_report_key(idev, KEY_BACK, 1);
+				 // input_sync(idev);
+
+                            MTK_TP_DEBUG("[elan] FACTORY_BOOT == get_boot_mode()|| RECOVERY_BOOT == get_boot_mode()\n\n",button_state);
+                        }
+
+                        button_state = KEY_HOMEPAGE;
+                        break;
+
+                    case ELAN_KEY_MENU:
+                        printk("KEY menu 1\n");
+#ifndef LCT_VIRTUAL_KEY
+                        input_report_key(idev, KEY_MENU, 1);
+#else
+                        input_report_key(idev, BTN_TOUCH, 1);
+                        input_report_abs(idev, ABS_MT_TOUCH_MAJOR, 8);
+                        input_report_abs(idev, ABS_MT_POSITION_X, 107);
+                        input_report_abs(idev, ABS_MT_POSITION_Y, 1370);
+#endif
+                        if (FACTORY_BOOT == get_boot_mode()|| RECOVERY_BOOT == get_boot_mode())
+                        {
+                            x=107;
+                            y=1360;
+                            tpd_button(x, y, 1);
+                            MTK_TP_DEBUG("[elan] FACTORY_BOOT == get_boot_mode()|| RECOVERY_BOOT == get_boot_mode()\n\n",button_state);
+                        }
+                        button_state = KEY_MENU;
+                        break;
+
+                    // TOUCH release
+                    default:
+                        printk("mtk-tpd:[ELAN ] test tpd up\n");
+                        input_report_key(idev, BTN_TOUCH, 0);
+                        input_report_abs(idev, ABS_MT_TOUCH_MAJOR, 0);
+                        input_report_abs(idev, ABS_MT_WIDTH_MAJOR, 0);
+                        input_mt_sync(idev);
+                        tpd_down_flag = 0;
+                        if (FACTORY_BOOT == get_boot_mode()|| RECOVERY_BOOT == get_boot_mode())
+                        {
+                            tpd_button(x, y, 0);
+                            MTK_TP_DEBUG("[elan] FACTORY_BOOT == get_boot_mode()|| RECOVERY_BOOT == get_boot_mode()\n\n",button_state);
+                        }
+
+                        button_state = 0;
+                        break;
+                }
+                if (!(FACTORY_BOOT == get_boot_mode()|| RECOVERY_BOOT == get_boot_mode()))
+                   input_sync(idev);
+#endif
+            }
+            else
+            {
+                //dev_dbg(&client->dev, "[elan] %d fingers\n", num);
+                input_report_key(idev, BTN_TOUCH, 1);
+                for (i = 0; i < finger_num; i++)
+                {
+                    if ((fbits & 0x01))
+                    {
+                        elan_ktf2k_ts_parse_xy(&buf[idx], &x, &y);
+                        //elan_ktf2k_ts_parse_xy(&buf[idx], &y, &x);
+#if 1
+                        if(X_RESOLUTION > 0 && Y_RESOLUTION > 0)
+                        {
+                            x = ( x * LCM_X_MAX )/X_RESOLUTION;
+                            y = ( y * LCM_Y_MAX )/Y_RESOLUTION;
+                        }
+                        else
+                        {
+                            x = ( x * LCM_X_MAX )/ELAN_X_MAX;
+                            y = ( y * LCM_Y_MAX )/ELAN_Y_MAX;
+                        }
+#endif
+
+                        //x = ( x * LCM_X_MAX )/ELAN_X_MAX;
+                        //y = ( y * LCM_Y_MAX )/ELAN_Y_MAX;
+#ifdef ELAN_DEBUG
+                        MTK_TP_DEBUG("mtk-tpd:[elan_debug  BTN bit] %s, x=%d, y=%d\n",__func__, x , y);
+#endif
+                        //x = LCM_X_MAX-x;
+                        //y = Y_RESOLUTION-y;
+                        if (!((x>=LCM_X_MAX) || (y>=LCM_Y_MAX)))
+                        {
+                            input_report_key(idev, BTN_TOUCH, 1);
+                            input_report_abs(idev, ABS_MT_TRACKING_ID, i);
+                            input_report_abs(idev, ABS_MT_TOUCH_MAJOR, 8);
+                            input_report_abs(idev, ABS_MT_POSITION_X, x);
+                            input_report_abs(idev, ABS_MT_POSITION_Y, y);
+                            input_mt_sync(idev);
+
+                            if (FACTORY_BOOT == get_boot_mode()|| RECOVERY_BOOT == get_boot_mode())
+                            {
+                                tpd_button(x, y, 1);
+                            }
+                            TPD_EM_PRINT(x, y, x, y, i-1, 1);
+
+                            reported++;
+                            tpd_down_flag=1;
+                        } // end if border
+                    } // end if finger status
+                    fbits = fbits >> 1;
+                    idx += 3;
+                } // end for
+            }
+            if (reported)
+                input_sync(idev);
+            else
+            {
+                input_mt_sync(idev);
+                input_sync(idev);
+            }
+            break;
+        default:
+            MTK_TP_DEBUG("mtk-tpd:[elan] %s: unknown packet type: %0x\n", __func__, buf[0]);
+            break;
+    } // end switch
+    return;
+}
+#endif
+
+static void elan_ktf2k_ts_work_func(struct work_struct *work)
+{
+    int rc;
+    struct elan_ktf2k_ts_data *ts =
+        container_of(work, struct elan_ktf2k_ts_data, work);
+    uint8_t buf[PACKET_SIZE] = { 0 };
+
+//               if (gpio_get_value(ts->intr_gpio))
+    if (mt_get_gpio_in(GPIO_CTP_EINT_PIN))
+    {
+        //enable_irq(ts->client->irq);
+        printk("[elan]: Detected Jitter at INT pin. \n");
+        mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM);
+        return;
+    }
+
+    rc = elan_ktf2k_ts_recv_data(ts->client, buf);
+
+    if (rc < 0)
+    {
+        //enable_irq(ts->client->irq);
+        printk("[elan] elan_ktf2k_ts_recv_data Error, Error code %d \n", rc);
+        mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM);
+        return;
+    }
+
+    //printk("[elan] %2x,%2x,%2x,%2x,%2x,%2x\n",buf[0],buf[1],buf[2],buf[3],buf[5],buf[6]);
+    elan_ktf2k_ts_report_data(ts->client, buf);
+
+    //enable_irq(ts->client->irq);
+    mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM);
+
+    return;
+}
+
+static irqreturn_t elan_ktf2k_ts_irq_handler(int irq, void *dev_id)
+{
+    struct elan_ktf2k_ts_data *ts = dev_id;
+    struct i2c_client *client = ts->client;
+
+    dev_dbg(&client->dev, "[elan] %s\n", __func__);
+    mt_eint_mask(CUST_EINT_TOUCH_PANEL_NUM);
+    tpd_flag = 1;
+    wake_up_interruptible(&waiter);
+    return IRQ_HANDLED;
+}
+
+static int elan_ktf2k_ts_register_interrupt(struct i2c_client *client)
+{
+    struct elan_ktf2k_ts_data *ts = i2c_get_clientdata(client);
+    int err = 0;
+
+    err = request_irq(client->irq, elan_ktf2k_ts_irq_handler,
+                      IRQF_TRIGGER_LOW, client->name, ts);
+    if (err)
+        dev_err(&client->dev, "[elan] %s: request_irq %d failed\n",
+                __func__, client->irq);
+
+    return err;
+}
+
+#ifdef IAP_PORTION
+static int update_fw_handler(void *unused)
+{
+    int New_FW_ID;
+    int New_FW_VER;
+    //struct i2c_client client= private_ts->client;
+
+    struct sched_param param = { .sched_priority = 4 };
+    sched_setscheduler(current, SCHED_RR, &param);
+
+    while(probe_flage == 0){
+        msleep(20);//2014/7/8 for update
+    	}
+
+        work_lock=1;
+    //disable_irq(CUST_EINT_TOUCH_PANEL_NUM);
+    mt_eint_mask(CUST_EINT_TOUCH_PANEL_NUM);
+    power_lock=1;
+    printk("[elan] start fw update\n");
+
+    /* FW ID & FW VER*/
+#ifdef ELAN_3K_IC_SOLUTION
+    /*For ektf31xx iap ekt file   */
+    printk("[ELAN] [0x7d64]=0x%02x,  [0x7d65]=0x%02x, [0x7d66]=0x%02x, [0x7d67]=0x%02x\n",  file_fw_data[32100],file_fw_data[32101],file_fw_data[32102],file_fw_data[32103]);
+    New_FW_ID = file_fw_data[0x7d67]<<8  | file_fw_data[0x7d66] ;
+    New_FW_VER = file_fw_data[0x7d65]<<8  | file_fw_data[0x7d64] ;
+
+    printk(" FW_ID=0x%x,   New_FW_ID=0x%x \n",  FW_ID, New_FW_ID);
+    printk(" FW_VERSION=0x%x,   New_FW_VER=0x%x \n",  FW_VERSION  , New_FW_VER);
+#else
+    /* For ektf21xx and ektf20xx iap ekt file  */
+    printk("[ELAN]  [7bd0]=0x%02x,  [7bd1]=0x%02x, [7bd2]=0x%02x, [7bd3]=0x%02x\n",  file_fw_data[31696],file_fw_data[31697],file_fw_data[31698],file_fw_data[31699]);
+    New_FW_ID = file_fw_data[31699]<<8  | file_fw_data[31698] ;
+    New_FW_VER = file_fw_data[31697]<<8  | file_fw_data[31696] ;
+    printk(" FW_ID=0x%x,   New_FW_ID=0x%x \n",  FW_ID, New_FW_ID);
+    printk(" FW_VERSION=0x%x,   New_FW_VER=0x%x \n",  FW_VERSION  , New_FW_VER);
+#endif
+
+    /* for firmware auto-upgrade*/
+    if (New_FW_ID   ==  FW_ID)
+    {
+        if (New_FW_VER > (FW_VERSION))
+            Update_FW_One(private_ts->client, RECOVERY);
+
+    }
+    else
+    {
+        printk("FW_ID is different!");
+        Update_FW_One(private_ts->client, RECOVERY);
+    }
+
+    //Update_FW_One(private_ts->client, RECOVERY);
+    // Reset Touch Pannel
+    mt_set_gpio_mode( GPIO_CTP_RST_PIN, GPIO_CTP_RST_PIN_M_GPIO );
+    mt_set_gpio_dir( GPIO_CTP_RST_PIN, GPIO_DIR_OUT );
+    mt_set_gpio_out(GPIO_CTP_RST_PIN, GPIO_OUT_ZERO);
+    msleep(50);
+    mt_set_gpio_out( GPIO_CTP_RST_PIN, GPIO_OUT_ONE );
+    msleep(300);
+    // End Reset Touch Pannel
+
+	//read TP infomation again for update new FW 20140708
+    elan_ktf2k_ts_setup(private_ts->client);
+
+    power_lock=0;
+    work_lock=0;
+    //enable_irq(CUST_EINT_TOUCH_PANEL_NUM);
+    mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM);
+    printk("[elan] end fw update\n");
+
+    kthread_should_stop();
+#ifdef _DMA_FW_UPGRADE_MODE_
+    if(gpDMAFWBuf_va)
+    {
+        dma_free_coherent(NULL, 4096, gpDMAFWBuf_va, gpDMAFWBuf_pa);
+        gpDMAFWBuf_va = NULL;
+        gpDMAFWBuf_pa = NULL;
+    }
+#endif
+    return 0;
+}
+#endif
+
+static int touch_event_handler(void *unused)
+{
+    int rc;
+    uint8_t buf[PACKET_SIZE] = { 0 };
+
+    int touch_state = 3;
+//      int button_state = 0;
+    unsigned long time_eclapse;
+    struct sched_param param = { .sched_priority = RTPM_PRIO_TPD };
+    sched_setscheduler(current, SCHED_RR, &param);
+    int last_key = 0;
+    int key;
+    int index = 0;
+    int i =0;
+    MTK_TP_DEBUG("mtk-tpd interrupt touch_event_handler\n");
+
+    do
+    {
+        mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM);
+        MTK_TP_DEBUG("mtk-tpd touch_event_handler mt_eint_unmask tpd_flag = %d\n", tpd_flag);
+        set_current_state(TASK_INTERRUPTIBLE);
+        wait_event_interruptible(waiter, tpd_flag != 0);
+        tpd_flag = 0;
+        set_current_state(TASK_RUNNING);
+        mt_eint_mask(CUST_EINT_TOUCH_PANEL_NUM);
+        MTK_TP_DEBUG("mtk-tpd touch_event_handler mt_eint_mask\n");
+        rc = elan_ktf2k_ts_recv_data(private_ts->client, buf);
+
+        if (rc < 0)
+        {
+            printk("mtk-tpd:[elan] rc<0 rc = %d\n", rc);
+
+            continue;
+        }
+
+        elan_ktf2k_ts_report_data(/*ts*/private_ts->client, buf);
+
+    }
+    while(!kthread_should_stop());
+
+    return 0;
+}
+
+static int tpd_detect(struct i2c_client *client, int kind, struct i2c_board_info *info)
+{
+    strcpy(info->type, TPD_DEVICE);
+
+    return 0;
+}
+
+static void tpd_eint_interrupt_handler(void)
+{
+    MTK_TP_DEBUG("TPD interrupt has been triggered\n");
+    mt_eint_mask(CUST_EINT_TOUCH_PANEL_NUM);
+#ifdef ESD_CHECK
+    have_interrupts = 1;
+#endif
+    tpd_flag = 1;
+    wake_up_interruptible(&waiter);
+}
+
+static int __RE_K_handler(struct i2c_client *client)
+{
+    int rc;
+    uint8_t buf_recv[4] = { 0 };
+
+    rc = elan_ktf2k_ts_poll(client);
+    if (rc < 0)
+    {
+        printk( "[elan] %s: Int poll failed!\n", __func__);
+    }
+
+    i2c_master_recv(client, buf_recv, 4);
+
+    printk("[elan] %s: RE-K Packet %2x:%2X:%2x:%2x\n", __func__, buf_recv[0], buf_recv[1], buf_recv[2], buf_recv[3]);
+
+    return 0;
+}
+
+static void ctp_power_on(void)
+{
+    //power on, need confirm with SA
+#ifdef TPD_POWER_SOURCE_CUSTOM
+    hwPowerOn(TPD_POWER_SOURCE_CUSTOM, VOL_2800, "TP");
+#else
+    hwPowerOn(MT6323_POWER_LDO_VGP2, VOL_2800, "TP");
+#endif
+
+#ifdef TPD_POWER_SOURCE_1800
+    hwPowerOn(TPD_POWER_SOURCE_1800, VOL_1800, "TP");
+#endif
+
+}
+
+#ifdef IAP_PORTION
+extern char tpd_desc[50];
+static void get_vendor_info()
+{
+    int i,vendor_num = 0;
+    //FW ID CHECK ----start by baojun.fu
+    printk("KERN_ERR [elan] %s:  FW_ID: 0x%4.4x \n", __func__, FW_ID);
+    vendor_num = sizeof(g_vendor_map)/sizeof(g_vendor_map[0]);
+	if (vendor_num == 1)
+	{
+		file_fw_data = g_vendor_map[0].fw_array;
+		return;
+	}
+	else
+	{
+		for(i=0; i < vendor_num; i++)
+		{
+			if(FW_ID == g_vendor_map[i].vendor_id)
+			{
+				file_fw_data = g_vendor_map[i].fw_array;
+#ifdef TINNO_DEVICE_INFO
+				sprintf(tpd_desc, "%s",g_vendor_map[i].vendor_name);
+				printk("[elan] %s:  tpd_desc=%s \n", __func__, g_vendor_map[i].vendor_name);
+#endif
+				return;
+				}
+			}
+		}
+    printk(KERN_ERR "[elan] TP ID is error: no support!\n");
+}
+#endif
+static ssize_t ekt2k_show_version(struct device *dev,
+                                      struct device_attribute *attr, char *buf)
+{
+    ssize_t ret = 0;
+    struct elan_ktf2k_ts_data *ts = private_ts;
+	__fw_packet_handler(private_ts->client);
+	return sprintf(buf, "FW_VERSION = 0x%x, FW_ID = 0x%x, IC = ektf2k, VENDOR = ekt\n", FW_VERSION, FW_ID);
+}
+static ssize_t ekt2k_show_fw_need_update(struct device *dev,
+                                      struct device_attribute *attr, char *buf)
+{
+	//Implementation later 
+}
+static DEVICE_ATTR(ektf2k_version, S_IRUGO|S_IWUSR|S_IWGRP,ekt2k_show_version, NULL);
+static DEVICE_ATTR(ektf2k_fw_need_update, S_IRUGO|S_IWUSR|S_IWGRP, ekt2k_show_fw_need_update, NULL);
+
+static struct attribute *ektf2k_attributes[] = {
+	&dev_attr_ektf2k_version.attr,
+	&dev_attr_ektf2k_fw_need_update.attr,
+	NULL
+	};
+static struct attribute_group ektf2k_attribute_group = {
+	.attrs = ektf2k_attributes
+	};
+static struct kobject *viatel_kobj;
+/*
+struct kobject *viatel_kobject_add(const char *name)
+{
+	struct kobject *kobj = NULL;
+	if(viatel_kobj){
+			kobj = kobject_create_and_add(name, viatel_kobj);
+		}
+		return kobj;
+}
+*/
+static int tpd_probe(struct i2c_client *client, const struct i2c_device_id *id)
+{
+    int fw_err = 0;
+    int New_FW_ID;
+    int New_FW_VER;
+    int retval = TPD_OK;
+	int check_ic_ret = 0;
+	char data;
+    static struct elan_ktf2k_ts_data ts;
+
+#ifdef TP_PROXIMITY_SENSOR_NEW
+    struct hwmsen_object obj_ps;
+    s32 err = 0;
+#endif
+
+    client->addr |= I2C_ENEXT_FLAG;
+
+    printk("mtk-tpd:[elan] %s:client addr is %x, TPD_DEVICE = ektf2k\n",__func__,client->addr);
+    client->timing =  100;
+#if 1
+    i2c_client = client;
+    private_ts = &ts;
+    private_ts->client = client;
+#endif
+    ctp_power_on();
+    msleep(10);
+
+    MTK_TP_DEBUG("[elan] ELAN enter tpd_probe ,the i2c addr=0x%x\n", client->addr);
+
+
+    // Reset Touch Pannel
+    mt_set_gpio_mode( GPIO_CTP_RST_PIN, GPIO_CTP_RST_PIN_M_GPIO );
+    mt_set_gpio_dir( GPIO_CTP_RST_PIN, GPIO_DIR_OUT );
+    mt_set_gpio_out(GPIO_CTP_RST_PIN, GPIO_OUT_ZERO);
+    msleep(50);
+    mt_set_gpio_out( GPIO_CTP_RST_PIN, GPIO_OUT_ONE );
+    msleep(300);
+    // End Reset Touch Pannel
+	//below add for compat ekt and mstar chip
+	check_ic_ret = __check_ekt_ic_on_board(client);
+	printk("--%s:[%d]--check ekt ic on board result = %d\n", __func__, __LINE__, check_ic_ret);
+	if (check_ic_ret < 0)
+	{
+		printk("--%s:[%d]--no ekt chip on board \n", __func__, __LINE__);
+		have_ektf2k_chip_on_board = 0;
+		ektf2k_probed = 1;
+		return -1;
+	}else
+	{
+		printk("--%s:[%d]--find ekt chip on board \n", __func__, __LINE__);
+		have_ektf2k_chip_on_board = 1;
+		ektf2k_probed = 1;
+	}
+	//end add for compat ekt and mstar chip
+#ifdef _DMA_MODE_
+    gpDMABuf_va = (u8 *)dma_alloc_coherent(NULL, 4096, &gpDMABuf_pa, GFP_KERNEL);
+    if(!gpDMABuf_va)
+    {
+        printk(KERN_INFO "[elan] Allocate DMA I2C Buffer failed\n");
+    }
+#endif
+#ifdef _DMA_FW_UPGRADE_MODE_
+    gpDMAFWBuf_va = (u8 *)dma_alloc_coherent(NULL, 4096, &gpDMAFWBuf_pa, GFP_KERNEL);
+    if(!gpDMAFWBuf_va)
+    {
+        printk(KERN_INFO "[elan] Allocate DMA I2C Buffer failed\n");
+    }
+#endif
+    fw_err = elan_ktf2k_ts_setup(client);
+    if (fw_err < 0)
+    {
+        printk(KERN_INFO "[elan] No Elan chip inside\n");
+    }
+	if(tpd_reg_flag == 0)//// 1 -->elan; 0 -->other;
+	{
+		//return -1; //do not return for a chance to pc tool force update FW
+	}
+
+#ifndef LCT_VIRTUAL_KEY
+    set_bit( KEY_BACK,  tpd->dev->keybit );
+    set_bit( KEY_HOMEPAGE,  tpd->dev->keybit );
+    set_bit( KEY_MENU,  tpd->dev->keybit );
+#endif
+
+    // Setup Interrupt Pin
+    mt_set_gpio_mode(GPIO_CTP_EINT_PIN, GPIO_CTP_EINT_PIN_M_EINT);
+    mt_set_gpio_dir(GPIO_CTP_EINT_PIN, GPIO_DIR_IN);
+    mt_set_gpio_pull_enable(GPIO_CTP_EINT_PIN, GPIO_PULL_DISABLE);
+    //mt_eint_set_hw_debounce(CUST_EINT_TOUCH_PANEL_NUM, CUST_EINT_TOUCH_PANEL_DEBOUNCE_CN);
+    mt_eint_registration(CUST_EINT_TOUCH_PANEL_NUM, EINTF_TRIGGER_FALLING, tpd_eint_interrupt_handler, 0);
+    mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM);
+    msleep(10);
+    // End Setup Interrupt Pin
+
+    tpd_load_status = 1;
+
+    thread = kthread_run(touch_event_handler, 0, TPD_DEVICE);
+    if(IS_ERR(thread))
+    {
+        retval = PTR_ERR(thread);
+        printk(TPD_DEVICE "mtk-tpd:[elan]  failed to create kernel thread: %ld\n", retval);
+    }
+
+    printk("mtk-tpd:[elan]  ELAN Touch Panel Device Probe %s\n", (retval < TPD_OK) ? "FAIL" : "PASS");
+
+    // Firmware Update
+    // MISC
+    ts.firmware.minor = MISC_DYNAMIC_MINOR;
+    ts.firmware.name = "elan-iap";
+    ts.firmware.fops = &elan_touch_fops;
+    ts.firmware.mode = S_IRWXUGO;
+
+    if (misc_register(&ts.firmware) < 0)
+        printk("mtk-tpd:[elan] misc_register failed!!\n");
+    else
+        MTK_TP_DEBUG("[elan] misc_register finished!!\n");
+    // End Firmware Update
+
+#ifdef IAP_PORTION
+    get_vendor_info();
+    //if no matched FW ID , DO NOT to update
+    if (file_fw_data != NULL)
+    {
+        update_thread = kthread_run(update_fw_handler, 0, TPD_DEVICE);
+        if(IS_ERR(update_thread))
+        {
+            retval = PTR_ERR(update_thread);
+            printk(TPD_DEVICE "failed to create kernel update thread: %ld\n", retval);
+        }
+    }
+#endif
+
+#ifdef TP_PROXIMITY_SENSOR_NEW
+    obj_ps.polling = 0;        //0--interrupt mode;1--polling mode;
+    obj_ps.sensor_operate = ektf2k_ps_operate;
+
+    if ((err = hwmsen_attach(ID_PROXIMITY, &obj_ps)))
+    {
+        TPD_DEBUG("hwmsen attach fail, return:%d.", err);
+    }
+#endif
+
+#ifdef ESD_CHECK
+    INIT_DELAYED_WORK(&esd_work, elan_touch_esd_func);
+    esd_wq = create_singlethread_workqueue("esd_wq");
+    if (!esd_wq)
+    {
+        return -ENOMEM;
+
+    }
+    queue_delayed_work(esd_wq, &esd_work, delay);
+#endif
+
+    probe_flage = 1;
+    mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM);
+	//add attribute struct input_dev *idev = tpd->dev;
+	retval = sysfs_create_group(&client->dev.kobj, &ektf2k_attribute_group);
+	/*ektf2t_kobj = viatel_kobject_add("ektf2k_touch");
+	if (!ektf2t_kobj){
+			printk(KERN_ERR,  "error viatel_kobject_add!\n");
+			retval = -ENOMEM;
+		}
+	
+	retval = sysfs_create_group(ektf2t_kobj, &ektf2k_attribute_group);
+	*/
+	if(retval)
+	{
+		printk(KERN_ERR"add attribute failed\n");
+		//return retval;
+	}
+    return 0;
+}
+
+#ifdef TP_PROXIMITY_SENSOR_NEW
+static int CTP_Face_Mode_State(void)
+{
+    return PROXIMITY;
+}
+
+static  int CTP_Face_Mode_Switch(int onoff_state)
+
+{
+
+    if(work_lock == 1)
+    {
+        return -1;
+    }
+    U8 bWriteData[4] =
+    {
+        0x54, 0xC1, 0x00, 0x01
+    };
+
+    if(onoff_state==1)
+    {
+        PROXIMITY =1;
+        bWriteData[1] = 0xC1;
+        PROXIMITY_STATE = 1;
+        PROXIMITY_SLEEP = 0;
+    }
+    else
+    {
+        PROXIMITY =0;
+        bWriteData[1] = 0xC0;
+        PROXIMITY_STATE = -1;
+        PROXIMITY_SLEEP = 0;
+    }
+
+    printk("CTP_Face_Mode_Switch  onoff_state %d, PROXIMITY %d\n",onoff_state, PROXIMITY);
+
+    return i2c_master_send( i2c_client, &bWriteData[0], 4);
+}
+static  int Get_Ctp_Face_Mode(void)
+{
+    printk("Get_Ctp_Face_Mode PROXIMITY_STATE %d\n",PROXIMITY_STATE);
+
+    return PROXIMITY_STATE;
+}
+
+
+s32 ektf2k_ps_operate(void *self, u32 command, void *buff_in, s32 size_in,
+                      void *buff_out, s32 size_out, s32 *actualout)
+{
+    s32 err = 0;
+    s32 value;
+    hwm_sensor_data *sensor_data;
+
+    switch (command)
+    {
+        case SENSOR_DELAY:
+            printk("hdx ektf2k_ps_operate SENSOR_DELAY\n");
+            if ((buff_in == NULL) || (size_in < sizeof(int)))
+            {
+                TPD_DEBUG("Set delay parameter error!");
+                err = -EINVAL;
+            }
+
+            // Do nothing
+            break;
+
+        case SENSOR_ENABLE:
+            printk("hdx ektf2k_ps_operate SENSOR_ENABLE");
+            if ((buff_in == NULL) || (size_in < sizeof(int)))
+            {
+                TPD_DEBUG("Enable sensor parameter error!");
+                err = -EINVAL;
+            }
+            else
+            {
+                value = *(int *)buff_in;
+                CTP_Face_Mode_Switch(value);
+            }
+
+            break;
+
+        case SENSOR_GET_DATA:
+            printk("hdx ektf2k_ps_operate SENSOR_GET_DATA\n");
+            if ((buff_out == NULL) || (size_out < sizeof(hwm_sensor_data)))
+            {
+                TPD_DEBUG("Get sensor data parameter error!");
+                err = -EINVAL;
+            }
+            else
+            {
+                sensor_data = (hwm_sensor_data *)buff_out;
+                sensor_data->values[0] = Get_Ctp_Face_Mode();
+                sensor_data->value_divide = 1;
+                sensor_data->status = SENSOR_STATUS_ACCURACY_MEDIUM;
+            }
+
+            break;
+
+        default:
+            TPD_DEBUG("proxmy sensor operate function no this parameter %d!\n", command);
+            err = -1;
+            break;
+    }
+
+    return err;
+}
+#endif
+
+#ifdef ESD_CHECK
+static void elan_touch_esd_func(struct work_struct *work)
+{
+    int res;
+    uint8_t cmd[] = {0x53, 0x00, 0x00, 0x01};
+    struct i2c_client *client = private_ts->client;
+    //add by baojun.fu for i'm alive
+    static int por_cnt = 0;
+
+    printk("[elan esd] %s: enter.......\n", __FUNCTION__);      /* elan_dlx */
+    if(work_lock == 1) //updating or doing something else
+    {
+        printk("[elan esd] %s: work locked ..\n", __FUNCTION__);        /* elan_dlx */
+	    queue_delayed_work(esd_wq, &esd_work, delay);//add queue for IAP
+        return;
+    }
+
+    if(have_interrupts == 1)
+    {
+        printk("[elan esd] %s: had interrup not need check\n", __func__);
+    }
+    else
+    {
+        if ((++por_cnt) >= 2)
+        {
+            por_cnt = 0;
+            printk("[elan esd] %s: i'm alive failed need reset!\n", __func__);
+            //reset here
+            mt_set_gpio_mode(GPIO_CTP_RST_PIN, 0);
+            mt_set_gpio_dir(GPIO_CTP_RST_PIN, 1);
+            mt_set_gpio_out(GPIO_CTP_RST_PIN, 0);
+            msleep(10);
+
+            // for enable/reset pin
+            mt_set_gpio_mode(GPIO_CTP_RST_PIN, 0);
+            mt_set_gpio_dir(GPIO_CTP_RST_PIN, 1);
+            mt_set_gpio_out(GPIO_CTP_RST_PIN, 1);
+            msleep(10);
+        }
+        else
+        {
+            res = i2c_master_send(client, cmd, sizeof(cmd));
+            if (res != sizeof(cmd))
+            {
+                printk("[elan esd] %s: i2c_master_send failed reset now\n", __func__);
+                //reset here
+                mt_set_gpio_mode(GPIO_CTP_RST_PIN, 0);
+                mt_set_gpio_dir(GPIO_CTP_RST_PIN, 1);
+                mt_set_gpio_out(GPIO_CTP_RST_PIN, 0);
+                msleep(10);
+
+                // for enable/reset pin
+                mt_set_gpio_mode(GPIO_CTP_RST_PIN, 0);
+                mt_set_gpio_dir(GPIO_CTP_RST_PIN, 1);
+                mt_set_gpio_out(GPIO_CTP_RST_PIN, 1);
+                msleep(10);
+
+            }
+            else
+            {
+                printk("[elan esd] %s: i2c_master_send successful\n", __func__);
+
+                msleep(20);
+
+                if(have_interrupts == 1)
+                {
+                    printk("[elan esd] %s: i2c_master_send successful, had response\n", __func__);
+                }
+                else
+                {
+                    printk("[elan esd] %s: i2c_master_send successful, no response need reset\n", __func__);
+                    //reset here
+                    mt_set_gpio_mode(GPIO_CTP_RST_PIN, 0);
+                    mt_set_gpio_dir(GPIO_CTP_RST_PIN, 1);
+                    mt_set_gpio_out(GPIO_CTP_RST_PIN, 0);
+                    msleep(10);
+
+                    // for enable/reset pin
+                    mt_set_gpio_mode(GPIO_CTP_RST_PIN, 0);
+                    mt_set_gpio_dir(GPIO_CTP_RST_PIN, 1);
+                    mt_set_gpio_out(GPIO_CTP_RST_PIN, 1);
+                    msleep(10);
+                }
+            }
+        }
+    }
+
+    have_interrupts = 0;
+    queue_delayed_work(esd_wq, &esd_work, delay);
+    printk("[elan esd] %s: exit.......\n", __FUNCTION__);       /* elan_dlx */
+}
+#endif
+
+#ifdef TINNO_DEVICE_INFO
+static int ektf2k_tpd_get_fw_version( void )
+{
+    return FW_VERSION;
+}
+
+static void ektf2k_tpd_get_fw_vendor_name(char * fw_vendor_name)
+{
+    sprintf(fw_vendor_name, "%s", tpd_desc);
+}
+#endif
+
+static int tpd_remove(struct i2c_client *client)
+{
+    printk("mtk-tpd:[elan] TPD removed\n");
+
+#ifdef _DMA_MODE_
+    if(gpDMABuf_va)
+    {
+        dma_free_coherent(NULL, 4096, gpDMABuf_va, gpDMABuf_pa);
+        gpDMABuf_va = NULL;
+        gpDMABuf_pa = NULL;
+    }
+#endif
+
+    return 0;
+}
+
+
+static int tpd_suspend(struct i2c_client *client, pm_message_t message)
+{
+    int retval = TPD_OK;
+    static char data = 0x3;
+    uint8_t cmd[] = {CMD_W_PKT, 0x50, 0x00, 0x01};
+
+    printk("mtk-tpd:[elan] TP enter into sleep mode\n");
+    if(work_lock == 1) //updating or doing something else
+    {
+        printk(" [elan]%s: TP work locked \n", __func__);
+        return -1;
+    }
+
+#if defined(TP_PROXIMITY_SENSOR_NEW)
+    if( PROXIMITY == 1 )//PROXIMITY_STATE
+    {
+        PROXIMITY_SLEEP = 1;
+        printk("mtk-tpd:[elan] TP enter into sleep mode  ps return!\n");
+        return ;
+    }
+#endif //TP_PROXIMITY_SENSOR_NEW
+
+#ifdef ESD_CHECK
+    cancel_delayed_work_sync(&esd_work);
+#endif
+
+    if ((i2c_master_send(private_ts->client, cmd, sizeof(cmd))) != sizeof(cmd))
+    {
+        printk("mtk-tpd:[elan] %s: i2c_master_send failed\n", __func__);
+        return -retval;
+    }
+    mt_eint_mask(CUST_EINT_TOUCH_PANEL_NUM);
+
+    return retval;
+}
+
+
+static int tpd_resume(struct i2c_client *client)
+{
+    int retval = TPD_OK;
+    uint8_t cmd[] = {CMD_W_PKT, 0x58, 0x00, 0x01};
+    printk("mtk-tpd:[elan]tpd_resume TPD wake up,FW_ID: 0x%4.4x\n",FW_ID);
+
+    if(work_lock == 1) //updating or doing something else
+    {
+        printk(" [elan]%s: TP work locked \n", __func__);
+        return -1;
+    }
+
+#if defined(TP_PROXIMITY_SENSOR_NEW)
+    if( PROXIMITY== 1)//PROXIMITY_SLEEP
+    {
+        if (PROXIMITY_SLEEP == 1)
+        {
+            PROXIMITY_SLEEP = 0;
+            printk("mtk-tpd:[elan]tpd_resume TPD wake up ps return!\n");
+            return ;
+        }
+    }
+#endif //TP_PROXIMITY_SENSOR_NEW
+
+#ifdef ESD_CHECK
+    queue_delayed_work(esd_wq, &esd_work, delay);
+#endif
+
+#if 1
+    mt_set_gpio_out(GPIO_CTP_RST_PIN, GPIO_OUT_ZERO);
+    msleep(10);
+    mt_set_gpio_out( GPIO_CTP_RST_PIN, GPIO_OUT_ONE );
+//    msleep(10);
+#else
+    if ((i2c_master_send(private_ts->client, cmd, sizeof(cmd))) != sizeof(cmd))
+    {
+        printk("[elan] %s: i2c_master_send failed\n", __func__);
+        return -retval;
+    }
+    msleep(200);
+#endif
+
+    mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM);
+    return retval;
+}
+
+static int tpd_local_init(void)
+{
+    printk("[mtk-tpd]: ektf I2C Touchscreen Driver init\n");
+    if(i2c_add_driver(&tpd_i2c_driver) != 0)
+    {
+        printk("[mtk-tpd]: unable to add i2c driver.\n");
+        return -1;
+    }
+
+    if(tpd_load_status == 0)
+    {
+        printk("ektf2k add error touch panel driver.\n");
+        i2c_del_driver(&tpd_i2c_driver);
+        return -1;
+    }
+
+#ifdef TPD_HAVE_BUTTON
+    tpd_button_setting(TPD_KEY_COUNT, tpd_keys_local, tpd_keys_dim_local);// initialize tpd button data
+#endif
+
+#if (defined(TPD_WARP_START) && defined(TPD_WARP_END))
+    TPD_DO_WARP = 1;
+    memcpy(tpd_wb_start, tpd_wb_start_local, TPD_WARP_CNT * 4);
+    memcpy(tpd_wb_end, tpd_wb_start_local, TPD_WARP_CNT * 4);
+#endif
+#if (defined(TPD_HAVE_CALIBRATION) && !defined(TPD_CUSTOM_CALIBRATION))
+    memcpy(tpd_calmat, tpd_def_calmat_local, 8*4);
+    memcpy(tpd_def_calmat, tpd_def_calmat_local, 8*4);
+#endif
+
+    printk("mtk-tpd:end %s, %d\n", __FUNCTION__, __LINE__);
+    tpd_type_cap = 1;
+    return 0;
+}
+
+
+static struct tpd_driver_t tpd_device_driver =
+{
+    .tpd_device_name = "ektf2k",
+    .tpd_local_init = tpd_local_init,
+    .suspend = tpd_suspend,
+    .resume = tpd_resume,
+#ifdef TPD_HAVE_BUTTON
+    .tpd_have_button = 1,
+#else
+    .tpd_have_button = 0,
+#endif
+#ifdef TINNO_DEVICE_INFO
+    .tpd_get_fw_version = ektf2k_tpd_get_fw_version,
+    .tpd_get_fw_vendor_name = ektf2k_tpd_get_fw_vendor_name,
+#endif
+};
+
+static int __init tpd_driver_init(void)
+{
+    printk("mtk-tpd ektf2k touch panel driver init\n");
+
+    i2c_register_board_info(I2C_NUM, &ektf2k_i2c_tpd, 1);
+
+    if(tpd_driver_add(&tpd_device_driver) < 0)
+    {
+        printk("[mtk-tpd]: %s driver failed\n", __func__);
+    }
+    return 0;
+}
+
+
+static void __exit tpd_driver_exit(void)
+{
+    printk("[mtk-tpd]: %s elan ektf touch panel driver exit\n", __func__);
+    tpd_driver_remove(&tpd_device_driver);
+}
+
+module_init(tpd_driver_init);
+module_exit(tpd_driver_exit);
diff --git a/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_driver.h b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_driver.h
new file mode 100755
index 0000000..9af7f2e
--- /dev/null
+++ b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_driver.h
@@ -0,0 +1,90 @@
+#ifndef _LINUX_ELAN_KTF2K_H
+#define _LINUX_ELAN_KTF2K_H
+
+#include <linux/hrtimer.h>
+#include <linux/string.h>
+#include <linux/vmalloc.h>
+//#include <linux/io.h>
+
+#include <linux/init.h>
+#include <linux/module.h>
+#include <linux/delay.h>
+#include <linux/i2c.h>
+#include <linux/input.h>
+#include <linux/slab.h>
+#include <linux/gpio.h>
+#include <linux/sched.h>
+#include <linux/kthread.h>
+#include <linux/bitops.h>
+#include <linux/kernel.h>
+#include <linux/delay.h>
+#include <linux/byteorder/generic.h>
+#ifdef CONFIG_HAS_EARLYSUSPEND
+#include <linux/earlysuspend.h>
+#endif
+#include <linux/interrupt.h>
+#include <linux/time.h>
+#include <linux/rtpm_prio.h>
+
+#include <linux/proc_fs.h>
+#include <asm/uaccess.h>
+
+#include <mach/mt_pm_ldo.h>
+#include <mach/mt_typedefs.h>
+#include <mach/mt_boot.h>
+#include <mach/mt_gpio.h>
+
+#include <cust_eint.h>
+#include <pmic_drv.h>
+#include <linux/jiffies.h>
+#include <linux/miscdevice.h>
+
+#define ELAN_KTF2K_NAME "elan-ktf2k"
+
+#define PWR_STATE_DEEP_SLEEP              0
+#define PWR_STATE_NORMAL                  1
+#define PWR_STATE_MASK                    BIT(3)
+
+#define CMD_S_PKT                         0x52
+#define CMD_R_PKT                         0x53
+#define CMD_W_PKT                         0x54
+
+#define HELLO_PKT                         	0x55
+#define TWO_FINGERS_PKT             	   	0x5A
+#define FIVE_FINGERS_PKT                  	0x5D
+#define MTK_FINGERS_PKT                   	0x6D    /** 2 Fingers: 5A, 5 Fingers: 5D, 10 Fingers: 62 **/
+#define TEN_FINGERS_PKT              		0x62
+
+#define RESET_PKT                    			0x77
+#define CALIB_PKT                    			0xA8
+
+#define TPD_OK 0
+
+
+struct elan_ktf2k_i2c_platform_data {
+         uint16_t version;
+         int abs_x_min;
+         int abs_x_max;
+         int abs_y_min;
+         int abs_y_max;
+         int intr_gpio;
+         int (*power)(int on);
+};
+
+struct osd_offset{
+        int left_x;
+        int right_x;
+        unsigned int key_event;
+};
+
+//Elan add for OSD bar coordinate
+static struct osd_offset OSD_mapping[] = {
+	{35, 99, KEY_MENU},     		//menu_left_x, menu_right_x, KEY_MENU
+	{203, 267, KEY_HOMEPAGE}, 		//home_left_x, home_right_x, KEY_HOME
+	{373, 437, KEY_BACK},  			//back_left_x, back_right_x, KEY_BACK
+	{541, 605, KEY_SEARCH},   		//search_left_x, search_right_x, KEY_SEARCH
+};
+
+static int key_pressed = -1;
+
+#endif /* _LINUX_ELAN_KTF2K_H */
diff --git a/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_firmware.h b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_firmware.h
new file mode 100755
index 0000000..0be55c4
--- /dev/null
+++ b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/ektf2k_firmware.h
@@ -0,0 +1,33 @@
+#ifdef IAP_PORTION
+
+/*
+const u8 shenyue_fw[]=
+{
+#include "shenyue_03.i"
+};
+const u8 dijing_fw[]=
+{
+#include "dijing_S4010_02.i"
+};
+*/
+const u8 huaruichuan_fw[]=
+{
+#include "huaruichuan_03.i"
+};
+
+struct vendor_map
+{
+	int vendor_id;
+	char vendor_name[30];
+	uint8_t* fw_array;
+};
+const struct vendor_map g_vendor_map[]=
+{
+//	{0x2925,"dijing",dijing_fw},
+//	{0x4010,"shenyue",shenyue_fw},
+	{0x14f0,"huaruichuan",huaruichuan_fw},
+//	{0x2926,"shenyue",shenyue_fw},
+//	{0x03ea,"huaruichuan",huaruichuan_fw}
+};
+
+#endif/*IAP_PORTION*/
diff --git a/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/hicam_mstar_update.i b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/hicam_mstar_update.i
new file mode 100644
index 0000000..5914840
--- /dev/null
+++ b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/hicam_mstar_update.i
@@ -0,0 +1,2112 @@
+0x1c,0x21,0xe0,0xd, 0x21,0x1c,0xd, 0x41,0x18,0xd, 0x61,0x14,0xd, 0x81,0x10,0xd, 
+0xa1,0xc, 0xd, 0xc1,0x8, 0x80,0x1, 0x80,0x1, 0x80,0x1, 0x80,0x1, 0xc1,0x54,0x0, 
+0x1, 0xc9,0xaa,0x7a,0x30,0xe, 0xed,0x2, 0xe, 0xe1,0x0, 0xca,0xea,0x7a,0x70,0xe, 
+0xf7,0x2, 0xe, 0xe1,0x4, 0xc1,0x80,0x10,0x1, 0xc1,0x60,0x10,0x1, 0xe, 0xe1,0x2, 
+0xfd,0x8c,0x5, 0x5c,0xfd,0x6b,0x0, 0x84,0xd2,0xe0,0xc, 0x82,0xe, 0xe1,0x2, 0x1d,
+0xc0,0xef,0x57,0x17,0x10,0x23,0x0, 0xc8,0xc9,0x4a,0x7a,0x10,0xe, 0xea,0x2, 0x52,
+0xf7,0x10,0xe, 0xea,0x0, 0x52,0xe0,0x10,0xe, 0xed,0x0, 0xe, 0xea,0x2, 0x45,0xd7,
+0x74,0xd, 0xca,0x0, 0xc2,0xe0,0x10,0x1, 0xeb,0x17,0x6, 0x81,0x53,0x18,0x10,0xef,
+0x17,0x6, 0x81,0xe4,0x0, 0x9, 0xab,0xc6,0xf7,0x1, 0x0, 0xd2,0xe0,0x26,0x6a,0xe, 
+0xeb,0x2, 0x98,0x60,0x86,0xe8,0xca,0xea,0x7a,0x10,0xf, 0x17,0x2, 0xcb,0x18,0x1, 
+0x0, 0xf, 0x17,0x0, 0xca,0xe0,0x1, 0x0, 0xe, 0xed,0x0, 0xc2,0xe0,0x10,0x1, 0xeb,
+0x17,0x6, 0x81,0xcb,0x18,0x1, 0x0, 0xef,0x17,0x6, 0x81,0xc2,0xe0,0x10,0x1, 0xef,
+0x17,0x5, 0x4e,0x12,0xf8,0x0, 0x26,0xed,0xdb,0xca,0xea,0x26,0x70,0xcb,0x2a,0x26,
+0x74,0xa, 0xf7,0x1, 0xb, 0x39,0x1, 0x46,0xf9,0xbd,0x5e,0xf7,0x4, 0x22,0xe1,0x7e,
+0x9b,0x20,0xc9,0x4a,0x24,0x14,0xb, 0x4a,0x1, 0x4f,0x5a,0xbe,0x9e,0xe4,0x57,0x5a,
+0xf, 0x5e,0xe2,0x9, 0x8f,0x3a,0x5f,0x39,0x0, 0x23,0xff,0xb5,0xc3,0x74,0x0, 0x1, 
+0xc3,0x80,0x10,0x1, 0x9a,0xe0,0xcb,0x7b,0x26,0x80,0xff,0x9c,0x9, 0x2e,0xe4,0x0, 
+0x0, 0x3f,0x4f,0x57,0x10,0x8f,0x5b,0xb, 0xba,0x1, 0x13,0x58,0x0, 0xcf,0x5a,0x0, 
+0x13,0x8f,0x57,0x9e,0xe1,0x4f,0x5a,0x8, 0x8f,0x5c,0xf, 0xba,0x1, 0x5f,0x57,0x0, 
+0xd7,0x3a,0xff,0x15,0x12,0xf8,0x0, 0x9e,0xe1,0x1a,0xf8,0x0, 0xc3,0x0, 0x10,0x1, 
+0xee,0xf8,0x5, 0x36,0x13,0x37,0x0, 0x9f,0x21,0x1b,0x37,0x0, 0xc2,0xe0,0x10,0x1, 
+0xef,0x37,0x5, 0x6e,0x13,0x59,0x0, 0x9f,0x41,0x1b,0x59,0x0, 0xef,0x18,0x5, 0x36,
+0x13,0x18,0x0, 0x27,0xd, 0x63,0xc3,0x0, 0x10,0x1, 0xef,0x18,0x5, 0x4e,0x13,0x18,
+0x0, 0x27,0xd, 0x2b,0xee,0xf7,0x5, 0x6e,0x12,0xf7,0x0, 0x5e,0xe4,0xfb,0x20,0x0, 
+0xf5,0xc2,0xf4,0x0, 0x1, 0xff,0x40,0x80,0x0, 0xcb,0x17,0x26,0x18,0xb, 0x38,0x1, 
+0x47,0x39,0xd5,0x5f,0x39,0x4, 0xf, 0x38,0x1, 0xcb,0x17,0x24,0x28,0xb, 0x38,0x1, 
+0x53,0x39,0x1, 0xf, 0x38,0x1, 0xca,0xf7,0x7a,0x10,0xff,0x20,0xfe,0xff,0xf, 0x17,
+0x2, 0x47,0x18,0xcc,0xf, 0x17,0x0, 0xe4,0x0, 0x7, 0x33,0xe, 0xeb,0x2, 0xc, 0x6c,
+0x2, 0x86,0xe8,0xc2,0xf4,0x0, 0x1, 0xca,0xf7,0x7a,0x10,0xf, 0x17,0x2, 0x45,0xd8,
+0x74,0xd, 0xd7,0x0, 0xe4,0x0, 0x7, 0x9, 0xe, 0xe1,0x6, 0xd2,0xe0,0x1b,0xea,0xe, 
+0xe1,0x6, 0x56,0xf7,0x20,0xd2,0xe0,0x1b,0x9a,0xe, 0xeb,0x2, 0x98,0x60,0x86,0xe8,
+0xca,0xea,0x7a,0x50,0xcb,0x2a,0x74,0x68,0xf, 0x17,0x2, 0x53,0x18,0x20,0xf, 0x17,
+0x0, 0x13,0x79,0x0, 0xc3,0x80,0x10,0x1, 0x57,0x7b,0x4, 0xc3,0x40,0x10,0x1, 0xc3,
+0xa0,0x10,0x1, 0x5f,0x7b,0x0, 0xff,0x9c,0x6, 0x8c,0xff,0x5a,0x6, 0x74,0xff,0x1d,
+0x6, 0x82,0xd3,0x60,0xe, 0xf2,0xc9,0xa, 0x74,0xe0,0xc3,0x60,0x10,0x1, 0xc2,0xe0,
+0x10,0x1, 0xc9,0x4a,0x74,0x20,0xff,0x7b,0x6, 0x94,0xfe,0xf7,0x6, 0x84,0xb, 0xd9,
+0x1, 0xc7,0xde,0x6, 0x0, 0x23,0xc0,0xb6,0x13,0xc8,0x0, 0x57,0xde,0x8, 0x5f,0xde,
+0x0, 0x23,0xc3,0xb4,0xb, 0xd7,0x1, 0xd, 0xdb,0x2, 0x11,0xaa,0x0, 0x8f,0xce,0x19,
+0xbe,0x0, 0xb, 0xd7,0x1, 0xd3,0xce,0xfe,0xcd,0x9f,0xc1,0xf, 0xd7,0x1, 0xe7,0xff,
+0xff,0xa1,0xcb,0x20,0x7, 0x80,0x80,0x1, 0x9f,0x3f,0x23,0x23,0xf2,0xe4,0x0, 0x0, 
+0x5d,0x11,0x19,0x0, 0x55,0x8, 0x8, 0x5d,0x8, 0x0, 0x21,0x0, 0xb4,0x9, 0x17,0x1, 
+0xd, 0xbb,0x2, 0x11,0x5e,0x0, 0x8d,0xd, 0x19,0x48,0x0, 0x9, 0x17,0x1, 0xd1,0xe, 
+0x0, 0xcd,0x9d,0x1, 0xd, 0x17,0x1, 0xe4,0x0, 0x0, 0x21,0xc3,0xd4,0x0, 0x1, 0xcb,
+0x3e,0x74,0xe0,0xcb,0xde,0x74,0x20,0x11,0x19,0x0, 0x55,0x8, 0x8, 0x5d,0x8, 0x0, 
+0x21,0x3, 0x6, 0xb, 0xd7,0x1, 0xd3,0xc0,0x12,0xd2,0xf, 0x3b,0x2, 0x11,0x19,0x0, 
+0x1f,0x68,0xb0,0xd3,0x66,0x12,0x6d,0xc3,0x60,0x10,0x1, 0x5d,0xa, 0x49,0x5, 0x40,
+0x80,0xff,0x7b,0x6, 0x88,0x20,0x0, 0x99,0xd3,0xc4,0x8, 0x76,0x13,0x19,0x1, 0x13,
+0x59,0x2, 0x4f,0x18,0x40,0x13,0x39,0x3, 0x47,0x18,0xd5,0xc3,0x2, 0x7f,0xee,0x20,
+0x3, 0xdd,0x8d,0x58,0x1b,0x2a,0x0, 0xe4,0x0, 0x1, 0xdf,0x5d,0xa, 0x69,0x20,0x3, 
+0xa1,0xd3,0xc3,0x7, 0x2e,0x13,0xd9,0x2, 0x11,0x19,0x1, 0x4d,0x8, 0x40,0x47,0x28,
+0xf5,0xcb,0xc0,0x14,0x0, 0xc3,0x22,0x80,0xa, 0x4b,0x39,0xf0,0x8f,0x2a,0xc3,0xd4,
+0x0, 0x1, 0xf, 0x3c,0x0, 0xc9,0x5e,0x74,0x68,0xff,0x20,0x8, 0x0, 0xcb,0xde,0x78,
+0xcc,0xf, 0x3a,0x1, 0xe4,0x0, 0x0, 0x1f,0xb, 0x3e,0x1, 0x53,0x39,0x2, 0xf, 0x3e,
+0x1, 0x80,0x1, 0x11,0xa, 0x0, 0xc3,0x34,0x0, 0x1, 0x55,0x8, 0x20,0x5d,0x8, 0x0, 
+0x21,0x3, 0xa0,0xc, 0x18,0x1, 0xcb,0xd9,0x74,0xa8,0x13,0xde,0x0, 0xcb,0xd9,0x74,
+0xc0,0x13,0xde,0x0, 0xcb,0xd9,0x74,0x60,0xc9,0x59,0x74,0x68,0x9, 0x1e,0x1, 0xc9,
+0xb9,0x74,0xe0,0xc5,0x8, 0xfd,0xff,0xd, 0x1e,0x1, 0xcb,0xd9,0x74,0x20,0xcb,0x39,
+0x74,0x21,0xb, 0xb8,0x1, 0x9, 0x1a,0x1, 0xd5,0x1d,0x0, 0x8a,0x9, 0xa, 0x1, 0xc5,
+0x8, 0x2, 0x0, 0x5d,0x8, 0x4, 0x21,0x0, 0xa8,0xc3,0x34,0x0, 0x1, 0xcb,0x59,0x74,
+0x60,0xb, 0x9a,0x1, 0xcb,0x9c,0x2, 0x0, 0xf, 0x9a,0x1, 0xcb,0x59,0x74,0xa0,0xcb,
+0x39,0x74,0xa8,0x13,0x5a,0x0, 0x13,0x39,0x0, 0xc, 0x18,0x1, 0xe4,0x0, 0x0, 0x55,
+0x11,0xd, 0x0, 0x55,0x8, 0x2, 0x5d,0x8, 0x0, 0x21,0x3, 0xc, 0xd, 0x1c,0x2, 0x8f,
+0xa8,0x13,0xbd,0x0, 0x1b,0xbe,0x0, 0x18,0x19,0x0, 0xb, 0xb8,0x1, 0x9f,0xa1,0xf, 
+0xb8,0x1, 0xe7,0xff,0xff,0x41,0xc, 0x1b,0x0, 0xc, 0x17,0x1, 0xe4,0x0, 0x2, 0x49,
+0x13,0x39,0x0, 0x57,0x39,0x20,0x5f,0x39,0x0, 0xd3,0x20,0x8, 0xba,0xcb,0x2a,0x74,
+0xa0,0x13,0x39,0x0, 0xcb,0x6a,0x74,0xa8,0x13,0x3b,0x0, 0xf, 0x37,0x2, 0x53,0x39,
+0x20,0xf, 0x37,0x0, 0xc9,0x4a,0x79,0xe9,0xc2,0xe0,0x10,0x1, 0x13,0x2a,0x0, 0xfb,
+0x37,0x5, 0x69,0x9b,0x28,0xf3,0xd7,0x5, 0x69,0x23,0xc0,0x8c,0xf3,0x37,0x5, 0x69,
+0x23,0x24,0x2a,0x53,0x20,0x80,0xe4,0x0, 0x0, 0x2d,0xf3,0x37,0x5, 0x69,0x23,0x2b,
+0xd4,0xf2,0xf7,0x5, 0x69,0x22,0xef,0xb8,0xcb,0x20,0xff,0xff,0x12,0xfb,0x0, 0xa, 
+0xfa,0x1, 0xd7,0x37,0x4, 0x5d,0xc2,0xe0,0x10,0x1, 0xf3,0x37,0x6, 0xdf,0x23,0x20,
+0x24,0x9f,0x3f,0xfb,0x37,0x6, 0xdf,0xc2,0xf4,0x0, 0x1, 0xc, 0x18,0x1, 0xcb,0xd7,
+0x74,0x68,0xc9,0x17,0x74,0x20,0xc3,0xa0,0x10,0x1, 0xca,0xf7,0x74,0x21,0xe4,0x0, 
+0x0, 0x5b,0xf3,0x7d,0x5, 0x69,0x23,0x60,0x3c,0x13,0x7e,0x0, 0x57,0x7b,0x10,0x5f,
+0x7b,0x0, 0x23,0x63,0xdc,0xf, 0x7c,0x2, 0x8f,0x3b,0x13,0x39,0x0, 0x1b,0x28,0x0, 
+0x18,0x17,0x0, 0xb, 0x38,0x1, 0x9f,0x21,0xf, 0x38,0x1, 0xb, 0x38,0x1, 0xb, 0x7a,
+0x1, 0xd7,0x79,0xfe,0x8e,0xc2,0xf4,0x0, 0x1, 0xcb,0x37,0x74,0xa0,0xca,0xf7,0x74,
+0xa8,0x13,0x39,0x0, 0x12,0xf7,0x0, 0xc, 0x1a,0x1, 0xc, 0x18,0x1, 0xe4,0x0, 0x0, 
+0x69,0x18,0x1a,0x0, 0x18,0x1b,0x0, 0x9e,0xe1,0xe4,0x0, 0x0, 0x25,0xc3,0x14,0x0, 
+0x1, 0x9a,0xe0,0xcb,0x58,0x74,0x20,0xcb,0x78,0x74,0x21,0xc3,0x14,0x0, 0x1, 0xd7,
+0x37,0xff,0x15,0xca,0xf8,0x74,0xa0,0x12,0xf7,0x0, 0xcb,0x18,0x74,0xa8,0x12,0xf8,
+0x0, 0xc2,0xe0,0x10,0x1, 0xeb,0x17,0x6, 0x9d,0x53,0x18,0x2, 0xef,0x17,0x6, 0x9d,
+0xc2,0xe0,0x10,0x1, 0xeb,0x17,0x6, 0x9d,0xc7,0x18,0xff,0xfe,0xef,0x17,0x6, 0x9d,
+0xc2,0xf4,0x0, 0x1, 0xca,0xf7,0x7a,0x50,0x13,0x17,0x0, 0x57,0x18,0xdf,0x1b,0x17,
+0x0, 0xc2,0xe0,0x10,0x1, 0xeb,0x17,0x6, 0x77,0x53,0x18,0x20,0xef,0x17,0x6, 0x77,
+0xe, 0xeb,0x2, 0xc, 0x6c,0x2, 0x86,0xe8,0xd, 0xc1,0xa, 0xd, 0xa1,0xe, 0xd, 0x81,
+0x12,0xd, 0x61,0x16,0xd, 0x41,0x1a,0xd, 0x21,0x1e,0x1c,0x21,0x20,0x85,0x29,0xc2,
+0xe0,0x10,0x1, 0x5c,0x60,0x5b,0xf3,0x57,0xa, 0x74,0x1e,0xe3,0x1, 0x1f,0x7a,0xff,
+0x1f,0x3, 0xfe,0x5f,0x18,0x0, 0x4b,0x18,0x0, 0x5f,0x77,0x1d,0x5e,0xfb,0x0, 0x1f,
+0x23,0x2, 0x5f,0x39,0x0, 0x4b,0x39,0xb8,0xca,0xe0,0x20,0x0, 0xe4,0x0, 0x0, 0x31,
+0x4f,0x98,0x10,0x1f,0xb8,0x1, 0x8f,0x84,0x5f,0x1d,0x0, 0xf, 0x9c,0x2, 0x5e,0xfc,
+0x15,0x4a,0xf7,0xe0,0xd7,0x19,0xff,0x61,0x53,0x80,0x1e,0x4f,0x3, 0x10,0x53,0x20,
+0x14,0x8f,0x4, 0xf, 0x18,0x2, 0xc3,0x0, 0xf9,0xe8,0x4b,0x3c,0xc8,0x4b,0xac,0x53,
+0x4b,0x8a,0x43,0x20,0x60,0x62,0xf, 0x44,0x6, 0xc, 0x84,0x2, 0x40,0xe7,0xd3,0xcc,
+0x84,0x0, 0x32,0xd4,0x87,0x3, 0x60,0xe4,0x0, 0x1, 0x4d,0x20,0x64,0x62,0xf, 0x44,
+0x6, 0xc, 0x84,0x2, 0x40,0xe7,0xd3,0xcc,0x84,0x0, 0x32,0xd4,0x87,0x1, 0x20,0xe4,
+0x0, 0x1, 0x1d,0x1c,0xfa,0xfe,0xd4,0x67,0x1, 0x46,0x9f,0x5f,0x41,0x8, 0xc3,0x4f,
+0x5a,0x10,0x8c,0x9a,0xc, 0xe4,0x2, 0xcc,0xe7,0x0, 0x32,0xd4,0xe8,0x3, 0x94,0x43,
+0x39,0x2b,0x40,0xb7,0x2d,0x43,0xbd,0x2b,0x8f,0x3d,0xe4,0x0, 0x0, 0x61,0xd4,0x7b,
+0x2, 0xe, 0x4c,0xe7,0x10,0x8c,0xe4,0xc, 0xe7,0x2, 0x9f,0x5f,0x41,0x8, 0x3b,0x4f,
+0x5a,0x10,0x8c,0x9a,0xc, 0xe4,0x2, 0xcc,0xe7,0x0, 0x32,0xd4,0xe8,0x2, 0x14,0x43,
+0x39,0x2b,0x40,0xb7,0x2d,0x43,0x9c,0x2b,0x8f,0x3c,0xcc,0xc6,0x0, 0xa, 0x98,0xea,
+0x8c,0xd9,0x40,0xc6,0x38,0x5f,0x6, 0x15,0x48,0x60,0xa, 0xe4,0x0, 0x0, 0x49,0x43,
+0x39,0x2b,0xcc,0xc6,0x0, 0xa, 0x40,0xb7,0x2d,0x98,0xea,0xcc,0xa5,0x0, 0xe, 0x8c,
+0xc5,0x8f,0x26,0x43,0x39,0x38,0x5f,0x19,0x15,0xe7,0xff,0xff,0xbf,0x98,0x60,0x85,
+0x29,0xc0,0xe0,0x10,0x1, 0xe8,0xc7,0x5, 0x24,0x98,0xe1,0x1c,0xa6,0xff,0x5c,0xa5,
+0x4, 0x24,0xa4,0x57,0xc0,0xe0,0x10,0x1, 0xfc,0xe7,0x5, 0xd4,0x9c,0xdf,0x5c,0xc6,
+0x6, 0x8c,0xc7,0x10,0xe6,0x0, 0x20,0x61,0xa6,0xc0,0xc0,0x10,0x1, 0xf0,0xc6,0xa, 
+0x74,0xc0,0x80,0x10,0x1, 0x1c,0xa6,0xff,0x4f,0x86,0x8, 0x4f,0x65,0x8, 0xcf,0x46,
+0x0, 0x3, 0x5f,0x9c,0x0, 0x5f,0x7b,0x0, 0xfc,0x84,0x9, 0x8, 0xcf,0x25,0x0, 0x3, 
+0x98,0xc0,0xe4,0x0, 0x0, 0x67,0xb, 0xb7,0x1, 0x43,0xa7,0xeb,0xf, 0xb7,0x1, 0x9f,
+0x1, 0x8c,0xbb,0x4f,0x18,0x8, 0x5c,0xa5,0x0, 0x8f,0x4, 0xa, 0xf8,0x1, 0x42,0xe7,
+0xbb,0xe, 0xf8,0x1, 0x43,0x5, 0x34,0x4e,0xf8,0x8, 0x8e,0xe4,0xd7,0x25,0xfe,0xd4,
+0x8c,0xdc,0x5c,0xc6,0x0, 0xd7,0x46,0x3, 0x98,0x98,0xa0,0xe7,0xff,0xff,0xd3,0x20,
+0x65,0xa6,0xc0,0xc0,0x10,0x1, 0xf0,0xc6,0xa, 0x74,0xc0,0x80,0x10,0x1, 0x1c,0xa6,
+0xff,0x4f,0x86,0x8, 0x4f,0x65,0x8, 0xcf,0x46,0x0, 0x3, 0x5f,0x9c,0x0, 0x5f,0x7b,
+0x0, 0xfc,0x84,0x9, 0x8, 0xcf,0x25,0x0, 0x3, 0x98,0xc0,0xe4,0x0, 0x0, 0x67,0xb, 
+0xb7,0x0, 0x43,0xbd,0x38,0xf, 0xb7,0x1, 0x9f,0x1, 0x8c,0xbb,0x4f,0x18,0x8, 0x5c,
+0xa5,0x0, 0x8f,0x4, 0xa, 0xf8,0x0, 0x42,0xf7,0x38,0xe, 0xf8,0x1, 0x43,0x5, 0x34,
+0x4e,0xf8,0x8, 0x8e,0xe4,0xd7,0x25,0xfe,0xd4,0x8c,0xdc,0x5c,0xc6,0x0, 0xd7,0x46,
+0x0, 0x50,0x98,0xa0,0xe7,0xff,0xff,0xd3,0xc0,0xe0,0x10,0x1, 0xe8,0xa7,0x9, 0x8, 
+0xfc,0xe7,0x9, 0x8, 0x8, 0x87,0x2, 0x8c,0xa4,0xc0,0xc0,0x10,0x1, 0xec,0xa6,0x8, 
+0x28,0xc0,0xa0,0x10,0x1, 0xf0,0xa5,0xa, 0x74,0x1f,0x5, 0xff,0x4f,0x18,0x10,0x40,
+0x98,0x3c,0xfc,0xc6,0x8, 0x28,0x4e,0xe5,0x8, 0x8f,0x6, 0xb, 0x24,0x0, 0x1c,0x97,
+0xff,0x9e,0xe1,0x4f,0x44,0x8, 0x4e,0xf7,0x8, 0x8f,0x47,0x8e,0xe7,0xb, 0x5a,0x0, 
+0x8f,0x3a,0xf, 0x38,0x0, 0x4c,0xa5,0x10,0xb, 0x37,0x0, 0x43,0x5, 0x3c,0x42,0xe5,
+0x34,0xb, 0x18,0x0, 0x8f,0x19,0xf, 0x17,0x0, 0x4c,0x84,0x10,0x9c,0xbf,0x8c,0xc4,
+0x4c,0xa5,0x8, 0x8c,0x87,0x8c,0xe5,0x8, 0x84,0x0, 0x8, 0xe7,0x0, 0x8c,0xe4,0xc, 
+0xe6,0x0, 0x85,0x29,0xc2,0xe0,0x10,0x1, 0xc3,0x80,0x10,0x1, 0xf2,0xf7,0xa, 0x74,
+0xc3,0x40,0x10,0x1, 0x42,0xe7,0xbb,0xff,0x9c,0x8, 0x28,0x5e,0xf7,0x0, 0xff,0x5a,
+0x9, 0x8, 0x8c,0xd7,0x9b,0x20,0x8e,0xe5,0x5c,0xc6,0x0, 0x5e,0xf7,0x0, 0x98,0xa0,
+0x9b,0x0, 0xe4,0x0, 0x0, 0x4b,0x4f,0x77,0x10,0x43,0xbb,0xd4,0xb, 0xbd,0x0, 0x1f,
+0xd7,0x1, 0x8f,0x3d,0x5e,0xfe,0x0, 0x8b,0xbb,0x8f,0x7c,0x8f,0xba,0xf, 0x7b,0x2, 
+0xb, 0xbd,0x2, 0x8f,0x1b,0x8c,0xbd,0xd6,0xe6,0xfe,0xf9,0x24,0xa0,0xf0,0x27,0x0, 
+0xe4,0x27,0x20,0xd8,0x9c,0xe2,0xcf,0x39,0xff,0xf6,0x4c,0xe7,0x10,0xc0,0xc0,0x10,
+0x1, 0xfc,0xc6,0xa, 0x70,0x8c,0xe6,0xc, 0xe7,0x6, 0xf, 0x4, 0x0, 0x40,0xa5,0x3b,
+0x9c,0xf6,0x8c,0xb9,0x40,0xe5,0x38,0xcc,0xe7,0x7, 0xff,0x43,0x7, 0xc0,0xf, 0x3, 
+0x1, 0x98,0x61,0xe4,0x0, 0x0, 0xd, 0x98,0x60,0x85,0x29,0xc0,0xf4,0x0, 0x1, 0xfc,
+0x80,0xa5,0x5a,0xc8,0xa7,0x30,0x80,0xc8,0xc7,0x30,0x41,0x10,0xc6,0x0, 0xc, 0x85,
+0x1, 0x5c,0xc6,0x0, 0xc8,0xe7,0x30,0x89,0x4c,0xc6,0x21,0x4c,0xa6,0x8, 0x54,0xc6,
+0x8, 0x50,0xa5,0x40,0x4c,0xc6,0x10,0x44,0xc5,0x35,0x18,0xc7,0x0, 0x85,0x29,0x98,
+0xe3,0x98,0xc1,0xe4,0x0, 0x0, 0x11,0x8c,0xc7,0x9c,0xe2,0xd4,0xc3,0xff,0xe1,0x4c,
+0xe7,0x9, 0x1c,0x67,0xff,0x5c,0x63,0x6, 0x85,0x29,0xfc,0xe0,0x7f,0xff,0xc0,0xa0,
+0x10,0x1, 0xec,0xe5,0x6, 0x21,0xfc,0xc5,0x6, 0x20,0xc, 0xe6,0xb, 0xc, 0xe6,0x3, 
+0xc, 0xe6,0x5, 0xc, 0xe6,0x7, 0xc, 0xe6,0x9, 0x85,0x29,0xc0,0xa0,0x10,0x1, 0xc0,
+0xe0,0x10,0x1, 0xfc,0xa5,0x7, 0xec,0xfc,0xe7,0x6, 0x20,0x8, 0xc5,0x18,0x8, 0x87,
+0x8, 0x8, 0xa5,0x16,0xc0,0x8f,0xff,0xe0,0x20,0x0, 0x4d,0x8, 0x87,0x5, 0xc, 0x87,
+0x9, 0x8, 0x87,0x7, 0xc, 0x87,0xb, 0xe4,0x0, 0x0, 0x15,0xc, 0xc7,0xb, 0xc, 0xa7,
+0x9, 0xc0,0x80,0x10,0x1, 0xfc,0xe4,0x6, 0x20,0xa, 0xe7,0x4, 0xc2,0xef,0xff,0xe4,
+0x20,0x0, 0x35,0xc, 0xc7,0x7, 0xc, 0xa7,0x5, 0xe4,0x0, 0x0, 0x23,0xe8,0x84,0x6, 
+0x21,0xc, 0x87,0x5, 0x8, 0x87,0x3, 0xc, 0x87,0x7, 0xc0,0xe0,0x10,0x1, 0xec,0xa7,
+0x6, 0x21,0xfc,0xe7,0x6, 0x20,0xc, 0xc7,0x3, 0x85,0x29,0x1c,0x21,0xe0,0xd, 0x21,
+0x1c,0xd, 0x41,0x18,0xd, 0x61,0x14,0xd, 0x81,0x10,0xc1,0x40,0x10,0x1, 0xe8,0xea,
+0x6, 0x21,0xfd,0x4a,0x6, 0x20,0x9, 0x8a,0x5, 0x40,0xe7,0x65,0x9, 0x6a,0x7, 0x5c,
+0x67,0x6, 0xc, 0xe1,0x9, 0x8, 0xea,0x3, 0x40,0xe7,0x5d,0x5c,0xe7,0x6, 0x40,0xc7,
+0x3b,0xc, 0xe1,0xb, 0x40,0x63,0x1b,0x8c,0x66,0xe7,0xff,0xfe,0x2c,0x8, 0xea,0xb, 
+0x41,0x6b,0x3d,0x8, 0xea,0x9, 0x41,0x8c,0x3d,0x5d,0x4c,0x6, 0x40,0xea,0x53,0xc, 
+0x61,0x0, 0x5d,0x6b,0x6, 0xd, 0x81,0xd, 0xd, 0x61,0xf, 0x40,0x6b,0x5b,0x8c,0x67,
+0xe7,0xff,0xfd,0xde,0xc, 0xe1,0x2, 0x20,0xe0,0xc0,0x20,0x60,0xb4,0x40,0xc7,0x18,
+0xd0,0xc5,0x1, 0x3c,0x40,0x63,0x3b,0x8, 0xe1,0xa, 0x41,0x6b,0x3b,0x8, 0xe1,0x8, 
+0x41,0x4a,0x3b,0x40,0xeb,0x54,0xcc,0xe7,0x0, 0x64,0x40,0xe7,0x18,0x5c,0xe8,0xb9,
+0x48,0x60,0xa, 0xe4,0x0, 0x0, 0xd, 0x98,0x61,0xd, 0x81,0x12,0xd, 0x61,0x16,0xd, 
+0x41,0x1a,0xd, 0x21,0x1e,0x1c,0x21,0x20,0x85,0x29,0x1c,0x21,0xe0,0xd, 0x41,0x18,
+0xd, 0x61,0x14,0xd, 0x81,0x10,0xc1,0x60,0x10,0x1, 0xd, 0xc1,0x8, 0xd, 0xe1,0x4, 
+0xd, 0x21,0x1c,0xd, 0xa1,0xc, 0x89,0xe3,0x99,0x43,0xfd,0x8b,0x7, 0xec,0x89,0xcb,
+0x4c,0xcf,0x55,0x88,0xea,0x54,0xc6,0x1, 0x20,0xc0,0x96,0xe4,0x0, 0x0, 0x65,0x1d,
+0xa7,0x1, 0xcc,0xe7,0x0, 0x1c,0xcc,0x8d,0x0, 0x1c,0x40,0x67,0x64,0x8c,0x8c,0x9c,
+0x64,0x9c,0x84,0x50,0xa0,0x1c,0xe4,0x0, 0x0, 0xb8,0x5c,0xed,0x0, 0x24,0xef,0x89,
+0xf0,0xee,0x7, 0xec,0x20,0xe0,0x24,0x9c,0xff,0xf8,0xeb,0x7, 0xec,0x21,0x40,0x30,
+0x9d,0x5f,0x5d,0x4a,0x0, 0xe7,0xff,0xff,0x77,0xc0,0xe0,0x10,0x1, 0xf0,0xe7,0x7, 
+0xec,0x20,0xe0,0x52,0xc0,0xe0,0x10,0x1, 0x98,0xb7,0xe8,0xc7,0x6, 0xff,0x44,0xc6,
+0x2c,0xec,0xc7,0x6, 0xff,0xd, 0xe1,0x6, 0xd, 0xc1,0xa, 0xd, 0xa1,0xe, 0xd, 0x81,
+0x12,0xd, 0x61,0x16,0xd, 0x41,0x1a,0xd, 0x21,0x1e,0x1c,0x21,0x20,0x85,0x29,0x2c,
+0x0, 0xd, 0xc3,0xe0,0x0, 0x1, 0xcb,0xff,0x9, 0xd, 0x87,0xe9,0xc0,0xe0,0x10,0x1, 
+0xe8,0xc7,0x5, 0x24,0x20,0xc4,0xde,0xc0,0xe0,0x10,0x1, 0xc0,0xc0,0x10,0x1, 0xf0,
+0xa7,0xa, 0x74,0xfc,0xc6,0x7, 0x0, 0x9c,0xa1,0x98,0xe0,0xe4,0x0, 0x0, 0x31,0x4c,
+0x87,0x8, 0x1e,0xe7,0xff,0x1f,0x7, 0x1, 0x8c,0x86,0x4e,0xf7,0x10,0x5c,0xf8,0x0, 
+0xe, 0xe4,0x1, 0xd4,0xe5,0xff,0x60,0xe4,0x0, 0x0, 0xd1,0xc0,0xe0,0x10,0x1, 0xfc,
+0xe7,0xa, 0x70,0x20,0xc8,0x58,0x10,0xa7,0x4, 0xc0,0xc0,0x10,0x1, 0x9c,0xa1,0xfc,
+0xc6,0x7, 0x0, 0x98,0xe0,0xe4,0x0, 0x0, 0x8d,0x10,0xa7,0x4, 0xc0,0xc0,0x10,0x1, 
+0x9c,0xa1,0xfc,0xc6,0x7, 0x0, 0x98,0xe0,0xe4,0x0, 0x0, 0x31,0x4c,0x87,0x8, 0xce,
+0xe7,0x0, 0x6, 0x1f,0x7, 0x1, 0x8c,0x86,0x9e,0xf9,0x5c,0xf8,0x0, 0xe, 0xe4,0x1, 
+0xd4,0xe5,0xff,0x60,0xe4,0x0, 0x0, 0x37,0x4c,0x87,0x8, 0x4e,0xe7,0x8, 0x1f,0x7, 
+0x1, 0x8c,0x86,0x9e,0xff,0x5c,0xf8,0x0, 0xe, 0xe4,0x1, 0xd4,0xe5,0xff,0x68,0x85,
+0x29,0x40,0x84,0x1d,0xc2,0xe0,0x10,0x1, 0x9c,0x81,0xf2,0xf7,0xa, 0x74,0x5c,0x84,
+0x0, 0x42,0xe5,0xbb,0x5e,0xf7,0x0, 0x21,0x4, 0x3c,0xc0,0xa0,0x10,0x1, 0xfc,0xa5,
+0x9, 0x8, 0xe4,0x0, 0x0, 0x19,0xc0,0xa0,0x10,0x1, 0xfc,0xa5,0x8, 0x50,0x8e,0xe3,
+0xc3,0xf, 0xff,0xe1,0x4f,0x57,0x10,0xcb,0x18,0xff,0xff,0x9f,0x42,0x4e,0xf7,0x10,
+0x8f,0x45,0x8e,0xe5,0x4f,0x84,0x10,0x88,0xa6,0x9b,0x20,0xe4,0x0, 0x0, 0x5b,0x20,
+0xe0,0x2a,0xb, 0x77,0x0, 0xe4,0x0, 0x0, 0x1f,0xb, 0x7a,0x0, 0x20,0xe4,0x20,0xb, 
+0xb7,0x0, 0x8f,0x7d,0xf, 0x65,0x0, 0x9f,0x24,0xf, 0x65,0x2, 0x9e,0xe4,0x5f,0x1b,
+0x15,0x9f,0x44,0x9c,0xa4,0x4b,0x18,0xd8,0xd7,0x3c,0xfe,0xbe,0x98,0xe0,0xe4,0x0, 
+0x0, 0x29,0xc, 0xa6,0x2, 0x9c,0xe1,0x40,0xa5,0xc5,0x5c,0xe7,0x0, 0xc, 0xa6,0x0, 
+0x9c,0xc4,0xd4,0x87,0xff,0x85,0x85,0x29,0x1c,0x21,0x88,0xd, 0x41,0x70,0xd, 0x61,
+0x6c,0x89,0x44,0xd, 0x81,0x68,0xd, 0xa1,0x64,0xd, 0x21,0x74,0x89,0xa5,0x89,0x83,
+0x88,0xa6,0x88,0x8d,0x88,0xc1,0x88,0x6a,0xe7,0xff,0xfe,0x92,0xc0,0xe0,0x10,0x1, 
+0x41,0xad,0x55,0xe8,0xa7,0x5, 0x24,0x9d,0xa1,0xcf,0x2a,0x0, 0x6, 0x4f,0xa, 0x8, 
+0x5d,0xad,0x0, 0x89,0x61,0x9f,0x3f,0x9f,0x1, 0x98,0x80,0x98,0xc0,0x98,0xe0,0xe4,
+0x0, 0x0, 0x4b,0xe, 0xeb,0x2, 0x43,0x44,0x54,0x43,0x5a,0xbb,0x20,0xa4,0x30,0x43,
+0x59,0xbb,0x20,0xa8,0x18,0x43,0x58,0xbb,0x8c,0xda,0x8c,0xf7,0x9c,0x81,0x9f,0x26,
+0x9f,0x2, 0x9d,0x64,0x5e,0xe4,0x0, 0xd5,0xb7,0xfe,0xe5,0x98,0x60,0x24,0xe1,0x30,
+0xc0,0x80,0x10,0x1, 0xe8,0x84,0xa, 0x7b,0x40,0xc6,0x23,0x20,0xa4,0x32,0x4c,0xa7,
+0xa, 0x8c,0xc5,0xe4,0x0, 0x0, 0x3b,0x20,0xa8,0x52,0xcc,0xa7,0x0, 0x6, 0xcc,0xe7,
+0x0, 0x3, 0x8c,0xe6,0x40,0xe7,0x28,0xe4,0x0, 0x0, 0x19,0x8c,0xc7,0x4c,0xe7,0x8, 
+0x40,0xe6,0x38,0xc0,0xe0,0xff,0xe8,0xc8,0xc0,0x7, 0xff,0x98,0x61,0x48,0xe7,0x30,
+0x5c,0xff,0xf9,0x48,0xe7,0x0, 0xc, 0xec,0x1, 0xd, 0xa1,0x66,0xd, 0x81,0x6a,0xd, 
+0x61,0x6e,0xd, 0x41,0x72,0xd, 0x21,0x76,0x1c,0x21,0x78,0x85,0x29,0xfc,0x21,0xff,
+0x80,0xd, 0x41,0x78,0xd, 0x61,0x74,0xd, 0x81,0x70,0xd, 0xa1,0x6c,0xd, 0xc1,0x68,
+0xd, 0xe1,0x64,0xe, 0xc1,0x60,0xd, 0x21,0x7c,0x89,0x84,0x89,0xe3,0xc1,0xa0,0x10,
+0x1, 0x88,0x64,0xfd,0xad,0xa, 0x70,0x10,0x8d,0x4, 0x41,0x46,0x23,0x4c,0x84,0x8, 
+0x9c,0x8e,0xc4,0x84,0x3, 0xf8,0xfe,0xc1,0x0, 0x80,0x89,0x65,0x89,0xc1,0x88,0xa6,
+0x40,0x21,0x25,0x1c,0xd6,0x80,0x88,0x8b,0xe7,0xff,0xfc,0x92,0x10,0x8d,0x4, 0xc0,
+0xc0,0x10,0x1, 0x5d,0x4a,0x0, 0x4c,0x84,0x8, 0xfc,0xc6,0x7, 0x0, 0x88,0xa1,0x98,
+0xe0,0xe4,0x0, 0x0, 0x25,0x42,0xe5,0x3c,0x43,0x7, 0x34,0x9c,0xe2,0xb, 0x18,0x3, 
+0xf, 0x17,0x1, 0xd4,0xe4,0xff,0x96,0x8d,0x8a,0x8d,0x6a,0x5d,0x8c,0x0, 0x5d,0x6b,
+0x0, 0x1c,0xd6,0x80,0x1c,0x8b,0x1, 0x98,0xe0,0x40,0x84,0x65,0x5c,0x84,0x0, 0xe4,
+0x0, 0x0, 0x2d,0x1e,0xe7,0x1, 0xf, 0x6, 0x2, 0x27,0x0, 0x4a,0x9c,0xc4,0xd5,0x67,
+0x3, 0x31,0x5c,0xf7,0x0, 0xd4,0x87,0xff,0x75,0x88,0xec,0x1c,0x96,0xe0,0x4c,0xc7,
+0x10,0x8c,0xc4,0x1e,0xf6,0xe0,0xc, 0x86,0xa2,0x1c,0xc7,0x1, 0x40,0x84,0x23,0x4c,
+0xc6,0x10,0x8c,0xd7,0xc, 0xc6,0xa2,0x40,0xc6,0x33,0x24,0xc0,0xe8,0x24,0x80,0xdc,
+0x41,0x4c,0x55,0x8c,0xea,0x4c,0xe7,0x8, 0x8c,0xa7,0xb, 0x5, 0x0, 0xc0,0xa0,0x10,
+0x1, 0xfc,0xa5,0xa, 0x70,0x8c,0x86,0x12,0xe5,0x14,0x8, 0xe5,0xb, 0x98,0x61,0x40,
+0xb8,0x3b,0x40,0xe6,0x3b,0x40,0xa5,0xb8,0x40,0xe7,0x20,0x8c,0xe5,0xc, 0xef,0x1, 
+0xe4,0x0, 0x0, 0xd, 0x98,0x60,0x88,0x2e,0xe, 0xc1,0x62,0xd, 0xe1,0x66,0xd, 0xc1,
+0x6a,0xd, 0xa1,0x6e,0xd, 0x81,0x72,0xd, 0x61,0x76,0xd, 0x41,0x7a,0xd, 0x21,0x7e,
+0xfc,0x21,0x0, 0x80,0x85,0x29,0xc0,0xe0,0x10,0x1, 0xc0,0x60,0x10,0x1, 0x1c,0x21,
+0xc0,0xf0,0x87,0xa, 0x70,0xd, 0x41,0x38,0xd, 0x61,0x34,0xe, 0x1, 0x20,0xe, 0x21,
+0x1c,0xe, 0x41,0x18,0xe, 0x61,0x14,0xe, 0x81,0x10,0xe, 0xa1,0xc, 0xe, 0xc1,0x8, 
+0xd, 0x21,0x3c,0xd, 0x81,0x30,0xd, 0xa1,0x2c,0xd, 0xc1,0x28,0xd, 0xe1,0x24,0xfe,
+0xc3,0x8, 0x96,0x98,0xa0,0x88,0x76,0xc2,0x40,0x10,0x1, 0xe4,0x0, 0xb1,0xf8,0x99,
+0x60,0x99,0x40,0xfe,0x32,0x7, 0xec,0xc2,0xa0,0x10,0x1, 0x9a,0x1, 0x1e,0x81,0x6, 
+0x1e,0x61,0x4, 0xe4,0x0, 0x1, 0x21,0xcd,0x8a,0x0, 0x1c,0xe8,0xf5,0x4, 0xf9,0x40,
+0x71,0x64,0x54,0xe7,0x2, 0x8d,0x91,0x1c,0x63,0x16,0x11,0xec,0x4, 0x11,0xcc,0x5, 
+0x88,0x8f,0x88,0xae,0x11,0xac,0x7, 0x20,0xe1,0x4, 0x88,0xcd,0x88,0x74,0x98,0xe2,
+0x99,0x0, 0xe7,0xff,0xfa,0xec,0x20,0x60,0xfc,0x88,0x8f,0x88,0xae,0x88,0xcd,0x88,
+0x73,0x98,0xe2,0x99,0x0, 0xe7,0xff,0xfc,0x70,0x20,0x60,0xb0,0x8, 0xc1,0x4, 0xcc,
+0xc6,0x0, 0x3, 0x8, 0xe1,0x6, 0xcc,0xe7,0x0, 0x7, 0x8c,0xe6,0x98,0xca,0x40,0xe7,
+0x30,0xc, 0xec,0x17,0xe4,0x0, 0x0, 0x35,0x88,0xcd,0x98,0xe2,0x99,0x0, 0xe7,0xff,
+0xfa,0x74,0x20,0x60,0x32,0x4c,0xf0,0x54,0x45,0x6b,0x3d,0x5d,0x6b,0x0, 0xc0,0xe0,
+0x10,0x1, 0x88,0x76,0xf0,0x87,0xa, 0x70,0x98,0xa1,0x9d,0x41,0xe4,0x0, 0xb0,0xb6,
+0x5d,0x4a,0x0, 0xf0,0xf2,0x7, 0xec,0xd4,0xea,0xfb,0x85,0x88,0x6b,0xe7,0xff,0xf6,
+0x3a,0xc0,0xe0,0x10,0x1, 0xf0,0xe7,0x7, 0xec,0x20,0xe0,0x6c,0xc0,0xe0,0x10,0x1, 
+0xe8,0xe7,0x4, 0xfb,0x54,0xe7,0x40,0x20,0xe0,0x34,0xc0,0xe0,0x10,0x1, 0xec,0xe7,
+0x0, 0xd2,0x84,0xe8,0xc0,0xe0,0x10,0x1, 0xc0,0x60,0x10,0x1, 0xf0,0x87,0xa, 0x70,
+0xfc,0x63,0x8, 0x96,0x98,0xa1,0xe4,0x0, 0xb0,0x22,0xd, 0x21,0x3e,0xe, 0xc1,0xa, 
+0xe, 0xa1,0xe, 0xe, 0x81,0x12,0xe, 0x61,0x16,0xe, 0x41,0x1a,0xe, 0x21,0x1e,0xe, 
+0x1, 0x22,0xd, 0xe1,0x26,0xd, 0xc1,0x2a,0xd, 0xa1,0x2e,0xd, 0x81,0x32,0xd, 0x61,
+0x36,0xd, 0x41,0x3a,0x1c,0x21,0x40,0x85,0x29,0x1c,0x21,0xd0,0xd, 0xc1,0x18,0xd, 
+0xe1,0x14,0xd, 0x21,0x2c,0xd, 0x41,0x28,0xd, 0x61,0x24,0xd, 0x81,0x20,0xd, 0xa1,
+0x1c,0xe, 0x1, 0x10,0xe, 0x21,0xc, 0x89,0xe3,0x89,0xc4,0xe7,0xff,0xfc,0xf6,0xc0,
+0xe0,0x10,0x1, 0xe8,0xe7,0x4, 0xfb,0x54,0xe7,0x80,0x20,0xe0,0x56,0xc1,0xa0,0x10,
+0x1, 0x99,0x60,0x99,0x40,0xfd,0x8d,0x7, 0xec,0x9a,0x1, 0xe4,0x0, 0x0, 0x81,0xc0,
+0xe0,0x10,0x1, 0xec,0xe7,0x0, 0xd6,0x84,0xe8,0xe4,0x0, 0x0, 0x81,0xcc,0x8a,0x0, 
+0x1c,0x40,0xc4,0x64,0x88,0x66,0x88,0x86,0x10,0xe6,0x7, 0x10,0xa6,0x4, 0x1c,0x63,
+0x18,0x9c,0x8c,0x10,0xc6,0x5, 0xe7,0xff,0xf0,0x3c,0x20,0x60,0x32,0x4c,0xf0,0x54,
+0x45,0x6b,0x3d,0x5d,0x6b,0x0, 0x9d,0x41,0x5d,0x4a,0x0, 0xf0,0xed,0x7, 0xec,0xd4,
+0xea,0xfe,0x75,0x88,0x6b,0xe7,0xff,0xf4,0x4a,0x21,0xe0,0x8c,0x21,0xc0,0x80,0xc1,
+0x80,0x10,0x1, 0xc2,0x20,0x10,0x1, 0x99,0x60,0xfe,0x31,0x5, 0x6, 0xfe,0xc, 0x7, 
+0xec,0xc1,0xe0,0x10,0x1, 0x1d,0xc1,0x4, 0xe4,0x0, 0x0, 0xc7,0xc0,0xe0,0x10,0x1, 
+0xc0,0xc0,0x10,0x1, 0xeb,0x7, 0x4, 0xf9,0xf2,0xe6,0x7, 0xec,0xc0,0xe0,0x10,0x1, 
+0xce,0xf7,0x0, 0x1c,0xfc,0xe7,0x8, 0x4, 0x57,0x18,0x1, 0x8e,0xe7,0xfc,0x80,0x7, 
+0xff,0xc8,0xa0,0x7, 0xff,0xe4,0x0, 0x0, 0xed,0xcd,0x4b,0x0, 0x1c,0x8d,0x50,0x8, 
+0xca,0x16,0xc, 0xc1,0x4, 0x8, 0xca,0x18,0xec,0xef,0x0, 0xda,0xc, 0xc1,0x0, 0x88,
+0x6e,0x88,0x81,0xc, 0xaa,0xe, 0x88,0xd1,0x84,0xe8,0xc, 0xe1,0x6, 0x9d,0x61,0xc, 
+0xea,0x17,0x5d,0x6b,0x0, 0xc, 0xe1,0x2, 0xc, 0xea,0x19,0xf0,0xec,0x7, 0xec,0xd4,
+0xeb,0xfe,0x55,0xe7,0xff,0xff,0x33,0x8, 0xc7,0x0, 0x5c,0xdf,0xf9,0x8, 0xc7,0x1, 
+0x48,0xc6,0x0, 0x5c,0xc6,0x6, 0xc0,0xc0,0xff,0xe8,0x48,0xc6,0x20,0x5c,0xc6,0x6, 
+0xc, 0xc7,0x1, 0x13,0x27,0xef,0xcc,0xc6,0x3, 0xff,0x23,0x0, 0x38,0x40,0xc6,0x28,
+0x4f,0x39,0x50,0x8c,0xd9,0xc, 0xc7,0x1, 0x1c,0xe7,0x1c,0xd4,0xf7,0xfe,0x66,0xe, 
+0x21,0xe, 0xe, 0x1, 0x12,0xd, 0xe1,0x16,0xd, 0xc1,0x1a,0xd, 0xa1,0x1e,0xd, 0x81,
+0x22,0xd, 0x61,0x26,0xd, 0x41,0x2a,0xd, 0x21,0x2e,0x1c,0x21,0x30,0x85,0x29,0x1c,
+0x21,0xe0,0x5e,0xe3,0x4, 0xd, 0x81,0x14,0xd, 0xa1,0x10,0xd, 0xc1,0xc, 0xd, 0xe1,
+0x8, 0xd, 0x41,0x1c,0xd, 0x61,0x18,0xe, 0x1, 0x4, 0xc3,0x0, 0x10,0x1, 0x9b,0x41,
+0xff,0x18,0xa, 0x70,0xc1,0xa0,0x10,0x1, 0x8, 0xf8,0xb, 0x13,0x38,0x14,0x41,0xe0,
+0x3d,0x13,0x18,0x4, 0x41,0xef,0xbd,0x40,0xc6,0xc3,0x41,0xd7,0x3d,0x43,0x5a,0x35,
+0x5d,0xef,0x4, 0x5c,0xc6,0x0, 0x5d,0xce,0x4, 0x8c,0xa6,0xfd,0xad,0x7, 0x0, 0x8c,
+0xc4,0x5c,0xa5,0x0, 0xc0,0x80,0x10,0x1, 0x5c,0xc6,0x0, 0xfc,0x84,0x9, 0x8, 0x4d,
+0x87,0x8, 0x53,0x60,0x64,0xe4,0x0, 0x1, 0x79,0x43,0x86,0xd4,0x4f,0x9c,0x8, 0x8f,
+0x8d,0x9, 0x7c,0x0, 0x41,0x6b,0x3b,0x41,0x6b,0xc8,0x5d,0x6b,0x6, 0x5f,0xab,0x4, 
+0x43,0x9d,0xbd,0x5f,0x9c,0x6, 0x4f,0xdc,0xfa,0x47,0x9e,0xe6,0x43,0x9c,0xf5,0xd4,
+0xfc,0x4, 0x6c,0x4f,0xc6,0x10,0x8f,0xc4,0xd5,0x9c,0x3, 0xc8,0x4f,0xc6,0x8, 0x42,
+0x1d,0x7c,0x1d,0x1e,0x1, 0x43,0xae,0xed,0x5e,0x10,0x6, 0x5f,0xbd,0x6, 0x42,0x7, 
+0x85,0x43,0xa7,0xed,0x4d,0x8, 0x8, 0x4f,0xc6,0x10,0x8d,0x4, 0xce,0x10,0x0, 0x64,
+0xcf,0xbd,0x0, 0x64,0x8b,0x88,0x41,0x44,0xf4,0xd5,0x63,0x1, 0x30,0xb, 0xaa,0x0, 
+0x43,0x90,0x38,0x5f,0x9c,0x4, 0x43,0xbc,0xeb,0x43,0xbd,0xd8,0xf, 0xaa,0x1, 0xb, 
+0xa8,0x0, 0x43,0x9c,0xeb,0x43,0x9c,0xd8,0xf, 0x88,0x1, 0xe4,0x0, 0x0, 0x63,0x9, 
+0xa, 0x0, 0x43,0xbd,0x38,0x5f,0xbd,0x4, 0x41,0x1d,0x43,0x41,0x8, 0xd8,0xd, 0xa, 
+0x1, 0xb, 0xdc,0x0, 0x43,0xbd,0xf3,0x43,0xbd,0xd8,0xf, 0xbc,0x1, 0xe4,0x0, 0x0, 
+0x1f,0xc, 0x1e,0x1, 0x4f,0x86,0x10,0x8f,0x84,0xc, 0x1c,0x3, 0x9c,0xc1,0x5c,0xc6,
+0x0, 0xd4,0xc5,0xfa,0x40,0xc0,0xe0,0x10,0x1, 0xf0,0xe7,0xa, 0x71,0x43,0x18,0x3b,
+0xe, 0x1, 0x6, 0xd, 0xe1,0xa, 0xd, 0xc1,0xe, 0xd, 0xa1,0x12,0xd, 0x81,0x16,0xd, 
+0x61,0x1a,0xd, 0x41,0x1e,0x5c,0x78,0x0, 0x1c,0x21,0x20,0xe4,0x0, 0xa8,0xa3,0xc2,
+0xe0,0x10,0x1, 0xf8,0x17,0x0, 0xf8,0xc2,0xe0,0x10,0x1, 0xf8,0x17,0x0, 0xec,0xc2,
+0xe0,0x10,0x1, 0xf8,0x17,0x0, 0xed,0xc2,0xe0,0x10,0x1, 0xf8,0x17,0x0, 0xe4,0xc2,
+0xe0,0x10,0x1, 0xf8,0x17,0x0, 0xe5,0xc2,0xe0,0x10,0x1, 0xf8,0x77,0x0, 0xf9,0xc2,
+0xe0,0x10,0x1, 0xf8,0x97,0x0, 0xfa,0xc0,0x80,0x10,0x1, 0xec,0xa4,0x0, 0xfc,0xc0,
+0xa0,0x10,0x1, 0xec,0xc5,0x1, 0x0, 0xc0,0xc0,0x10,0x1, 0xec,0xe6,0x1, 0x4, 0xc0,
+0xe0,0x10,0x1, 0xc, 0xc1,0x2, 0xed,0x7, 0x1, 0x8, 0xc0,0xe0,0x10,0x1, 0xec,0xc7,
+0x1, 0xc, 0xc0,0xe0,0x10,0x1, 0xc, 0xc1,0x6, 0xec,0xc7,0x1, 0x10,0x85,0x29,0xc0,
+0xe0,0x10,0x1, 0xfc,0xe7,0x0, 0xec,0xc, 0xe3,0x0, 0xc0,0xe0,0x10,0x1, 0xfc,0xe7,
+0x0, 0xed,0xc, 0xe4,0x0, 0xc0,0xe0,0x10,0x1, 0xfc,0xe7,0x0, 0xe4,0xc, 0xe5,0x0, 
+0xc0,0xe0,0x10,0x1, 0xfc,0xe7,0x0, 0xe5,0xc, 0xe6,0x0, 0x85,0x29,0xc0,0xe0,0x10,
+0x1, 0xec,0x67,0x0, 0xf0,0xc0,0xe0,0x10,0x1, 0xec,0x87,0x0, 0xf4,0xc0,0xe0,0x10,
+0x1, 0xec,0xa7,0x0, 0xe8,0x85,0x29,0xc0,0xe0,0x10,0x1, 0xf8,0x67,0x0, 0xf8,0x85,
+0x29,0xc0,0xe0,0x10,0x1, 0xf0,0x67,0x0, 0xf8,0x85,0x29,0x9c,0x38,0xc0,0xe0,0x10,
+0x1, 0xd, 0x21,0x4, 0xf8,0x7, 0x0, 0xec,0x20,0x60,0x3e,0xc0,0xe0,0x10,0x1, 0xec,
+0xe7,0x0, 0xf2,0xe4,0x0, 0x0, 0x19,0xc0,0xe0,0x10,0x1, 0xec,0xe7,0x0, 0xf6,0x84,
+0xe8,0xd, 0x21,0x6, 0x9c,0x28,0x85,0x29,0xc0,0xe0,0x10,0x1, 0xf8,0x7, 0x0, 0xec,
+0xc0,0xe0,0x10,0x1, 0xf8,0x7, 0x0, 0xed,0xc0,0xe0,0x10,0x1, 0xf8,0x7, 0x0, 0xe4,
+0xc0,0xe0,0x10,0x1, 0xf8,0x7, 0x0, 0xe5,0x85,0x29,0xc0,0xe0,0x10,0x1, 0xf0,0xa7,
+0x0, 0xf9,0xc0,0xe0,0x10,0x1, 0xef,0x87,0x1, 0x2, 0xc0,0xe0,0x10,0x1, 0xef,0x67,
+0x1, 0x6, 0xc0,0xe0,0x10,0x1, 0xfc,0x21,0xfd,0x78,0xee,0xe7,0x1, 0xa, 0xed,0x41,
+0x2, 0x80,0xed,0x21,0x2, 0x84,0xed,0x61,0x2, 0x7c,0xed,0x81,0x2, 0x78,0xed,0xa1,
+0x2, 0x74,0xed,0xc1,0x2, 0x70,0xed,0xe1,0x2, 0x6c,0xee,0x1, 0x2, 0x68,0xee,0x21,
+0x2, 0x64,0xee,0x41,0x2, 0x60,0x89,0x43,0x4f,0x45,0x8, 0x98,0xe0,0x8b,0x17,0x98,
+0xc0,0xe4,0x0, 0x0, 0x7d,0xb, 0x38,0x1, 0x21,0x40,0x6e,0x43,0xbc,0x34,0xfd,0x1, 
+0x2, 0x60,0x13,0xbd,0x0, 0x4f,0xbd,0x10,0x8f,0xa7,0x4f,0xbd,0x8, 0x8f,0xa8,0xe4,
+0x0, 0x0, 0x31,0x43,0xbb,0x34,0xfd,0x61,0x2, 0x60,0x13,0xbd,0x0, 0x4f,0xbd,0x10,
+0x8f,0xa7,0x4f,0xbd,0x8, 0x8f,0xab,0xef,0x3d,0xfd,0xa1,0x9c,0xc1,0x9f,0x2, 0x5f,
+0x26,0x0, 0xd4,0xb9,0xfe,0x1d,0x9c,0xe1,0x8e,0xfa,0xd0,0xe4,0xfd,0x9e,0xc0,0xe0,
+0x10,0x1, 0xf0,0xe7,0x0, 0xe4,0xd0,0xe0,0x20,0x62,0x24,0xec,0x8b,0xc0,0xe0,0x10,
+0x1, 0x4f,0x45,0x8, 0xec,0xa7,0x1, 0xe, 0xc0,0xe0,0x10,0x1, 0xc3,0xa0,0x10,0x1, 
+0xec,0x87,0x1, 0x12,0x8b,0x81,0x98,0xe0,0xe4,0x0, 0x0, 0xbb,0xc0,0xe0,0x10,0x1, 
+0xf0,0xe7,0x0, 0xed,0xd0,0xe4,0xfe,0xcd,0xe4,0x0, 0x1, 0x61,0x21,0x40,0x92,0x20,
+0xe0,0x26,0x43,0x65,0x34,0xc, 0x1b,0x1, 0xb, 0xd9,0x1, 0xb, 0x78,0x1, 0x8f,0x7e,
+0x5f,0x7b,0x6, 0xf, 0x78,0x1, 0x43,0xc4,0x34,0xf, 0x7e,0x1, 0xe4,0x0, 0x0, 0x31,
+0x20,0xe0,0x26,0x43,0x64,0x34,0xc, 0x1b,0x1, 0xb, 0xd9,0x1, 0xb, 0x77,0x1, 0x8f,
+0x7e,0xf, 0x77,0x1, 0x9f,0x2, 0x9c,0xc2,0x9f,0x28,0x9e,0xe2,0xd4,0xda,0xfe,0x6, 
+0x9c,0xe1,0x5c,0xe7,0x0, 0xf0,0xdd,0x0, 0xe4,0xd4,0xc7,0x0, 0x95,0x88,0xe4,0x88,
+0xc4,0x9a,0xe0,0xc0,0x80,0x10,0x1, 0xe4,0x0, 0x0, 0x93,0x4f,0x27,0x8, 0x8b,0x5, 
+0x8f,0x3c,0x8a,0xe4,0x98,0xc0,0xe7,0xff,0xff,0xad,0x21,0x40,0x86,0xb, 0x25,0x0, 
+0xf3,0x4, 0x0, 0xe4,0x43,0x19,0xc0,0xf, 0x5, 0x1, 0xb, 0x26,0x0, 0xf3,0x4, 0x0, 
+0xe4,0x43,0x19,0xc0,0xf, 0x6, 0x1, 0xe4,0x0, 0x0, 0x23,0xb, 0x27,0x0, 0xf3,0x4, 
+0x0, 0xe4,0x43,0x19,0xc0,0xf, 0x7, 0x1, 0x9c,0xa2,0x9e,0xe2,0x9c,0xc2,0x9c,0xe2,
+0xd6,0xfa,0xfe,0x56,0xe4,0x0, 0x6, 0x5d,0x20,0x80,0x36,0xe7,0xff,0xfc,0x9a,0x98,
+0x60,0xe4,0x0, 0x0, 0x1b,0x20,0x84,0x36,0xe7,0xff,0xfc,0x80,0x98,0x61,0xe7,0xff,
+0xfc,0x1a,0xfe,0xe1,0x1, 0xe0,0xc0,0xe0,0x10,0x1, 0x98,0xc0,0xf3,0xa7,0x0, 0xfa,
+0x88,0x97,0x4d,0x9d,0x10,0x8d,0x97,0x88,0xac,0xe4,0x0, 0x0, 0x73,0xc, 0x7, 0x0, 
+0x9c,0xe4,0xd4,0xe5,0xff,0xde,0x9c,0xc1,0x1c,0xa7,0x10,0xd0,0xc6,0x1, 0x3e,0xc0,
+0xe0,0x10,0x1, 0x8b,0x21,0xf0,0xc7,0x0, 0xf9,0x98,0xa0,0xc0,0xe0,0x10,0x1, 0x4f,
+0x86,0x18,0xef,0x7, 0x0, 0xfe,0x8f,0x81,0xfc,0x61,0x2, 0x40,0x8b,0xc1,0xe4,0x0, 
+0x1, 0xf, 0x4c,0xe6,0x20,0x8c,0xe4,0xe7,0xff,0xff,0x97,0x11,0x7b,0x0, 0x1d,0x4, 
+0x1, 0x9f,0x61,0xd5,0x67,0x0, 0xee,0x4c,0x84,0x10,0xfd,0xa1,0x2, 0x60,0x8c,0x85,
+0x4c,0x84,0x8, 0x8c,0x8d,0xe8,0x84,0xfd,0xa1,0xc, 0x9a,0x1, 0xe4,0x0, 0x0, 0x17,
+0x5c,0x88,0x0, 0xd4,0xc4,0xfe,0xc5,0x9c,0xe1,0x9f,0x42,0x5c,0xe7,0x0, 0xd7,0xa7,
+0x0, 0xa5,0x4c,0x85,0x8, 0x8b,0x78,0x8c,0x9e,0x88,0xf8,0x4f,0x45,0x10,0xe4,0x0, 
+0x0, 0x55,0x8b,0x78,0x98,0x80,0xe7,0xff,0xff,0xbb,0xfd,0x61,0x2, 0x60,0x11,0x7, 
+0x0, 0x9c,0xe1,0x8d,0x1a,0x4d,0x8, 0x8, 0x8d,0xb, 0x9, 0x64,0x1, 0x9, 0x8, 0xe1,
+0x41,0xb, 0x45,0xd, 0x4, 0x1, 0x9c,0x88,0xd4,0x9c,0xff,0x16,0x9c,0xa1,0x1f,0x84,
+0x2, 0xd0,0xa4,0x0, 0x7a,0x4f,0x45,0x18,0x98,0xe0,0x8f,0x43,0xe7,0xff,0xff,0x65,
+0xff,0xc1,0x1, 0x80,0x4d,0xc6,0x8, 0x9b,0x80,0x8d,0xde,0x98,0xe0,0x9b,0x40,0x89,
+0xa1,0x1c,0x67,0x1, 0x4e,0x1c,0x8, 0x5c,0x63,0x0, 0x8e,0xd, 0x88,0xe3,0xe4,0x0, 
+0x0, 0xaf,0xa, 0x28,0x1, 0x9, 0xeb,0x1, 0x9d,0x8, 0x41,0xf1,0x7d,0x9d,0x68,0xd, 
+0xe5,0x1, 0x9c,0xa2,0xd4,0xae,0xff,0x76,0x88,0xb8,0x4e,0x3a,0x10,0xe4,0x0, 0x0, 
+0x55,0xfd,0x61,0x2, 0x60,0x11,0x5, 0x0, 0x9, 0xe4,0x0, 0x8d,0x11,0x9c,0xa1,0x4d,
+0x8, 0x10,0x9c,0x82,0x8d,0xb, 0x4d,0x6f,0xfa,0xe, 0x48,0x82,0x45,0xeb,0x7e,0x41,
+0x6f,0x5d,0x8d,0x72,0xd, 0x68,0x80,0xd4,0x8e,0xfe,0xd6,0x9f,0x41,0x9c,0xe1,0x5f,
+0x5a,0x0, 0x5c,0xe7,0x0, 0x24,0xec,0x4b,0x4d,0x67,0x8, 0x89,0x10,0x8d,0x6d,0x88,
+0x9e,0x88,0xbe,0xe7,0xff,0xff,0x63,0x9f,0x81,0x88,0xe3,0xd0,0x64,0xfc,0x36,0xfc,
+0xe1,0x1, 0xe0,0x98,0x80,0xe4,0x0, 0x0, 0x17,0xc, 0xa7,0x2, 0x9c,0xe4,0x8c,0x85,
+0xd4,0xec,0xff,0xce,0x9f,0xa4,0x9b,0x80,0x4f,0xbd,0x10,0x98,0xa0,0x8f,0xb7,0x98,
+0xe1,0xff,0xc1,0x1, 0xe0,0xe4,0x0, 0x0, 0x47,0xc, 0x77,0x2, 0x9e,0xe4,0x8f,0x43,
+0xd6,0xfd,0xff,0xce,0xd4,0x9a,0x0, 0x41,0x88,0x9a,0x88,0xa7,0x9c,0xe1,0x1f,0xbd,
+0x10,0x5c,0xe7,0x0, 0xd0,0xe6,0x0, 0x8a,0x9f,0x81,0x9b,0x40,0x4e,0xfc,0x20,0x8e,
+0xfe,0xe7,0xff,0xff,0xbf,0x9a,0xe0,0x98,0xe0,0xd0,0xa5,0x0, 0xf5,0xc0,0xe0,0x10,
+0x1, 0xc0,0x80,0x10,0x1, 0xfc,0xe7,0x5, 0xd6,0xfc,0x84,0x5, 0xdc,0x8c,0xe5,0x8c,
+0xa4,0x10,0xe7,0x0, 0x12,0xe5,0x0, 0xc0,0x80,0x10,0x1, 0x4f,0x57,0x8, 0xf3,0xa4,
+0x0, 0xf8,0x8f,0x6, 0x4c,0x87,0x8, 0x8f,0x41,0x8c,0x81,0x4d,0x7, 0x10,0x88,0xa4,
+0x4c,0x77,0x10,0x9b,0xc2,0xe4,0x0, 0x0, 0x8f,0x13,0x9b,0x0, 0x9, 0x65,0x1, 0x41,
+0x88,0xe4,0xfd,0xa1,0x2, 0x60,0x4d,0x8c,0x8, 0x8f,0x83,0x8d,0x8d,0x4f,0x9c,0x8, 
+0x9, 0x8c,0xe1,0x8f,0x8d,0x8d,0x6c,0xd, 0x65,0x1, 0x9, 0x7c,0xe1,0xb, 0x9a,0x1, 
+0x8f,0x8b,0x5f,0x9c,0x6, 0xf, 0x9a,0x1, 0x23,0xa0,0x3a,0x9, 0x65,0x0, 0x8f,0x8b,
+0x43,0x9c,0xf0,0xf, 0x85,0x1, 0x9c,0xa8,0x9f,0x61,0x9f,0x48,0xd7,0x78,0xfd,0xee,
+0xc0,0xa0,0x10,0x1, 0x21,0x40,0x54,0x4c,0xc6,0x10,0xec,0xa5,0x1, 0x12,0x8c,0xe6,
+0x4c,0xe7,0x8, 0x8f,0x27,0xe4,0x0, 0x1, 0x4b,0xef,0x85,0x1, 0x12,0xc0,0xa0,0x10,
+0x1, 0xef,0x65,0x1, 0xe, 0x4c,0xa6,0x10,0x8c,0xa7,0x4c,0xa5,0x8, 0x8f,0x25,0x98,
+0xa0,0xe4,0x0, 0x0, 0xef,0x8b,0x5b,0x8b,0x4, 0x23,0xa1,0x90,0x4f,0x45,0x8, 0x4f,
+0x5, 0x10,0xd6,0xe7,0x1, 0x39,0x43,0xdb,0xd4,0x40,0x78,0x3c,0xfd,0x1, 0x2, 0x60,
+0x4c,0x63,0x8, 0x8f,0x17,0x8c,0x68,0x4f,0x18,0x8, 0xe8,0x63,0xfd,0xa1,0x8f,0x5c,
+0xc, 0x7e,0x1, 0x8f,0x8, 0xe4,0x0, 0x0, 0x47,0x43,0xdb,0xd4,0x40,0x78,0xbc,0xfd,
+0x61,0x2, 0x60,0x4c,0x63,0x8, 0x8f,0x7, 0x8c,0x6b,0x4f,0x18,0x8, 0xe8,0x63,0xfd,
+0xa1,0x8f,0x5c,0xc, 0x7e,0x1, 0x8f,0xb, 0xeb,0x18,0xfd,0xa1,0xf, 0x1a,0x1, 0xe4,
+0x0, 0x0, 0x29,0x8, 0xb8,0x1, 0x9f,0x8, 0xc, 0xba,0x1, 0x9f,0x42,0xd7,0x19,0xff,
+0xb6,0x88,0xa6,0x9c,0xa1,0x5c,0xa5,0x0, 0xd4,0xc5,0xfc,0x6d,0xe4,0x0, 0x0, 0x39,
+0x8, 0xe4,0x1, 0x9c,0x88,0xc, 0xe5,0x1, 0x9c,0xa2,0xd4,0x99,0xff,0xb6,0xe4,0x0, 
+0x0, 0x15,0x98,0x60,0xe4,0x0, 0x0, 0xd, 0x98,0x61,0xee,0x41,0x2, 0x62,0xee,0x21,
+0x2, 0x66,0xee,0x1, 0x2, 0x6a,0xed,0xe1,0x2, 0x6e,0xed,0xc1,0x2, 0x72,0xed,0xa1,
+0x2, 0x76,0xed,0x81,0x2, 0x7a,0xed,0x61,0x2, 0x7e,0xed,0x41,0x2, 0x82,0xed,0x21,
+0x2, 0x86,0xfc,0x21,0x2, 0x88,0x85,0x29,0xc0,0xe0,0x10,0x1, 0x98,0x61,0xf0,0xe7,
+0x0, 0xed,0x5c,0xe4,0xf3,0x20,0x0, 0x47,0xc0,0xe0,0x10,0x1, 0xf0,0xe7,0x0, 0xe4,
+0x5c,0xe0,0x73,0x48,0x60,0xa, 0x85,0x29,0xc0,0xe0,0x10,0x1, 0xf0,0xe7,0x0, 0xe4,
+0x5c,0xe0,0x1, 0x48,0x60,0xa, 0x85,0x29,0xc0,0xe0,0x10,0x1, 0x98,0x60,0xf0,0xe7,
+0x0, 0xe4,0xd0,0xe4,0x0, 0x96,0xc0,0xe0,0x10,0x1, 0xf0,0xe7,0x0, 0xed,0x5c,0xe0,
+0x89,0x48,0x60,0xa, 0x85,0x29,0xc0,0xe0,0x10,0x1, 0xf0,0xe7,0x0, 0xec,0x5c,0xe0,
+0x73,0x48,0x60,0xa, 0x85,0x29,0x9c,0x38,0xd, 0x21,0x4, 0xc0,0xe0,0x10,0x1, 0xf0,
+0xe7,0x0, 0xe4,0x20,0xe9,0x5c,0x24,0xe8,0x2f,0xd0,0xe1,0x4, 0x9e,0xe4,0x0, 0x0, 
+0xdd,0x20,0xec,0xa0,0xd0,0xe4,0x4, 0x46,0xc0,0xe0,0x10,0x1, 0xf0,0xc7,0x0, 0xe5,
+0x54,0xa6,0x8, 0x20,0xa0,0x5a,0x50,0xc6,0x8, 0x98,0x63,0xf8,0xc7,0x0, 0xe5,0xc0,
+0xe0,0x10,0x1, 0xec,0xe7,0x0, 0xea,0x84,0xe8,0xc0,0xe0,0x10,0x1, 0xf0,0xc7,0x0, 
+0xe5,0x54,0xa6,0x4, 0x20,0xa0,0x5a,0x50,0xc6,0x4, 0x98,0x62,0xf8,0xc7,0x0, 0xe5,
+0xc0,0xe0,0x10,0x1, 0xec,0xe7,0x0, 0xea,0x84,0xe8,0xc0,0xe0,0x10,0x1, 0xf0,0xc7,
+0x0, 0xe5,0x54,0xa6,0x2, 0x20,0xa0,0x5a,0x50,0xc6,0x2, 0x98,0x61,0xf8,0xc7,0x0, 
+0xe5,0xc0,0xe0,0x10,0x1, 0xec,0xe7,0x0, 0xea,0x84,0xe8,0xc0,0xe0,0x10,0x1, 0xf0,
+0xc7,0x0, 0xe5,0x54,0xa6,0x1, 0x20,0xa0,0x5a,0x50,0xc6,0x1, 0x98,0x60,0xf8,0xc7,
+0x0, 0xe5,0xc0,0xe0,0x10,0x1, 0xec,0xe7,0x0, 0xea,0x84,0xe8,0xd, 0x21,0x6, 0x9c,
+0x28,0x85,0x29,0xfc,0x21,0xff,0x58,0xc0,0xd4,0x0, 0x1, 0xed,0x81,0x0, 0x98,0xe, 
+0xc1,0x70,0xed,0x21,0x0, 0xa4,0xed,0x41,0x0, 0xa0,0xed,0x61,0x0, 0x9c,0xed,0xa1,
+0x0, 0x94,0xed,0xc1,0x0, 0x90,0xed,0xe1,0x0, 0x8c,0xee,0x1, 0x0, 0x88,0xee,0x21,
+0x0, 0x84,0xee,0x41,0x0, 0x80,0xe, 0x61,0x7c,0xe, 0x81,0x78,0xe, 0xa1,0x74,0xc8,
+0xe6,0x24,0x34,0xc8,0xc6,0x7a,0x10,0x8, 0xa6,0x1, 0xc4,0xa5,0xfe,0xff,0xc, 0xa6,
+0x1, 0xc0,0xc0,0x10,0x1, 0xf0,0xc6,0xa, 0x70,0x9c,0xce,0xc4,0xc6,0x1, 0xf8,0xfe,
+0xc1,0x0, 0xa8,0xc, 0x36,0x84,0x1d,0x96,0xbc,0x40,0x21,0x35,0x88,0xcc,0x8b,0x81,
+0x8, 0xa7,0x1, 0xc, 0xa6,0x1, 0xc0,0x94,0x0, 0x1, 0x9c,0xe4,0x9c,0xc2,0xc8,0x84,
+0x24,0x44,0xd4,0xe4,0xff,0x76,0xc0,0xf4,0x0, 0x1, 0x50,0xc0,0x31,0xc8,0xa7,0x26,
+0x28,0xc8,0x87,0x26,0x24,0xcb,0x27,0x24,0x34,0xb, 0x4, 0x1, 0xa, 0xe5,0x1, 0xc, 
+0xd9,0x1, 0xcb,0x27,0x24,0x38,0xc, 0xd9,0x1, 0xcb,0x27,0x24,0x3c,0xc, 0xd9,0x1, 
+0xcb,0x27,0x24,0x40,0xc, 0xd9,0x1, 0xfc,0xc0,0x3, 0x3, 0xc, 0xc4,0x1, 0xc, 0xc5,
+0x1, 0x5f,0x18,0x4, 0x5e,0xf7,0x4, 0xf, 0x16,0x80,0xee,0xf6,0xff,0x7c,0xc8,0xe7,
+0x24,0x14,0x1c,0xb6,0xc4,0x98,0xc0,0x99,0xa0,0x8, 0x87,0x1, 0x4c,0x84,0x36,0x54,
+0x84,0xf, 0x18,0x85,0x0, 0x8d,0xa4,0x9c,0xc4,0x5d,0xad,0x0, 0x9c,0xa1,0x5c,0xc2,
+0x9, 0x23,0xff,0xa1,0x10,0xf6,0xc5,0x11,0x76,0xc4,0x10,0xb6,0xc6,0x42,0x27,0x5c,
+0x9b,0xc, 0x42,0x11,0x2c,0x43,0x18,0x5d,0x13,0x76,0xc7,0x52,0xe0,0x18,0x41,0xe0,
+0x5d,0x42,0xf7,0x3d,0x41,0xef,0x3d,0x42,0xf7,0x5d,0x5d,0xef,0x0, 0x5f,0x18,0x0, 
+0x1c,0x8f,0x24,0x8f,0x70,0x40,0x84,0x2d,0x5e,0xf7,0x0, 0x88,0xdc,0x5c,0x84,0x0, 
+0x98,0xe0,0x9b,0x5f,0xe4,0x0, 0x0, 0x75,0xd5,0x79,0x1, 0x5, 0xd6,0x27,0x0, 0x58,
+0x1b,0x6, 0x0, 0xe4,0x0, 0x0, 0x31,0xd6,0x7, 0x0, 0x58,0x1a,0xe6,0x0, 0xe4,0x0, 
+0x0, 0x1b,0x5f,0x67,0x15,0x4b,0x3a,0x20,0x1b,0x26,0x0, 0x9f,0x1, 0x9e,0xe1,0x9c,
+0x81,0x9c,0xe1,0x9c,0xc1,0x5f,0x18,0x0, 0x5e,0xf7,0x0, 0x5c,0x84,0x0, 0x5f,0x27,
+0x0, 0xd5,0xb9,0xfe,0x3d,0xc2,0x54,0x0, 0x1, 0x40,0xaf,0x2d,0xca,0xb2,0x24,0x10,
+0xc0,0xc0,0x10,0x1, 0x1f,0x16,0xbc,0x5c,0xa5,0x0, 0xfc,0xc6,0x8, 0x70,0x99,0x40,
+0x1c,0xf6,0x8c,0xef,0x16,0xff,0x64,0x1e,0x96,0x8d,0x1e,0x76,0xbd,0xca,0x52,0x22,
+0x0, 0xe4,0x0, 0x3, 0x3b,0x1a,0xe4,0x0, 0xef,0xb6,0xff,0x66,0x9c,0x81,0xd4,0x9d,
+0xff,0xbe,0x50,0x80,0x5a,0x5d,0x40,0x1, 0x52,0xe0,0x42,0x4a,0xf7,0x20,0x88,0x94,
+0x13,0x4, 0xff,0x13,0x24,0x0, 0x4f,0x39,0x40,0x47,0x39,0xc5,0x4f,0x17,0x10,0x8f,
+0x12,0xf, 0x38,0x1, 0x9e,0xe1,0x9c,0x82,0x5e,0xf7,0x4, 0xd4,0x93,0xff,0x2e,0x98,
+0x8c,0x21,0x40,0x14,0x98,0x8e,0xc, 0x95,0x1, 0x99,0xc0,0x53,0x0, 0x42,0x52,0xe0,
+0x5a,0x8b,0xbc,0x98,0x60,0x98,0x80,0xec,0xb6,0xff,0x5c,0xec,0xd6,0xff,0x6c,0xec,
+0xf6,0xff,0x70,0xee,0xf6,0xff,0x74,0xef,0x16,0xff,0x78,0xef,0xb6,0xff,0x68,0xe4,
+0x0, 0x3b,0x82,0xc0,0x80,0x10,0x1, 0xf0,0x64,0x5, 0x68,0xc0,0x80,0x10,0x1, 0xec,
+0xd6,0xff,0x6e,0xef,0xc4,0x5, 0x42,0xec,0xb6,0xff,0x5e,0xef,0xb6,0xff,0x6a,0x8b,
+0x46,0x8b,0x85,0x8b,0x6f,0x9b,0x20,0x98,0x81,0xef,0xb6,0xff,0x60,0xec,0xf6,0xff,
+0x72,0xee,0xf6,0xff,0x76,0xef,0x16,0xff,0x7a,0xe4,0x0, 0x1, 0x5b,0x20,0x60,0xc4,
+0x89,0x1d,0xd5,0x7d,0x0, 0xa5,0x43,0xbd,0x5d,0x5d,0x1d,0x0, 0xd6,0x39,0x0, 0x54,
+0x5e,0x19,0x15,0x49,0x1c,0xd8,0x23,0xc0,0x60,0x8d,0x1e,0x13,0xa8,0x0, 0x23,0xa0,
+0x40,0x9, 0x1a,0x0, 0xcd,0x8, 0x0, 0xff,0x43,0xa8,0xe8,0xf, 0xba,0x1, 0xb, 0xba,
+0x0, 0x4d,0x1d,0xfa,0x45,0x28,0xee,0x41,0x9, 0x45,0xc1,0x0, 0x32,0x8, 0x20,0x1, 
+0x69,0x50,0x80,0xcd,0x43,0xbd,0x20,0xec,0x96,0xff,0x62,0x8c,0x99,0x11,0x4, 0x0, 
+0x1c,0x96,0xc8,0x8c,0x88,0x11,0x24,0xc4,0x8f,0xa9,0x55,0x29,0x20,0x5f,0xbd,0x4, 
+0x5c,0x9d,0x6, 0x5c,0x83,0xf1,0x20,0x0, 0x35,0x21,0x20,0x72,0x1c,0x9d,0xc, 0xe4,
+0x0, 0x0, 0x15,0x21,0x20,0x24,0x1c,0x9d,0xf4,0x5c,0x84,0x6, 0x24,0x9c,0x26,0x98,
+0x80,0xe4,0x0, 0x0, 0x1b,0x5c,0x87,0xf1,0x53,0xa0,0x3f,0x48,0x84,0xe8,0x1f,0xb6,
+0xc8,0x8d,0x1d,0x18,0x88,0xc4,0x98,0x80,0x9f,0x61,0x9f,0x81,0x9f,0x21,0x9f,0x42,
+0x5f,0x7b,0x0, 0x5f,0x9c,0x0, 0x5f,0xb9,0x0, 0xd5,0xbd,0xfa,0xa5,0x5d,0x40,0x1, 
+0xef,0xb6,0xff,0x62,0x4b,0x58,0xb8,0x8b,0x34,0x13,0x79,0xff,0x13,0x99,0x0, 0x4f,
+0x9c,0x40,0x47,0x9c,0xdd,0x4f,0x7a,0x10,0x8f,0x72,0xf, 0x9b,0x1, 0x9f,0x41,0x9f,
+0x22,0x5f,0x5a,0x4, 0xd7,0x33,0xff,0x2e,0x20,0x84,0x30,0x9d,0xc1,0x5d,0xce,0x0, 
+0xd1,0xc3,0xf6,0x1e,0x9d,0x41,0x8b,0x9d,0x5d,0x4a,0x0, 0x21,0x48,0x30,0x88,0x87,
+0x52,0xe0,0x10,0xe7,0xff,0xfc,0xc5,0xc0,0xd4,0x0, 0x1, 0xc8,0xe6,0x24,0x34,0xc8,
+0xc6,0x24,0x10,0xd, 0x46,0x1, 0x8, 0xcc,0x1, 0xc, 0xc7,0x1, 0xc0,0x94,0x0, 0x1, 
+0x9d,0x82,0x9c,0xe4,0xc8,0x84,0x24,0x44,0xd4,0xe4,0xff,0x76,0xc0,0xf4,0x0, 0x1, 
+0xc8,0xc7,0x26,0x24,0xc, 0xb6,0x82,0xc8,0xe7,0x26,0x28,0xc, 0xa6,0x1, 0xec,0xd6,
+0xff,0x7e,0x98,0x61,0xc, 0xc7,0x1, 0x98,0x80,0xe4,0x0, 0x38,0x8e,0x98,0x61,0xe4,
+0x0, 0x60,0x74,0xc, 0x36,0x86,0xe, 0xc1,0x72,0xe, 0xa1,0x76,0xe, 0x81,0x7a,0xe, 
+0x61,0x7e,0xee,0x41,0x0, 0x82,0xee,0x21,0x0, 0x86,0xee,0x1, 0x0, 0x8a,0xed,0xe1,
+0x0, 0x8e,0xed,0xc1,0x0, 0x92,0xed,0xa1,0x0, 0x96,0xed,0x81,0x0, 0x9a,0xed,0x61,
+0x0, 0x9e,0xed,0x41,0x0, 0xa2,0xed,0x21,0x0, 0xa6,0xfc,0x21,0x0, 0xa8,0x85,0x29,
+0x1c,0x21,0xb8,0xc0,0xe0,0x10,0x1, 0xd, 0x61,0x3c,0xd, 0xe1,0x2c,0xe, 0x1, 0x28,
+0xe, 0xa1,0x14,0xe, 0xc1,0x10,0xd, 0x21,0x44,0xd, 0x41,0x40,0xd, 0x81,0x38,0xd, 
+0xa1,0x34,0xd, 0xc1,0x30,0xe, 0x21,0x24,0xe, 0x41,0x20,0xe, 0x61,0x1c,0xe, 0x81,
+0x18,0x1e,0xc1,0x48,0x8a,0xa4,0xc, 0xd6,0xc0,0xf0,0xc7,0xa, 0x74,0xc0,0xe0,0x10,
+0x1, 0x4c,0xc6,0x10,0xfc,0xe7,0x8, 0x28,0x40,0x86,0x3c,0x9c,0xce,0xc4,0xc6,0x7, 
+0xf8,0xc, 0x36,0xc4,0x89,0xe3,0x40,0x21,0x35,0xc, 0xb6,0xbc,0xa, 0x23,0x22,0x89,
+0x61,0xca,0x0, 0x20,0x0, 0x88,0xc1,0xe4,0x0, 0x0, 0x2f,0xc, 0xa7,0x2, 0x9c,0xe4,
+0x5e,0x5, 0x15,0xc, 0xa6,0x0, 0x4a,0x10,0x28,0x9c,0xc4,0x5e,0x10,0x6, 0xd4,0xe4,
+0xff,0x6e,0x5e,0x1f,0xf9,0xc2,0x60,0x10,0x1, 0xc1,0xc0,0x10,0x1, 0x4a,0x10,0x0, 
+0xfe,0x73,0xa, 0x70,0x99,0x40,0x9a,0x40,0x99,0x80,0xfd,0xae,0x7, 0xec,0x9a,0x82,
+0xe4,0x0, 0x5, 0x19,0x21,0x41,0x66,0xc, 0xeb,0x2, 0x8, 0xcf,0x22,0xd4,0xc7,0x11,
+0x84,0xc, 0xcb,0x6, 0xd4,0xe6,0x0, 0x7c,0xd4,0xe6,0x11,0x2e,0xc, 0xcb,0xa, 0xd4,
+0xe6,0x10,0xf0,0x98,0x60,0x88,0x8b,0x88,0xb0,0x88,0xd1,0x8, 0xef,0x26,0x9, 0xf, 
+0x28,0xe7,0xff,0xce,0xfc,0xd0,0x60,0x10,0x42,0xf0,0xee,0x7, 0xec,0x8c,0xec,0xcc,
+0xe7,0x0, 0x1c,0x8c,0xed,0x99,0x41,0x18,0x7, 0x4, 0xf0,0xee,0x7, 0xec,0x8c,0xec,
+0xcc,0xe7,0x0, 0x1c,0x8c,0xed,0x18,0x7, 0x6, 0xe4,0x0, 0x0, 0xc5,0x21,0x45,0xc6,
+0xc, 0xeb,0x6, 0x8, 0xcf,0x22,0xd4,0xc7,0xe, 0xbc,0xc, 0xcb,0x2, 0xd4,0xc7,0xe, 
+0x84,0xc, 0xcb,0xa, 0xd4,0xe6,0x0, 0x7c,0xd4,0xe6,0xe, 0x2e,0xc, 0xcb,0xe, 0xd4,
+0xe6,0xd, 0xf0,0x98,0x61,0x88,0x8b,0x88,0xb0,0x88,0xd1,0x8, 0xef,0x26,0x9, 0xf, 
+0x28,0xe7,0xff,0xce,0x3c,0xd0,0x60,0xd, 0x42,0xf0,0xee,0x7, 0xec,0x8c,0xec,0xcc,
+0xe7,0x0, 0x1c,0x8c,0xed,0x98,0xc1,0x18,0x7, 0x4, 0x99,0x42,0xf0,0xee,0x7, 0xec,
+0x8c,0xec,0xcc,0xe7,0x0, 0x1c,0x8c,0xed,0x18,0xc7,0x6, 0xf0,0xee,0x7, 0xec,0x8c,
+0xec,0xcc,0xe7,0x0, 0x1c,0x8c,0xed,0x1a,0x87,0x5, 0xe4,0x0, 0x2, 0xff,0x25,0x45,
+0xd1,0x1c,0xc7,0xfe,0xd4,0xca,0x3, 0x70,0x4c,0xea,0x10,0x8, 0xcf,0x22,0x8c,0xeb,
+0xc, 0xe7,0x2, 0xd4,0xc7,0xa, 0xd4,0x1c,0xca,0xff,0x4c,0xc6,0x10,0x8c,0xcb,0xc, 
+0xc6,0x2, 0xd4,0xe6,0x1, 0x34,0xd4,0xe6,0xa, 0x3e,0x1c,0xaa,0xfe,0x4c,0xa5,0x10,
+0x8c,0xab,0xc, 0xa5,0x2, 0xd4,0xe5,0x9, 0xc0,0x1c,0x8a,0x1, 0x4c,0x84,0x10,0x8c,
+0x8b,0xc, 0x84,0x2, 0xd4,0x85,0x9, 0x48,0x1c,0xaa,0x1, 0x4c,0xa5,0x10,0x8c,0xab,
+0xc, 0xa5,0x2, 0xd4,0xe5,0x3, 0x2c,0xd4,0xe5,0x8, 0xb6,0x1c,0xaa,0x2, 0x4c,0xa5,
+0x10,0x8c,0xab,0xc, 0xa5,0x2, 0xd4,0xe5,0x8, 0x38,0xd4,0xc5,0x8, 0x18,0xe4,0x0, 
+0x0, 0x95,0x1c,0x87,0xfe,0x8, 0xaf,0x22,0x4c,0xca,0x10,0xd5,0x44,0x3, 0xf6,0x8c,
+0xcb,0xc, 0xc6,0x2, 0xd4,0xa6,0x7, 0x4c,0x1c,0xa7,0xff,0x4c,0xa5,0x10,0x8c,0xab,
+0xc, 0xa5,0x2, 0xd4,0xa6,0x6, 0xd4,0x1c,0xa7,0xfd,0x4c,0xa5,0x10,0x8c,0xab,0xc, 
+0xa5,0x2, 0xd4,0xc5,0x0, 0xb4,0xd4,0xc5,0x6, 0x3e,0x9c,0xfc,0x4c,0xe7,0x10,0x8c,
+0xeb,0xc, 0xe7,0x2, 0xd4,0xc7,0x5, 0xc8,0x88,0x6a,0x88,0x8b,0x88,0xb0,0x88,0xd1,
+0x8, 0xef,0x26,0x9, 0xf, 0x28,0xe7,0xff,0xcc,0x32,0xd0,0x60,0x5, 0x1a,0xf0,0xce,
+0x7, 0xec,0x8c,0xcc,0xcc,0xc6,0x0, 0x1c,0x8c,0xcd,0x1c,0xaa,0xff,0x1c,0xea,0x1, 
+0x18,0xa6,0x4, 0xf0,0xce,0x7, 0xec,0x8c,0xcc,0xcc,0xc6,0x0, 0x1c,0x8c,0xcd,0x19,
+0x46,0x6, 0x5d,0x47,0x0, 0xe4,0x0, 0x0, 0xcb,0x8c,0xcb,0xc, 0xe6,0x2, 0xd4,0xa7,
+0x3, 0x7c,0x1c,0xca,0xff,0x4c,0xc6,0x10,0x8c,0xcb,0xc, 0xc6,0x2, 0xd4,0xe6,0x0, 
+0xbc,0xd4,0xe6,0x2, 0xe6,0x1c,0xca,0xfe,0x4c,0xc6,0x10,0x8c,0xcb,0xc, 0xc6,0x2, 
+0xd4,0xe6,0x2, 0x68,0x88,0x6a,0x88,0x8b,0x88,0xb0,0x88,0xd1,0x8, 0xef,0x26,0x9, 
+0xf, 0x28,0xe7,0xff,0xcb,0x5a,0x20,0x60,0xdc,0xf0,0xee,0x7, 0xec,0x8c,0xec,0xcc,
+0xe7,0x0, 0x1c,0x8c,0xed,0x1c,0xca,0xfe,0x18,0xc7,0x4, 0xf0,0xee,0x7, 0xec,0x8c,
+0xec,0xcc,0xe7,0x0, 0x1c,0x8c,0xed,0x19,0x47,0x6, 0xf0,0xee,0x7, 0xec,0x8c,0xec,
+0xcc,0xe7,0x0, 0x1c,0x8c,0xed,0x19,0x47,0x5, 0xe4,0x0, 0x0, 0x21,0x9d,0x41,0x5d,
+0x4a,0x0, 0x10,0xf3,0x4, 0xd4,0xea,0xed,0xfd,0x10,0xf3,0x4, 0xd4,0xea,0x2, 0x1, 
+0xf0,0xee,0x7, 0xec,0x8c,0xec,0xcc,0xc7,0x0, 0x1c,0x8c,0xcd,0x10,0xc6,0x5, 0xd5,
+0x46,0x0, 0x55,0x1d,0x46,0x1, 0x5d,0x4a,0x0, 0x1c,0xcc,0x1, 0xcc,0xe7,0x0, 0x1c,
+0x8c,0xed,0x1a,0xa7,0x7, 0xf0,0xee,0x7, 0xec,0x8c,0xec,0x5d,0x86,0x0, 0xcc,0xe7,
+0x0, 0x1c,0xc, 0xd6,0xbe,0x8c,0xed,0x8a,0x4c,0xc, 0xc7,0x8, 0x10,0xf3,0x4, 0xd4,
+0xea,0x0, 0x69,0xc, 0xd6,0xc2,0x40,0xf2,0x34,0x24,0xe6,0xa4,0xc0,0xe0,0x10,0x1, 
+0xf0,0xc7,0x7, 0xec,0x8d,0x86,0x88,0x72,0xf9,0x87,0x7, 0xec,0xc, 0x36,0xc6,0xe, 
+0xc1,0x12,0xe, 0xa1,0x16,0xe, 0x81,0x1a,0xe, 0x61,0x1e,0xe, 0x41,0x22,0xe, 0x21,
+0x26,0xe, 0x1, 0x2a,0xd, 0xe1,0x2e,0xd, 0xc1,0x32,0xd, 0xa1,0x36,0xd, 0x81,0x3a,
+0xd, 0x61,0x3e,0xd, 0x41,0x42,0xd, 0x21,0x46,0x1c,0x21,0x48,0x85,0x29,0x9c,0x38,
+0xd, 0x21,0x4, 0xd, 0x41,0x0, 0x98,0xdf,0xc0,0xa0,0x10,0x1, 0xfc,0xe5,0x7, 0xec,
+0x18,0xc7,0x23,0xf8,0x5, 0x7, 0xec,0x18,0xc7,0x6, 0x18,0xc7,0x7, 0x18,0xc7,0x22,
+0xc, 0x7, 0x8, 0xc, 0x7, 0x24,0xc0,0xe0,0x10,0x1, 0xfc,0xe7,0xa, 0x70,0x10,0xc7,
+0x4, 0x89,0x43,0x10,0x67,0x1, 0x40,0x63,0x33,0x5c,0x63,0x0, 0xe4,0x0, 0x8b,0x60,
+0x88,0x6a,0xd, 0x21,0x6, 0xd, 0x41,0x2, 0x98,0x80,0x98,0xa1,0x98,0xc0,0x9c,0x28,
+0xe7,0xff,0xf8,0x61,0xc0,0xe0,0x10,0x1, 0xf8,0x67,0x1, 0x14,0x85,0x29,0xb, 0xc5,
+0x12,0x8, 0xc5,0x0, 0xa, 0xe5,0x2, 0xb, 0x5, 0x4, 0xb, 0x25,0x6, 0xb, 0x45,0x8, 
+0xb, 0x65,0xa, 0xb, 0x85,0xc, 0xb, 0xa5,0xe, 0x88,0xe3,0x8, 0xa5,0x10,0x20,0x84,
+0x34,0x8b,0x5e,0x8b,0x25,0x8b,0x1d,0x8a,0xfc,0x88,0xdb,0xc0,0xa0,0x10,0x1, 0x9b,
+0x62,0xe8,0x85,0xa, 0x7b,0x40,0xb9,0x23,0x40,0xa5,0xd8,0x40,0xa0,0x2d,0xfc,0xa5,
+0x3, 0xff,0xd4,0xe5,0x0, 0xc8,0x43,0x3a,0x23,0x5c,0x66,0x4, 0x43,0x79,0xd8,0xff,
+0x7b,0x3, 0xff,0xd7,0x67,0x3, 0xcc,0xd4,0xe5,0x0, 0xbc,0x24,0xfc,0x4c,0x40,0xc6,
+0x3b,0x40,0xe5,0x3d,0x43,0x7, 0xc3,0x40,0x78,0x34,0xe4,0x0, 0x0, 0x73,0x98,0xa2,
+0x43,0x5a,0x23,0x43,0x5a,0x28,0xfc,0xba,0x3, 0xff,0xd4,0xa7,0x1, 0x9c,0xc0,0xe0,
+0xff,0xec,0x20,0x0, 0xad,0x43,0x40,0xd5,0xfc,0xba,0x4, 0x0, 0xff,0x5a,0xfc,0x1, 
+0x40,0x7a,0x3c,0x42,0xe3,0xbb,0xc8,0x60,0x7, 0xff,0x40,0xe3,0x3d,0x40,0xc6,0x3b,
+0x40,0x77,0x34,0x40,0x63,0x28,0x5c,0x63,0x4, 0xe4,0x0, 0x0, 0x47,0x24,0xfc,0x3e,
+0x8c,0xe4,0x43,0x18,0x3b,0x40,0x98,0x20,0xe4,0x0, 0x0, 0x23,0xff,0x84,0x7, 0xff,
+0x40,0xfc,0x3d,0x42,0xf7,0x3b,0x40,0x97,0x20,0x5c,0x64,0x4, 0x85,0x29,0x9c,0x38,
+0xc0,0xe0,0x10,0x1, 0xc, 0x1, 0x4, 0xfc,0xe7,0xa, 0x70,0x10,0xc7,0x14,0x8, 0xa7,
+0xb, 0xc0,0xe0,0x10,0x1, 0x5c,0x85,0x6, 0xe8,0xe7,0x7, 0x0, 0x40,0xe4,0x3b,0x40,
+0xe7,0x30,0xd4,0x67,0x0, 0x4c,0x98,0xe1,0xc, 0xe1,0x4, 0xc, 0xe1,0x6, 0x20,0xe0,
+0x82,0xc0,0xe0,0x10,0x1, 0xe8,0xe7,0x7, 0x2, 0x40,0xe5,0x3b,0x40,0xe7,0x30,0xd4,
+0xe3,0x0, 0x78,0x98,0xe1,0xc, 0xe1,0x4, 0x98,0xe0,0xe4,0x0, 0x0, 0xd, 0x98,0xff,
+0xc, 0x81,0x6, 0x20,0x81,0x32,0xc0,0xe0,0x10,0x1, 0xc0,0x80,0x10,0x1, 0xf3,0x7, 
+0xa, 0x74,0xfc,0x84,0x7, 0x2, 0x9a,0xe0,0x98,0xe1,0xe4,0x0, 0x0, 0x5f,0xb, 0x44,
+0x0, 0x1f,0x27,0x1, 0x43,0x45,0xd3,0x43,0x5a,0x30,0xd7,0x43,0x0, 0xd4,0xb, 0x44,
+0x2, 0x43,0x5a,0x2b,0x43,0x5a,0x30,0xd7,0x43,0x0, 0x68,0x98,0x81,0xc, 0x81,0x4, 
+0xe4,0x0, 0x0, 0x1f,0x5c,0xf9,0x2, 0x9c,0x82,0x9e,0xe1,0xd6,0xf8,0xfe,0x98,0xc, 
+0x81,0x6, 0x20,0x80,0xbe,0xc0,0x80,0x10,0x1, 0xc2,0xe0,0x10,0x1, 0xf0,0x84,0xa, 
+0x74,0xfe,0xf7,0x7, 0x0, 0x9c,0x81,0x4f,0x4, 0x8, 0x8e,0xf8,0xa, 0xf7,0x0, 0x40,
+0xb7,0x2b,0x40,0xc5,0x30,0xd4,0xc3,0x0, 0x64,0x98,0xc1,0x5c,0xe4,0x2, 0xc, 0xc1,
+0x4, 0x88,0x67,0x9c,0x28,0x85,0x29,0x24,0xc0,0xb8,0xc2,0xe0,0x10,0x1, 0xf3,0x17,
+0xa, 0x74,0xd4,0xd8,0x1, 0x1c,0x1e,0xe6,0xff,0x43,0x7, 0xc3,0x8f,0x17,0xc2,0xe0,
+0x10,0x1, 0x4f,0x38,0x10,0xfe,0xf7,0x9, 0x8, 0x8f,0x37,0xb, 0x59,0x0, 0xb, 0x39,
+0x2, 0xe4,0x0, 0x0, 0x11,0x9b,0x40,0x9b,0x20,0xc2,0xe0,0x10,0x1, 0xf2,0xf7,0xa, 
+0x74,0xd6,0xe6,0x1, 0x20,0xd0,0xdf,0x4, 0x60,0x40,0xe7,0xbb,0xc3,0x0, 0x10,0x1, 
+0x8c,0xe6,0xff,0x18,0x9, 0x8, 0x4f,0x67,0x10,0x8f,0x78,0xb, 0xdb,0x0, 0xb, 0xbb,
+0x2, 0xe4,0x0, 0x0, 0x17,0x24,0xdd,0xb0,0x9b,0xc0,0x9b,0xa0,0xd4,0xd7,0x3, 0x2c,
+0x5c,0xc6,0x0, 0xc0,0xe0,0x10,0x1, 0x1e,0xe6,0x1, 0xfc,0xe7,0x7, 0x0, 0x4c,0xc6,
+0x8, 0x4e,0xf7,0x8, 0x8e,0xe7,0x8c,0xe6,0xb, 0x77,0x0, 0xb, 0x87,0x0, 0xc0,0xc0,
+0x10,0x1, 0x43,0x1b,0xe5,0xfc,0xc6,0xa, 0x70,0x10,0xe6,0x14,0x8, 0xc6,0xb, 0x43,
+0x18,0x33,0x43,0x9c,0x33,0x43,0x18,0x38,0x43,0x9c,0x38,0x40,0xdb,0x33,0x43,0x83,
+0xe5,0x40,0xe6,0x38,0x42,0xfe,0xe3,0x40,0x67,0x1d,0x43,0x9d,0xe3,0x43,0x5a,0x1b,
+0x40,0x79,0x1b,0x8e,0xfa,0x8c,0x7c,0x42,0xf7,0xc0,0x40,0x63,0xc0,0xe4,0x0, 0x0, 
+0x11,0x9a,0xe0,0x98,0x60,0xc, 0x64,0x1, 0xe, 0xe5,0x1, 0x85,0x29,0x1c,0x21,0xd8,
+0xd, 0x41,0x20,0xd, 0x61,0x1c,0xd, 0x81,0x18,0xd, 0xa1,0x14,0xd, 0xc1,0x10,0xd, 
+0xe1,0xc, 0xe, 0x1, 0x8, 0x89,0x64,0xd, 0x21,0x24,0x5d,0x43,0x4, 0xc, 0xc1,0x4, 
+0xc, 0xe1,0x0, 0x89,0x85,0x89,0xc8,0xd, 0xa1,0x2a,0xc2,0x0, 0x10,0x1, 0x99,0xe2,
+0xfe,0x10,0xa, 0x70,0x8, 0x70,0xb, 0x40,0x6b,0x1b,0x40,0x63,0x78,0x40,0x6a,0x1d,
+0x5c,0x63,0x6, 0xe7,0xff,0xfc,0x16,0xc, 0x81,0x6, 0x88,0xc3,0xc, 0xe1,0x2, 0x24,
+0x7c,0x36,0xc, 0x4, 0x1, 0xc, 0x7, 0x1, 0xe4,0x0, 0x0, 0x37,0x8, 0xb0,0xb, 0x40,
+0xab,0x2b,0x41,0xe5,0x78,0x88,0xa7,0x41,0xea,0x7d,0x88,0xec,0x5c,0x6f,0x6, 0xe7,
+0xff,0xfd,0x70,0xc1,0xe0,0x10,0x1, 0xfd,0xef,0xa, 0x70,0x8, 0x6f,0xb, 0x40,0x6b,
+0x1b,0x4c,0x63,0xa, 0x8c,0x6a,0x5c,0x63,0x6, 0xe7,0xff,0xfb,0x8a,0x10,0xef,0x4, 
+0x88,0xc3,0xd4,0x67,0x1, 0x38,0xc, 0xe, 0x1, 0xc, 0xd, 0x1, 0xe, 0x1, 0xa, 0xd, 
+0xe1,0xe, 0xd, 0xc1,0x12,0xd, 0xa1,0x16,0xd, 0x81,0x1a,0xd, 0x61,0x1e,0xd, 0x41,
+0x22,0xd, 0x21,0x26,0x1c,0x21,0x28,0x85,0x29,0x8, 0xef,0xb, 0x41,0x6b,0x3b,0x4d,
+0x6b,0xa, 0x8d,0x4b,0x88,0x8e,0x88,0xad,0x5c,0x6a,0x6, 0x88,0xec,0xe, 0x1, 0xa, 
+0xd, 0xe1,0xe, 0xd, 0xc1,0x12,0xd, 0xa1,0x16,0xd, 0x81,0x1a,0xd, 0x61,0x1e,0xd, 
+0x41,0x22,0xd, 0x21,0x26,0x1c,0x21,0x28,0xe7,0xff,0xfc,0x7f,0xc0,0xe0,0x10,0x1, 
+0xc0,0xc0,0x10,0x1, 0xf0,0xa7,0xa, 0x74,0xf3,0x6, 0x7, 0xec,0x1f,0x25,0xfd,0xc0,
+0xe0,0x10,0x1, 0x9c,0xbf,0xfc,0xe7,0x7, 0xf1,0xcf,0x18,0x0, 0x1c,0x5e,0xe5,0x0, 
+0x8f,0x7, 0x98,0x82,0xe4,0x0, 0x0, 0x61,0x10,0xc7,0x1, 0xd4,0xc5,0x0, 0x76,0x1a,
+0xe7,0x0, 0x1b,0x27,0xff,0xe4,0x0, 0x0, 0x39,0x20,0xc0,0x36,0x18,0x87,0x0, 0x18,
+0x7, 0xff,0xe4,0x0, 0x0, 0x1f,0x1f,0x46,0xff,0x9c,0xc1,0x1b,0x47,0xff,0x18,0xc7,
+0x0, 0x1c,0xe7,0x1c,0xd4,0xf8,0xfe,0xa6,0x85,0x29,0xfc,0x21,0xff,0x80,0xca,0xe0,
+0x1, 0x0, 0xd, 0x41,0x78,0xd, 0x61,0x74,0xd, 0x81,0x70,0xd, 0xa1,0x6c,0xd, 0xe1,
+0x64,0xe, 0x1, 0x60,0xe, 0x21,0x5c,0xe, 0x41,0x58,0xe, 0x81,0x50,0xe, 0xa1,0x4c,
+0xe, 0xc1,0x48,0xcd,0x84,0xa, 0x0, 0xd, 0x21,0x7c,0xd, 0xc1,0x68,0xe, 0x61,0x54,
+0xcd,0x63,0x0, 0xa, 0xc2,0xc0,0x10,0x1, 0x41,0x6b,0x23,0xc2,0xa0,0x10,0x1, 0xc0,
+0x80,0x10,0x1, 0xc2,0x0, 0x10,0x1, 0xfc,0x84,0xa, 0x70,0xc2,0x80,0x10,0x1, 0x11,
+0xc4,0x4, 0x41,0x8c,0x18,0x41,0xa7,0x73,0x41,0x6b,0xb8,0x5d,0xed,0x0, 0x89,0x44,
+0x8c,0xcf,0x9d,0xdf,0x8d,0xe5,0x5c,0xc6,0x0, 0x5d,0xef,0x0, 0xfe,0xd6,0x4, 0xbc,
+0xfe,0xb5,0x7, 0x0, 0xfe,0x10,0x9, 0x8, 0xfe,0x94,0x8, 0x28,0x1e,0x41,0x8, 0xca,
+0x20,0x3, 0xe8,0xe4,0x0, 0x1, 0x45,0xc, 0xc1,0x4, 0xe7,0xff,0xca,0xf0,0x8, 0xaa,
+0xb, 0x10,0xea,0x14,0x42,0x6f,0x6d,0x1c,0x93,0x1, 0x4c,0x84,0x8, 0x8c,0x95,0x8, 
+0x64,0x0, 0x98,0x82,0x40,0x63,0x2b,0x88,0xb2,0x40,0x63,0x38,0x5c,0x63,0x6, 0xe7,
+0xff,0xf6,0xfe,0x4c,0xef,0x10,0x40,0xa3,0x5b,0x9c,0xe2,0xc, 0xc1,0x6, 0x8c,0xf0,
+0xd5,0xed,0x0, 0x46,0xd6,0x6e,0x1, 0x22,0x8, 0x87,0x1, 0x40,0xa5,0x88,0x40,0xa4,
+0x2d,0xc, 0xa7,0x1, 0x40,0x63,0x63,0x4c,0xef,0x10,0x40,0x63,0x88,0x8c,0xf0,0x8, 
+0xa7,0x1, 0x40,0x65,0x1d,0xc, 0x67,0x1, 0x4c,0xef,0x8, 0x1c,0x8f,0x1, 0x4e,0xe7,
+0x8, 0x1c,0xa7,0x1, 0x8e,0xf0,0x4f,0x5, 0x8, 0x8f,0x10,0xb, 0x38,0x0, 0x27,0x3c,
+0x1a,0xc, 0x18,0x1, 0x4c,0xe7,0x8, 0x8c,0xf0,0x8, 0xa7,0x0, 0x24,0xbc,0x1a,0xc, 
+0x7, 0x1, 0x8, 0xf7,0x0, 0x8, 0xb8,0x0, 0x8c,0xa7,0x4c,0xef,0x10,0x5d,0xe4,0x0, 
+0x8c,0xf4,0xc, 0xa7,0x0, 0x88,0x96,0x50,0xa0,0x3c,0x88,0x72,0xd5,0xe6,0xfa,0xd8,
+0xe, 0xc1,0x4a,0xe, 0xa1,0x4e,0xe, 0x81,0x52,0xe, 0x61,0x56,0xe, 0x41,0x5a,0xe, 
+0x21,0x5e,0xe, 0x1, 0x62,0xd, 0xe1,0x66,0xd, 0xc1,0x6a,0xd, 0xa1,0x6e,0xd, 0x81,
+0x72,0xd, 0x61,0x76,0xd, 0x41,0x7a,0xd, 0x21,0x7e,0xfc,0x21,0x0, 0x80,0x85,0x29,
+0xfc,0x21,0xff,0x70,0xed,0x41,0x0, 0x88,0xed,0x61,0x0, 0x84,0xed,0x81,0x0, 0x80,
+0xd, 0xa1,0x7c,0xd, 0xc1,0x78,0xd, 0xe1,0x74,0xe, 0x1, 0x70,0xe, 0x21,0x6c,0xe, 
+0x41,0x68,0xe, 0x61,0x64,0xc1,0x80,0x10,0x1, 0xed,0x21,0x0, 0x8c,0xe, 0x81,0x60,
+0xe, 0xa1,0x5c,0xe, 0xc1,0x58,0x8a,0x3, 0x8a,0x24,0x89,0x65,0xc, 0xc1,0x2c,0x99,
+0x40,0xfe,0x6c,0x7, 0xec,0x1e,0x41,0x48,0x1d,0xe1,0x38,0x1d,0xc1,0x40,0x1d,0xa1,
+0x30,0xe4,0x0, 0x0, 0x97,0xcc,0xea,0x0, 0x1c,0x8c,0xf3,0x10,0xc7,0x7, 0xa, 0xe7,
+0x17,0x43,0x30,0x34,0xc, 0x81,0x2e,0x13,0x19,0x0, 0x88,0xa6,0x1f,0x58,0x1, 0x1b,
+0x59,0x0, 0x8, 0x67,0x16,0x4c,0xe6,0x8, 0x1c,0xc1,0x58,0x8c,0xf8,0x4c,0xe7,0x8, 
+0x8c,0xc7,0xe, 0xe6,0xf9,0x40,0xcd,0x3c,0x41,0xe, 0x3c,0xc, 0xc1,0x0, 0x9d,0x41,
+0x40,0xd2,0x3c,0x5d,0x4a,0x0, 0x8c,0xef,0xe7,0xff,0xf9,0x6a,0xf0,0xec,0x7, 0xec,
+0xd4,0xea,0xfd,0xad,0xc0,0xe0,0x10,0x1, 0x88,0xd1,0xf2,0xc7,0x1, 0x14,0x98,0xa1,
+0x98,0xe0,0xe4,0x0, 0x0, 0x29,0x40,0x90,0x3c,0x10,0x84,0x0, 0x24,0x84,0x19,0xc, 
+0xa6,0x0, 0x9c,0xe1,0x9c,0xc4,0x5c,0x87,0x0, 0xd6,0xc4,0xff,0x6d,0xc3,0xc0,0x10,
+0x1, 0xc2,0xa0,0x10,0x1, 0xff,0xde,0x7, 0xec,0xfe,0xb5,0xa, 0x70,0x1d,0xe1,0x50,
+0x99,0x40,0x99,0x80,0x1e,0x81,0x38,0x1e,0x61,0x48,0x1e,0xe1,0x30,0x1f,0x1, 0x40,
+0x9b,0x24,0x53,0x40,0xc8,0xcb,0x60,0x3, 0x20,0xe4,0x0, 0x4, 0x3f,0x40,0xf1,0x54,
+0xc, 0xe7,0x2, 0xd0,0xe0,0x4, 0xea,0x8, 0x8f,0x0, 0xb, 0x8f,0x2, 0x40,0xc4,0xe5,
+0x5c,0xc6,0x6, 0x4c,0xa6,0xfa,0x8, 0xf5,0xb, 0x44,0xc5,0x36,0xcf,0xa7,0x0, 0x5, 
+0x40,0xc6,0x2d,0x50,0xa0,0x64,0x5c,0xc6,0x6, 0xd4,0xdd,0x0, 0xec,0x4f,0xa7,0x10,
+0x98,0xa0,0xd7,0xa6,0x0, 0xa4,0xcc,0xa7,0xff,0xfc,0x8c,0xa6,0xcc,0xa5,0x0, 0x64,
+0x40,0xa5,0x38,0x5c,0xa5,0x0, 0x5f,0x84,0x1d,0x1f,0x81,0x58,0x4c,0xec,0x8, 0x48,
+0xc1,0x1, 0x8c,0xc7,0x4c,0xc6,0x8, 0x8c,0xdc,0x4b,0x80,0xa, 0x8c,0xfc,0x1f,0x81,
+0x58,0x4c,0xe7,0x8, 0x8c,0xfc,0x9, 0x7, 0xd8,0x8, 0x67,0xe8,0x8c,0x68,0x9, 0x6, 
+0xf0,0xb, 0xa6,0xe8,0x8c,0x68,0x9, 0x6, 0xe0,0x8, 0xc6,0xd8,0x40,0x9a,0x2d,0xb, 
+0x87,0xe0,0x8f,0xa6,0x8c,0x68,0x8, 0xc7,0xf0,0x40,0xa3,0x2b,0x40,0xfd,0x34,0x8c,
+0xfc,0x40,0xe7,0x23,0x8c,0xa7,0x40,0xa5,0xd8,0xc, 0xab,0x0, 0xe4,0x0, 0x2, 0xe9,
+0x40,0xf0,0x64,0x10,0xe7,0x0, 0x20,0xe0,0x52,0x98,0x81,0x4f,0x8c,0x8, 0x42,0x44,
+0x75,0x99,0xa0,0x43,0xb0,0x94,0xe4,0x0, 0x0, 0xff,0x40,0xf4,0x54,0x8, 0xc7,0x0, 
+0x40,0xf3,0x54,0x8, 0xe7,0x0, 0x8c,0xe6,0x40,0xd7,0x54,0x8, 0xc6,0x0, 0x8c,0xe6,
+0x40,0xd8,0x54,0x8, 0xc6,0x0, 0xe4,0x0, 0x2, 0x57,0xcc,0xcd,0x0, 0x1c,0x8c,0xde,
+0x40,0xed,0xe4,0x8, 0x66,0x16,0x4c,0xe7,0x8, 0x40,0xd7,0x3c,0x41,0x18,0x3c,0xc, 
+0xc1,0x0, 0xe, 0xe1,0x28,0x40,0xd3,0x3c,0xf, 0x1, 0x24,0xf, 0x21,0x20,0xf, 0x41,
+0x18,0xf, 0x61,0x14,0xf, 0x81,0x10,0xf, 0xa1,0xc, 0xf, 0xc1,0x1c,0xc, 0x81,0x2e,
+0x88,0xae,0x8c,0xf4,0xe7,0xff,0xf6,0x72,0x9d,0xa1,0xf, 0xc1,0x1e,0x5d,0xad,0x0, 
+0xf, 0xa1,0xe, 0xf, 0x81,0x12,0xf, 0x61,0x16,0xf, 0x41,0x1a,0xf, 0x21,0x22,0xf, 
+0x1, 0x26,0xe, 0xe1,0x2a,0x10,0xfd,0x0, 0xd4,0xed,0xfd,0x15,0x4c,0xd2,0x10,0x40,
+0xb1,0x34,0xc, 0xa5,0x2, 0xd0,0xa0,0x5, 0xa, 0x1c,0xe1,0x58,0x8c,0xc7,0x8, 0x86,
+0xf8,0xb, 0x86,0xfa,0x40,0xa4,0xe5,0x5c,0xa5,0x6, 0x4c,0xc5,0xfa,0x8, 0xf5,0xb, 
+0x44,0xa6,0x2e,0xcf,0xa7,0x0, 0x5, 0x40,0xa5,0x35,0x50,0xc0,0x64,0x5c,0xa5,0x6, 
+0xd4,0xbd,0x0, 0xec,0x4f,0xa7,0x10,0x98,0xc0,0xd7,0xa5,0x0, 0xa4,0xcc,0xc7,0xff,
+0xfc,0x8c,0xc5,0xcc,0xc6,0x0, 0x64,0x40,0xc6,0x38,0x5c,0xc6,0x0, 0x5f,0x84,0x1d,
+0x48,0x80,0xa, 0x4d,0xce,0x8, 0x1f,0x81,0x58,0x48,0xe1,0x1, 0x8c,0xee,0x8d,0xc4,
+0x1c,0x81,0x58,0x4d,0xce,0x8, 0x8d,0xc4,0x8, 0x6e,0xd8,0x4c,0xe7,0x8, 0xb, 0xae,
+0xe8,0x8c,0xfc,0x8f,0xa3,0xb, 0x87,0xe8,0x8, 0x67,0xf0,0x40,0xba,0x35,0x8f,0xa3,
+0x8, 0x8e,0xe0,0x8, 0x67,0xe0,0x8, 0xe7,0xd8,0x8f,0xa3,0x8c,0xfc,0x40,0xdd,0x33,
+0xb, 0x8e,0xf0,0x8c,0xfc,0x8c,0xe4,0x40,0xe7,0x2b,0x8c,0xc7,0x40,0xc6,0xd8,0xc, 
+0xcb,0x0, 0xe4,0x0, 0x0, 0x5d,0x20,0xe0,0x9c,0x1c,0xe1,0x58,0x4d,0xce,0x10,0x8d,
+0xc7,0x8, 0xae,0xe0,0x8, 0xee,0xf0,0x8, 0xce,0xe8,0x8c,0xe5,0x8, 0xae,0xd8,0x8c,
+0xe5,0x8c,0xe6,0x40,0xe7,0xc8,0xc, 0xeb,0x0, 0xe4,0x0, 0x0, 0xf, 0xc, 0xb, 0x0, 
+0x9d,0x81,0x9d,0x64,0x9d,0x44,0x9d,0xe4,0x5d,0xcc,0x0, 0xd6,0xce,0xef,0x15,0xe, 
+0xc1,0x5a,0xe, 0xa1,0x5e,0xe, 0x81,0x62,0xe, 0x61,0x66,0xe, 0x41,0x6a,0xe, 0x21,
+0x6e,0xe, 0x1, 0x72,0xd, 0xe1,0x76,0xd, 0xc1,0x7a,0xd, 0xa1,0x7e,0xed,0x81,0x0, 
+0x82,0xed,0x61,0x0, 0x86,0xed,0x41,0x0, 0x8a,0xed,0x21,0x0, 0x8e,0xfc,0x21,0x0, 
+0x90,0x85,0x29,0xc0,0xe0,0x10,0x1, 0xc0,0xc0,0x10,0x1, 0xf2,0xe7,0xa, 0x74,0xf3,
+0xa6,0x7, 0xec,0xc0,0xe0,0x10,0x1, 0xcf,0xbd,0x0, 0x1c,0xfc,0xe7,0x7, 0xf2,0xc0,
+0xa0,0x10,0x1, 0x8f,0xa7,0xfc,0xa5,0x8, 0x28,0x8b,0x45,0xe4,0x0, 0x1, 0x37,0x1c,
+0x87,0x2, 0x10,0xc7,0xfe,0x13,0xc7,0xff,0x13,0x27,0x1, 0x13,0x7, 0x0, 0xf, 0x64,
+0x2, 0x23,0x64,0x5e,0x40,0x97,0xcb,0x8c,0x98,0x4c,0x84,0x10,0x8c,0x85,0xc, 0x84,
+0x2, 0x43,0x97,0xcb,0xe4,0x0, 0x0, 0xd1,0x40,0x97,0xc4,0x4c,0x84,0x10,0x8c,0x85,
+0xf, 0x84,0x2, 0x4c,0x98,0x10,0x8c,0x85,0xc, 0x84,0x2, 0x8c,0x9c,0xe7,0xff,0xff,
+0xc9,0x23,0x64,0x5a,0x43,0x26,0xe4,0x4f,0x39,0x10,0x8f,0x25,0xf, 0x39,0x2, 0xd7,
+0x24,0x1, 0xa0,0xe4,0x0, 0x0, 0x55,0x4f,0x26,0x10,0x40,0x66,0xbc,0x8f,0x3a,0x4c,
+0x63,0x10,0xf, 0x39,0x2, 0x8c,0x7a,0xc, 0x63,0x2, 0x8c,0x79,0xd4,0x64,0x0, 0xb8,
+0x40,0x86,0xe4,0x4c,0x84,0x10,0x8c,0x9a,0xc, 0x84,0x2, 0x8f,0x24,0x8b,0x6, 0xe4,
+0x0, 0x0, 0xd, 0x8b,0x24,0x9c,0xc1,0x88,0x99,0x5c,0xc6,0x0, 0xd4,0xde,0xfd,0xa8,
+0x1b,0x7, 0x0, 0x1c,0xe7,0x1c,0xd4,0xfd,0xfb,0x4e,0xe7,0xff,0xf4,0x45,0xc0,0xe0,
+0x10,0x1, 0xf3,0xc7,0x7, 0xec,0xc0,0xe0,0x10,0x1, 0xf3,0x7, 0xa, 0x74,0xc0,0xe0,
+0x10,0x1, 0xc0,0x80,0x10,0x1, 0xeb,0xa7,0x5, 0x2a,0xfc,0x84,0x8, 0x28,0xc0,0xe0,
+0x10,0x1, 0x1f,0x98,0xfe,0xfc,0xe7,0x7, 0xf4,0x98,0xa0,0x98,0x60,0x9b,0x61,0xe4,
+0x0, 0x0, 0xd3,0xc, 0xc7,0x2, 0x20,0xc1,0x74,0x10,0xc7,0xfe,0x12,0xe7,0xff,0x42,
+0xf8,0xbb,0x43,0x37,0x34,0x4f,0x39,0x10,0x8f,0x24,0xf, 0x39,0x2, 0xc3,0x20,0x7c,
+0xec,0x20,0x1, 0x9, 0x24,0xc4,0xfd,0xd7,0x86,0x1, 0xe0,0x1f,0x46,0xff,0x9c,0xc1,
+0x5c,0xc6,0x0, 0x5f,0x5a,0x0, 0x8f,0x57,0x8e,0xe6,0x4f,0x5a,0x10,0x4e,0xf7,0x10,
+0x8f,0x44,0x8e,0xe4,0xf, 0x5a,0x2, 0xc, 0xd7,0x2, 0x5c,0xda,0x15,0x48,0xc6,0xd0,
+0x5c,0xc6,0x6, 0x43,0x39,0x35,0xd7,0xb9,0x0, 0x68,0x4c,0xdb,0x2c,0x44,0x63,0x35,
+0x5c,0x63,0x0, 0x9c,0xa1,0x1c,0xe7,0x1c,0x5c,0xc5,0x0, 0xd7,0xc6,0xfc,0xc5,0xe7,
+0xff,0xbe,0x77,0xfc,0x21,0xff,0x60,0x98,0x60,0xed,0x21,0x0, 0x9c,0xed,0x41,0x0, 
+0x98,0xe, 0x21,0x7c,0xed,0x61,0x0, 0x94,0xed,0x81,0x0, 0x90,0xed,0xa1,0x0, 0x8c,
+0xed,0xc1,0x0, 0x88,0xed,0xe1,0x0, 0x84,0xee,0x1, 0x0, 0x80,0xe, 0x41,0x78,0xe, 
+0x61,0x74,0xe, 0x81,0x70,0xe, 0xa1,0x6c,0xe, 0xc1,0x68,0xc, 0x1, 0x5c,0xc, 0x1, 
+0x60,0x18,0x1, 0x66,0x18,0x1, 0x67,0xc, 0x1, 0x54,0xc, 0x1, 0x58,0xe7,0xff,0xb6,
+0xa8,0x1c,0xa1,0x5c,0x98,0xc3,0x89,0x45,0x1c,0x61,0x66,0x1c,0x81,0x54,0xe7,0xff,
+0xf5,0xc4,0xc0,0xe0,0x10,0x1, 0xc0,0xc0,0x10,0x1, 0xf2,0x27,0x1, 0x14,0xfc,0xc6,
+0x4, 0xd8,0x4e,0x31,0x10,0x88,0xea,0x8e,0x2a,0xe4,0x0, 0x0, 0x35,0xc, 0x87,0x2, 
+0x8, 0xa6,0x0, 0x9c,0xc8,0x40,0xa4,0x2d,0x5c,0xbf,0xf9,0x48,0xa5,0x0, 0xc, 0xa7,
+0x0, 0x9c,0xe4,0xd4,0xf1,0xff,0x56,0xc1,0xc0,0x10,0x1, 0xc0,0xe0,0x10,0x1, 0xc2,
+0xc0,0x10,0x1, 0xc2,0x0, 0x10,0x1, 0xc2,0xa0,0x10,0x1, 0xfd,0xce,0xa, 0x70,0xfc,
+0xe7,0x4, 0xbc,0xfe,0xd6,0x7, 0x0, 0xfe,0x10,0x9, 0x8, 0xfe,0xb5,0x8, 0x28,0x1d,
+0xa1,0x60,0x99,0x60,0x1e,0x81,0x66,0x9a,0x61,0x1d,0xe1,0x10,0x52,0x40,0x64,0xe4,
+0x0, 0x1, 0x65,0x40,0xd4,0x5c,0x88,0xab,0x10,0xc6,0x0, 0x20,0xc0,0x26,0xc, 0xcd,
+0x2, 0xc, 0xca,0x0, 0x10,0xce,0x4, 0x9d,0x61,0x40,0xa5,0x33,0x41,0x8c,0x33,0x40,
+0xb3,0x2d,0x5d,0x8c,0x0, 0xc, 0xa1,0xc, 0x40,0xcb,0x33,0xe4,0x0, 0x0, 0xef,0xc, 
+0xc1,0x8, 0xc, 0xe1,0x4, 0xe7,0xff,0xbd,0xba,0xe, 0xe1,0xe, 0x40,0xac,0xbc,0x4c,
+0xa5,0x8, 0x8c,0xb6,0x8, 0x65,0x0, 0x8, 0xae,0xb, 0x40,0x63,0x2b,0x10,0xae,0x14,
+0x98,0x81,0x40,0x63,0x28,0x88,0xaf,0x5c,0x63,0x6, 0xe7,0xff,0xe9,0xc8,0x4c,0xac,
+0x10,0x1f,0xc, 0x1, 0x9c,0xa2,0xc, 0x8a,0x2, 0x8c,0xb0,0x40,0x83,0x23,0xa, 0xe5,
+0x1, 0x40,0x84,0x90,0x5c,0x84,0x4, 0x42,0xf7,0x25,0xe, 0xe5,0x1, 0xc, 0xe1,0x6, 
+0x4e,0xec,0x10,0xc, 0xc1,0xa, 0x5d,0x98,0x0, 0x43,0x17,0xac,0x8e,0xf0,0xb, 0x37,
+0x1, 0x40,0x99,0x25,0x5c,0x84,0x6, 0xc, 0x97,0x1, 0x8, 0xa5,0x0, 0x8c,0x85,0xc, 
+0x98,0x0, 0x88,0x87,0x50,0xa0,0x3c,0x88,0x6f,0xd4,0xcc,0xfc,0x34,0x9d,0x44,0x9d,
+0xbc,0x5d,0x8b,0x0, 0xd5,0x51,0xfa,0x7e,0x98,0x61,0xe7,0xff,0xb4,0x2e,0xc0,0xe0,
+0x10,0x1, 0xc0,0xa0,0x10,0x1, 0xf2,0xe7,0xa, 0x74,0xc0,0xc0,0x10,0x1, 0x4e,0xf7,
+0x8, 0xfc,0xa5,0x8, 0x50,0xfc,0xc6,0x9, 0x8, 0x98,0xe0,0xe4,0x0, 0x0, 0x41,0xb, 
+0x18,0x1, 0xf, 0x4, 0x1, 0x1f,0x7, 0x1, 0x4c,0x87,0x10,0x5c,0xf8,0x0, 0x9c,0x82,
+0x43,0x4, 0x34,0x8c,0x85,0xb, 0x18,0x1, 0xf, 0x4, 0x1, 0x4c,0x87,0x10,0x43,0x4, 
+0x34,0x8c,0x85,0xd6,0xe7,0xfe,0xe4,0xe, 0xc1,0x6a,0xe, 0xa1,0x6e,0xe, 0x81,0x72,
+0xe, 0x61,0x76,0xe, 0x41,0x7a,0xe, 0x21,0x7e,0xee,0x1, 0x0, 0x82,0xed,0xe1,0x0, 
+0x86,0xed,0xc1,0x0, 0x8a,0xed,0xa1,0x0, 0x8e,0xed,0x81,0x0, 0x92,0xed,0x61,0x0, 
+0x96,0xed,0x41,0x0, 0x9a,0xed,0x21,0x0, 0x9e,0xfc,0x21,0x0, 0xa0,0x85,0x29,0xfc,
+0x21,0xff,0x58,0xc0,0x60,0x10,0x1, 0xed,0xa1,0x0, 0x94,0xee,0x21,0x0, 0x84,0xee,
+0x41,0x0, 0x80,0xe, 0x61,0x7c,0xe, 0x81,0x78,0xe, 0xa1,0x74,0xe, 0xc1,0x70,0xed,
+0x21,0x0, 0xa4,0xed,0x41,0x0, 0xa0,0xed,0x61,0x0, 0x9c,0xed,0x81,0x0, 0x98,0xed,
+0xc1,0x0, 0x90,0xed,0xe1,0x0, 0x8c,0xee,0x1, 0x0, 0x88,0xc2,0x80,0x10,0x1, 0xfc,
+0x63,0x8, 0x96,0xf0,0x94,0xa, 0x70,0x98,0xa0,0xe4,0x0, 0x74,0x1c,0xc0,0xe0,0x10,
+0x1, 0xc2,0x40,0x10,0x1, 0xe8,0xe7,0x4, 0xfb,0x99,0xa0,0xc4,0xe7,0x2, 0x0, 0x1e,
+0x61,0xc, 0x5c,0xe0,0x9, 0xfe,0x32,0x7, 0xec,0x48,0xc2,0xb, 0x1e,0xc1,0x6e,0xc, 
+0xc1,0x4, 0x1e,0xa1,0x6c,0xe7,0xff,0xfa,0xfc,0xe7,0xff,0xf8,0x14,0xc0,0xc0,0x10,
+0x1, 0xe8,0xe6,0x4, 0xfb,0x54,0xe7,0x8, 0x20,0xe0,0x1c,0xe7,0xff,0xf9,0x86,0x88,
+0x73,0xf0,0x94,0xa, 0x70,0x98,0xa0,0x99,0x60,0xe4,0x0, 0x73,0x7c,0x99,0x40,0xe4,
+0x0, 0x1, 0x25,0xcd,0x8a,0x0, 0x1c,0xc0,0xc0,0x10,0x1, 0x40,0x71,0x64,0xe8,0xe6,
+0x4, 0xf9,0x8d,0x91,0x1c,0x63,0x16,0x12,0xc, 0x4, 0x11,0xec,0x5, 0x54,0xe7,0x2, 
+0x88,0x90,0x88,0xaf,0x11,0xcc,0x7, 0x20,0xe1,0x4, 0x88,0xce,0x88,0x76,0x98,0xe2,
+0x99,0x1, 0xe7,0xff,0xbc,0x8c,0x20,0x60,0xfc,0x88,0x90,0x88,0xaf,0x88,0xce,0x88,
+0x75,0x98,0xe2,0x99,0x1, 0xe7,0xff,0xbe,0x10,0x20,0x60,0xb0,0x8, 0xc1,0x6c,0xcc,
+0xc6,0x0, 0x3, 0x8, 0xe1,0x6e,0xcc,0xe7,0x0, 0x7, 0x8c,0xe6,0x98,0xca,0x40,0xe7,
+0x30,0xc, 0xec,0x17,0xe4,0x0, 0x0, 0x39,0x88,0xce,0x98,0xe2,0x99,0x1, 0xe7,0xff,
+0xbc,0x14,0x20,0x60,0x3a,0x98,0xe1,0x4c,0xe7,0x54,0x45,0x6b,0x3d,0x5d,0x6b,0x0, 
+0x88,0x73,0xf0,0x94,0xa, 0x70,0x98,0xa1,0x9d,0x41,0xe4,0x0, 0x72,0x5a,0x5d,0x4a,
+0x0, 0xf0,0xf2,0x7, 0xec,0xd4,0xea,0xfb,0x75,0x88,0x6b,0xe7,0xff,0xb7,0xde,0x9d,
+0xa1,0xc, 0xe1,0x6, 0x5d,0xad,0x0, 0xd4,0xed,0xf9,0x75,0xc0,0xe0,0x10,0x1, 0xc0,
+0x60,0x10,0x1, 0xf0,0x87,0xa, 0x70,0xfc,0x63,0x8, 0x96,0x98,0xa1,0xe4,0x0, 0x71,
+0xf4,0xed,0x21,0x0, 0xa6,0xe, 0xc1,0x72,0xe, 0xa1,0x76,0xe, 0x81,0x7a,0xe, 0x61,
+0x7e,0xee,0x41,0x0, 0x82,0xee,0x21,0x0, 0x86,0xee,0x1, 0x0, 0x8a,0xed,0xe1,0x0, 
+0x8e,0xed,0xc1,0x0, 0x92,0xed,0xa1,0x0, 0x96,0xed,0x81,0x0, 0x9a,0xed,0x61,0x0, 
+0x9e,0xed,0x41,0x0, 0xa2,0xfc,0x21,0x0, 0xa8,0x85,0x29,0x1c,0x21,0xe8,0xd, 0x41,
+0x10,0xd, 0x61,0xc, 0xd, 0x81,0x8, 0xd, 0x21,0x14,0x89,0x66,0x89,0x83,0xc0,0xc0,
+0x10,0x1, 0x89,0x45,0xe8,0xc6,0x4, 0xf9,0x54,0xc6,0x4, 0x20,0xc0,0x54,0x88,0x64,
+0x88,0xc7,0x88,0x85,0xc, 0xe1,0x4, 0x88,0xab,0xe7,0xff,0xc4,0x4c,0xc, 0xe1,0x6, 
+0xc0,0xc0,0x10,0x1, 0xf0,0xc6,0xa, 0x74,0x40,0xc7,0x33,0x5c,0xc6,0x0, 0xc0,0x80,
+0x10,0x1, 0x8d,0x66,0x8d,0x46,0x5d,0x6b,0x0, 0x5d,0x4a,0x0, 0xfc,0x84,0x9, 0x8, 
+0x98,0xa0,0x98,0xc0,0xe4,0x0, 0x0, 0x3d,0x4e,0xea,0x10,0x8e,0xe4,0xa, 0xf7,0x2, 
+0x1f,0xa, 0x1, 0x8c,0xd7,0x4e,0xea,0x10,0x5d,0x58,0x0, 0x8e,0xe4,0xa, 0xf7,0x0, 
+0x8c,0xb7,0xd5,0x4b,0xff,0x30,0x24,0xc0,0x18,0x24,0xa0,0x26,0x98,0x60,0xe4,0x0, 
+0x0, 0x7f,0x4c,0x65,0x40,0x9c,0xe4,0x40,0x63,0x30,0x4c,0xe7,0x10,0xc0,0xc0,0x10,
+0x1, 0xfc,0xc6,0x4, 0xbc,0x8c,0xe6,0x8, 0x87,0x4, 0x8, 0xe7,0x6, 0xfc,0x63,0xff,
+0x0, 0x40,0x63,0x3b,0x98,0xea,0x4c,0x84,0x40,0x40,0x63,0x38,0x50,0xc0,0x64,0x40,
+0xe4,0x30,0x8c,0x67,0xc, 0x6c,0x0, 0x5c,0x60,0x1, 0x48,0x63,0xa, 0xd, 0x81,0xa, 
+0xd, 0x61,0xe, 0xd, 0x41,0x12,0xd, 0x21,0x16,0x1c,0x21,0x18,0x85,0x29,0x1c,0x21,
+0xb0,0x98,0x60,0xd, 0x21,0x4c,0xd, 0x41,0x48,0xd, 0x61,0x44,0xd, 0x81,0x40,0xd, 
+0xa1,0x3c,0xd, 0xc1,0x38,0xd, 0xe1,0x34,0xe, 0x1, 0x30,0xe, 0x21,0x2c,0xe, 0x41,
+0x28,0xe, 0x61,0x24,0xe, 0x81,0x20,0xe, 0xa1,0x1c,0xc, 0x1, 0x8, 0xc, 0x1, 0xc, 
+0x18,0x1, 0x16,0x18,0x1, 0x17,0xc, 0x1, 0x0, 0xc, 0x1, 0x4, 0xe7,0xff,0xad,0xca,
+0x1d,0x41,0x8, 0x98,0xc4,0x88,0xaa,0x1c,0x61,0x16,0x88,0x81,0xe7,0xff,0xec,0xe8,
+0xc0,0xe0,0x10,0x1, 0xc0,0xc0,0x10,0x1, 0xfc,0xe7,0x4, 0xdc,0xf0,0xa6,0x1, 0x14,
+0x4c,0xa5,0x10,0x8c,0xaa,0xe4,0x0, 0x0, 0x3b,0xc, 0xca,0x2, 0xc, 0xc7,0x0, 0x8, 
+0x87,0xfc,0x9c,0xe8,0x40,0xc6,0x25,0x5c,0xdf,0xf9,0x48,0xc6,0x0, 0xc, 0xca,0x0, 
+0x9d,0x44,0xd5,0x45,0xff,0x3e,0x98,0x61,0xc2,0x40,0x10,0x1, 0xc2,0xa0,0x10,0x1, 
+0xe7,0xff,0xad,0x22,0xfe,0xb5,0x8, 0x96,0x99,0x60,0x99,0x40,0xfd,0xb2,0x7, 0xec,
+0x1e,0x81,0x10,0x9a,0x21,0xc2,0x60,0x10,0x1, 0xe4,0x0, 0x0, 0xf9,0xcd,0xca,0x0, 
+0x1c,0x40,0xee,0x6c,0x88,0x74,0x12,0x7, 0x4, 0x11,0xe7,0x5, 0x8, 0x87,0x16,0x11,
+0x87,0x7, 0x88,0xb0,0x88,0xcf,0x88,0xec,0xe7,0xff,0xfc,0xc6,0x20,0x60,0xfc,0x98,
+0x60,0xe7,0xff,0xac,0xa0,0x1e,0xe1,0x18,0x88,0xb0,0x88,0xcf,0x88,0xec,0xc, 0x61,
+0x12,0x4c,0x8c,0x10,0x8c,0x97,0xc, 0x84,0xf2,0xe7,0xff,0xe8,0xe2,0x98,0x61,0xe7,
+0xff,0xac,0x64,0x40,0x8d,0x74,0x40,0x6d,0x74,0x88,0xb0,0x88,0xcf,0x9c,0x8c,0x88,
+0xec,0x1c,0x63,0x18,0xe7,0xff,0xaf,0x20,0x20,0x60,0x32,0x4c,0xf1,0x54,0x45,0x6b,
+0x3d,0x5d,0x6b,0x0, 0x88,0x75,0xf0,0x93,0xa, 0x70,0x98,0xa1,0x9d,0x41,0xe4,0x0, 
+0x6d,0x92,0x5d,0x4a,0x0, 0xf0,0xf2,0x7, 0xec,0xd4,0xea,0xfc,0x25,0x88,0x6b,0xe7,
+0xff,0xb3,0x16,0xd, 0x21,0x4e,0xe, 0xa1,0x1e,0xe, 0x81,0x22,0xe, 0x61,0x26,0xe, 
+0x41,0x2a,0xe, 0x21,0x2e,0xe, 0x1, 0x32,0xd, 0xe1,0x36,0xd, 0xc1,0x3a,0xd, 0xa1,
+0x3e,0xd, 0x81,0x42,0xd, 0x61,0x46,0xd, 0x41,0x4a,0x1c,0x21,0x50,0x85,0x29,0xc0,
+0xe0,0x10,0x1, 0xec,0xe7,0x1, 0x1e,0xcc,0x84,0x0, 0xa, 0x8c,0x87,0x8, 0xe4,0x6, 
+0x40,0xe3,0x3b,0x14,0x64,0x8, 0x4c,0x63,0x50,0xfc,0x63,0x2, 0x0, 0x8c,0x67,0x4c,
+0x63,0x52,0x85,0x29,0xd0,0xa3,0x7, 0x5, 0xd0,0x7f,0x6, 0xe0,0x9b,0x43,0xc0,0xe0,
+0x10,0x1, 0x43,0x5a,0x2d,0xf3,0x27,0x1, 0x22,0x4f,0x5a,0x8, 0x9b,0x0, 0x5f,0x5a,
+0x0, 0x8a,0xf9,0x98,0xc0,0xe4,0x0, 0x0, 0x27,0x8f,0x17,0x9c,0xc1,0x9e,0xe2,0x5f,
+0x18,0x0, 0x5c,0xc6,0x0, 0x5e,0xf7,0x0, 0xd4,0xa6,0xff,0x8d,0x9f,0x3f,0xc0,0xe0,
+0x10,0x1, 0x4c,0xa5,0x8, 0x8c,0xb9,0xef,0x27,0x1, 0x26,0x98,0xe0,0xe4,0x0, 0x1, 
+0x27,0x40,0xc7,0xd4,0x1f,0x67,0x1, 0x1f,0x86,0x1, 0x4c,0xc6,0x8, 0x4f,0x9c,0x8, 
+0x8c,0xd9,0x8f,0x99,0xa, 0xe6,0x0, 0xd4,0x77,0x3, 0xb4,0x8, 0xdc,0x0, 0xd4,0xc3,
+0x3, 0x7c,0x8c,0xf8,0xc3,0x0, 0x10,0x1, 0xef,0x38,0x1, 0x2a,0x1c,0xa7,0x1, 0xcc,
+0xe7,0x0, 0x6, 0xcc,0xa5,0x0, 0x6, 0x8c,0xf9,0x8c,0xb9,0x17,0x87,0x0, 0xb, 0x45,
+0x4, 0xb, 0x27,0x4, 0x17,0x65,0x0, 0xb, 0x7, 0x2, 0xb, 0xa5,0x2, 0xd6,0xe6,0x2, 
+0x3a,0x40,0xf7,0x35,0x42,0xf7,0x1d,0x40,0xc3,0x35,0x43,0x77,0xdb,0x40,0xa6,0xe3,
+0x8c,0xbb,0x40,0xa5,0x23,0x43,0x57,0xd3,0x43,0x26,0xcb,0x42,0xf7,0xeb,0x40,0x7a,
+0xcc,0x40,0xc6,0xc3,0x8c,0xd7,0x8c,0xc5,0x94,0xa1,0x40,0x86,0x23,0xc8,0xa5,0x86,
+0xa0,0x40,0x84,0x28,0x8c,0x64,0x40,0x63,0x38,0xe4,0x0, 0x0, 0x1b,0x5c,0xfb,0x0, 
+0xd4,0xa7,0xfb,0x8c,0x98,0x60,0x85,0x29,0xc2,0xe0,0x10,0x1, 0xf8,0x77,0x1, 0x15,
+0xc2,0xe0,0x10,0x1, 0xf8,0x97,0x1, 0x22,0xc0,0x80,0x10,0x1, 0xec,0xa4,0x1, 0x21,
+0xc0,0xa0,0x10,0x1, 0xec,0xc5,0x1, 0x18,0xc0,0xc0,0x10,0x1, 0xec,0xe6,0x1, 0x1c,
+0xc0,0xe0,0x10,0x1, 0xc, 0xc1,0x2, 0xed,0x7, 0x1, 0x28,0xc0,0xe0,0x10,0x1, 0xec,
+0xc7,0x1, 0x24,0x85,0x29,0x1c,0x21,0xb8,0xd, 0x41,0x40,0xd, 0x61,0x3c,0xd, 0xc1,
+0x30,0x89,0x45,0xc, 0x81,0xc, 0xc, 0xc1,0x8, 0xc, 0xe1,0x4, 0xd, 0x21,0x44,0xd, 
+0x81,0x38,0xd, 0xa1,0x34,0xd, 0xe1,0x2c,0xe, 0x1, 0x28,0xe, 0x21,0x24,0xe, 0x41,
+0x20,0xe, 0x61,0x1c,0xe, 0x81,0x18,0xe, 0xa1,0x14,0xe, 0xc1,0x10,0xe7,0xff,0xad,
+0x4, 0xc, 0xe1,0x6, 0xc, 0x81,0xe, 0x5c,0x87,0x15,0xc8,0xa0,0x7, 0xff,0x49,0x67,
+0x20,0x89,0xc3,0x40,0x85,0x3d,0xc, 0xc1,0xa, 0x40,0xa5,0x5d,0x5c,0xe5,0x1d,0x49,
+0x64,0x58,0x20,0xc4,0x8a,0xc0,0xe0,0x10,0x1, 0x88,0x6b,0xf0,0x87,0x1, 0x15,0x9c,
+0x9f,0x5c,0x84,0x0, 0xe7,0xff,0xfc,0x96,0x5c,0xe3,0x6, 0x5d,0xc7,0x15,0x48,0x63,
+0x70,0x5d,0xc3,0x6, 0xc0,0xe0,0x10,0x1, 0xc0,0xc0,0x10,0x1, 0xc2,0xaf,0xff,0xe1,
+0xee,0x86,0x1, 0x1a,0xe8,0xe7,0x1, 0x20,0xca,0xb5,0xff,0xff,0x8a,0x54,0x9a,0x20,
+0x52,0x0, 0xff,0x99,0xa0,0xc2,0xc0,0x10,0x1, 0xe4,0x0, 0x1, 0x21,0x10,0x85,0x0, 
+0x9c,0xc1,0x8d,0xe4,0x5c,0xc6,0x0, 0x9c,0xa1,0x5d,0xef,0x0, 0xd5,0xa6,0xff,0x8d,
+0x99,0x80,0xe4,0x0, 0x0, 0xcb,0x40,0x8c,0x7c,0xec,0xb6,0x1, 0x1e,0x1e,0xe4,0x1, 
+0xcc,0x84,0x0, 0xa, 0xce,0xf7,0x0, 0xa, 0x8e,0xe5,0x8c,0xa4,0x9c,0xdf,0x8, 0x85,
+0x0, 0x88,0xa7,0xd5,0x86,0x0, 0x3a,0x8, 0xb7,0x0, 0xd5,0x65,0x1, 0xa4,0xd4,0x8b,
+0x1, 0x84,0xc, 0xe1,0x4, 0x42,0x6c,0x7c,0x88,0x6b,0x5e,0x73,0x0, 0x88,0x93,0xe7,
+0xff,0xfb,0x80,0xc, 0xe1,0x6, 0x40,0xc3,0x75,0x40,0x6e,0x1d,0x5c,0x7f,0xf1,0x48,
+0x66,0x18,0xd6,0xa3,0x0, 0x60,0x8a,0xa3,0x8a,0xd, 0xe4,0x0, 0x0, 0xd, 0x8a,0x71,
+0x9d,0x81,0x8a,0x33,0x5d,0x8c,0x0, 0x10,0xd2,0x0, 0xd4,0xcc,0xfc,0xe5,0x9d,0xa1,
+0x9e,0x41,0x5d,0xad,0x0, 0xd1,0xa4,0x0, 0x72,0x88,0xb4,0x99,0xe0,0x98,0xc0,0xe7,
+0xff,0xfe,0xfb,0xc2,0x0, 0x1f,0xe4,0x88,0x6b,0x20,0x0, 0x9b,0xce,0x31,0x0, 0xa, 
+0xc0,0xe0,0x10,0x1, 0xec,0xe7,0x1, 0x1e,0x8e,0x27,0x8, 0x71,0x2, 0x41,0x6b,0x1b,
+0x8, 0x71,0x4, 0x4c,0x63,0x50,0xfc,0x63,0x2, 0x0, 0x8c,0x6b,0x4c,0x63,0x52,0x1a,
+0xa, 0x0, 0xe, 0xc1,0x12,0xe, 0xa1,0x16,0xe, 0x81,0x1a,0xe, 0x61,0x1e,0xe, 0x41,
+0x22,0xe, 0x21,0x26,0xe, 0x1, 0x2a,0xd, 0xe1,0x2e,0xd, 0xc1,0x32,0xd, 0xa1,0x36,
+0xd, 0x81,0x3a,0xd, 0x61,0x3e,0xd, 0x41,0x42,0xd, 0x21,0x46,0x1c,0x21,0x48,0x85,
+0x29,0x1c,0x21,0xe8,0x98,0xff,0xd, 0x41,0x10,0xd, 0x61,0xc, 0x18,0xe1,0x7, 0xd, 
+0x21,0x14,0xd, 0x81,0x8, 0x89,0x44,0x88,0xe6,0x89,0x63,0xca,0xe0,0x7, 0xff,0x88,
+0x65,0xc, 0x84,0x2, 0x8, 0xa6,0x0, 0x98,0xc1,0x42,0xf7,0x2d,0xd4,0x97,0x0, 0x54,
+0x5c,0xa4,0x15,0x48,0xc0,0xa, 0xc, 0x8b,0x2, 0x8, 0xa7,0x6, 0xd4,0x85,0x1, 0x1c,
+0x8, 0xe7,0x2, 0x1c,0xa1,0x7, 0xe7,0xff,0xfc,0x3e,0xc, 0x6b,0x0, 0xd, 0x6a,0x2, 
+0x10,0xa1,0x7, 0x88,0x8b,0xe7,0xff,0xf9,0xde,0x8c,0x6b,0xe4,0x0, 0x0, 0x63,0xc9,
+0x80,0x7, 0xff,0x40,0xac,0x2d,0xd4,0xa4,0x1, 0x4c,0x40,0x8c,0x25,0x8, 0xe7,0x2, 
+0x1c,0xa1,0x7, 0xe7,0xff,0xfb,0xe4,0x41,0x8c,0x1d,0xd, 0x8b,0x0, 0xd, 0x6a,0x2, 
+0x10,0xa1,0x7, 0x88,0x8b,0xe7,0xff,0xf9,0x7e,0x40,0x6b,0x1d,0xc, 0x6a,0x0, 0xd, 
+0x81,0xa, 0xd, 0x61,0xe, 0xd, 0x41,0x12,0xd, 0x21,0x16,0x1c,0x21,0x18,0x85,0x29,
+0x9c,0x30,0xd, 0x41,0x8, 0xd, 0x21,0xc, 0xd, 0x61,0x4, 0xc2,0xe0,0x10,0x1, 0xc1,
+0x40,0x10,0x1, 0xef,0x17,0x6, 0x9a,0xfd,0x4a,0x6, 0x7c,0x23,0x0, 0x72,0x9b,0x1, 
+0xef,0x17,0x6, 0x98,0xc, 0xa, 0x0, 0xd, 0x61,0x6, 0xd, 0x41,0xa, 0xd, 0x21,0xe, 
+0x1c,0x21,0x10,0xe4,0x0, 0x23,0xf1,0xed,0x77,0x6, 0x9a,0xd1,0x61,0xb, 0x9e,0xe, 
+0xea,0x2, 0x22,0xe0,0xca,0xe7,0xff,0xc8,0x22,0xe7,0xff,0xc7,0xfa,0xd0,0x61,0xb, 
+0xe, 0xe7,0xff,0xc8,0xa, 0xe7,0xff,0xc7,0x86,0x20,0x60,0x2c,0x98,0x60,0x98,0x82,
+0xe7,0xff,0xbd,0x54,0xd, 0x61,0x6, 0xd, 0x41,0xa, 0xd, 0x21,0xe, 0x1c,0x21,0x10,
+0xe4,0x0, 0x4e,0x61,0xe, 0xea,0x2, 0x22,0xe4,0xea,0xc2,0xe0,0x10,0x1, 0xeb,0x17,
+0x6, 0x81,0x57,0x18,0x10,0xd3,0x0, 0x9, 0x4a,0xeb,0x17,0x6, 0x81,0xc7,0x18,0xff,
+0xef,0xef,0x17,0x6, 0x81,0xeb,0x17,0x6, 0x81,0xc7,0x18,0xfe,0xff,0xef,0x17,0x6, 
+0x81,0xe7,0xff,0xbc,0x8e,0x98,0x60,0xe7,0xff,0xbc,0x28,0x9a,0xe2,0xe4,0x0, 0x1, 
+0x43,0xe, 0xea,0x2, 0x22,0xe9,0xd2,0xe7,0xff,0xc7,0x3e,0xe7,0xff,0xc6,0x7a,0x20,
+0x65,0x56,0xe7,0xff,0xc7,0x28,0xe7,0xff,0xc6,0xa4,0x20,0x60,0x46,0xe7,0xff,0xbc,
+0x36,0x98,0x60,0xe7,0xff,0xbb,0xd0,0xe4,0x0, 0x0, 0x59,0xe7,0xff,0xbb,0xac,0x5c,
+0x63,0x0, 0x20,0x64,0x3e,0x98,0x82,0x98,0x60,0xe7,0xff,0xbc,0x42,0xe4,0x0, 0x0, 
+0x23,0x98,0x60,0x98,0x81,0xe7,0xff,0xbc,0x2a,0x9a,0xe3,0x20,0x60,0x16,0x9a,0xe4,
+0xe, 0xea,0x0, 0x98,0x60,0xe4,0x0, 0x25,0xf6,0xd0,0x60,0x5, 0x2a,0xc, 0xa, 0x0, 
+0xe4,0x0, 0x1, 0x3d,0xe7,0xff,0xc6,0x64,0xd0,0x61,0x4, 0xb6,0xe7,0xff,0xc5,0xb8,
+0xd0,0x60,0x4, 0x76,0xe4,0x0, 0x0, 0xc7,0xe, 0xea,0x2, 0x22,0xec,0xaa,0xe7,0xff,
+0xc6,0x50,0xe7,0xff,0xc6,0x28,0x20,0x65,0xe2,0xe7,0xff,0xc5,0xde,0x20,0x64,0x3e,
+0xe7,0xff,0xc6,0x2c,0x98,0x61,0x98,0x82,0xe7,0xff,0xbb,0x84,0x9a,0xe4,0xe, 0xea,
+0x0, 0xe4,0x0, 0x0, 0xbb,0xe, 0xea,0x2, 0xd2,0xe4,0x2, 0xb6,0xc2,0xe0,0x10,0x1, 
+0xef,0x17,0x6, 0xca,0xc2,0xe0,0x10,0x1, 0xef,0x17,0x6, 0xd4,0xe4,0x0, 0x72,0xa4,
+0xc2,0xe0,0x10,0x1, 0xea,0xf7,0x6, 0xff,0x56,0xf7,0x80,0x22,0xe0,0x70,0xc, 0xa, 
+0x0, 0xe7,0xff,0xba,0xce,0x98,0x60,0xd, 0x61,0x6, 0xd, 0x41,0xa, 0xd, 0x21,0xe, 
+0x1c,0x21,0x10,0xe7,0xff,0xba,0x51,0xd, 0x6a,0x0, 0xc2,0xf4,0x0, 0x1, 0x1f,0x20,
+0xef,0xca,0xf7,0x7a,0x10,0xf, 0x17,0x2, 0x47,0x18,0xcc,0xf, 0x17,0x0, 0xd, 0x61,
+0x6, 0xd, 0x41,0xa, 0xd, 0x21,0xe, 0x1c,0x21,0x10,0x85,0x29,0x9c,0x30,0xc2,0xf4,
+0x0, 0x1, 0xd, 0x41,0x8, 0xd, 0x61,0x4, 0xd, 0x81,0x0, 0xc1,0x40,0x10,0x1, 0xd, 
+0x21,0xc, 0xec,0xa, 0x6, 0x78,0xc9,0x77,0x78,0xcc,0xc9,0x97,0x79,0xc0,0xa, 0xeb,
+0x1, 0x52,0xf7,0x2, 0xe, 0xeb,0x1, 0xe7,0xff,0xfc,0x32,0xee,0xea,0x6, 0x7a,0x5f,
+0x17,0x4, 0xf, 0xc, 0x1, 0x9e,0xe1,0xee,0xea,0x6, 0x78,0xe7,0xff,0xff,0xc7,0x1c,
+0x21,0xd8,0xd, 0x21,0x24,0xd, 0x41,0x20,0xc1,0x54,0x0, 0x1, 0xca,0xea,0x36,0x0, 
+0x13,0x17,0x0, 0x57,0x18,0xfd,0x1b,0x17,0x0, 0x9a,0xea,0xe, 0xe1,0x0, 0xc2,0xe0,
+0x10,0x1, 0xee,0xf7,0x0, 0x2, 0x94,0xcf,0xc8,0xc6,0x42,0x40,0x40,0xd7,0x31,0x9a,
+0xe2,0xe, 0xe1,0x8, 0x9a,0xe1,0xe, 0xe1,0xc, 0xe, 0xe1,0x1c,0xca,0xe0,0x5, 0x50,
+0xe, 0xe1,0x10,0xca,0xe0,0x79,0xd4,0xe, 0xe1,0x14,0x52,0xe0,0xd0,0xc, 0xc1,0x4, 
+0x98,0x80,0x98,0xaa,0xe, 0xe1,0x18,0x1c,0x61,0x8, 0xc2,0xe0,0x10,0x1, 0xee,0xf7,
+0x0, 0x76,0x86,0xe8,0xc2,0xe0,0x10,0x1, 0xc0,0x60,0x10,0x1, 0xee,0xf7,0x0, 0x7a,
+0xfc,0x63,0x5, 0xe2,0x86,0xe8,0xc2,0xe0,0x10,0x1, 0x98,0x60,0xee,0xf7,0x0, 0x86,
+0x86,0xe8,0xc2,0xe0,0x10,0x1, 0xc3,0x0, 0x10,0x1, 0xff,0x18,0x7, 0xb4,0xef,0x17,
+0x6, 0x94,0xc2,0xe0,0x10,0x1, 0xec,0x17,0x6, 0x85,0xc2,0xe0,0x10,0x1, 0xec,0x17,
+0x6, 0x91,0xc2,0xe0,0x10,0x1, 0xc3,0x0, 0x10,0x1, 0xff,0x18,0x7, 0x34,0xef,0x17,
+0x6, 0x8c,0xc2,0xe0,0x10,0x1, 0xec,0x17,0x6, 0x75,0xc2,0xe0,0x10,0x1, 0xec,0x17,
+0x6, 0x83,0xc2,0xe0,0x10,0x1, 0xec,0x17,0x6, 0x81,0xc2,0xe0,0x10,0x1, 0xec,0x17,
+0x6, 0x77,0xc2,0xe0,0x10,0x1, 0xec,0x17,0x6, 0x9d,0xeb,0x17,0x6, 0x9d,0x53,0x18,
+0x2, 0xef,0x17,0x6, 0x9d,0xc2,0xe0,0x10,0x1, 0xec,0x17,0x6, 0x98,0xc2,0xe0,0x10,
+0x1, 0xec,0x17,0x6, 0x7c,0xca,0xea,0x3c,0xd4,0xb, 0x17,0x1, 0xcb,0x18,0x4, 0x0, 
+0xf, 0x17,0x1, 0xca,0xea,0x3c,0xe0,0xb, 0x17,0x1, 0xcb,0x18,0x4, 0x0, 0xf, 0x17,
+0x1, 0xca,0xea,0x78,0xc0,0xff,0x0, 0x55,0xaa,0xf, 0x17,0x1, 0xfe,0xe0,0x3, 0xe8,
+0xc9,0x4a,0x79,0xe0,0xe, 0xea,0x1, 0xe7,0xff,0xfd,0x2a,0xc2,0xf4,0x0, 0x1, 0xcb,
+0x37,0x74,0xd8,0x18,0x19,0x0, 0xcb,0x17,0x74,0x10,0x5c,0x63,0x0, 0x18,0x78,0x0, 
+0xcb,0x17,0x76,0x30,0x18,0x18,0x0, 0x53,0x40,0x24,0xcb,0x17,0x74,0x0, 0x1b,0x58,
+0x0, 0xcb,0x77,0x74,0x28,0x53,0x0, 0x60,0x1b,0x1b,0x0, 0xcb,0x77,0x74,0x30,0x1b,
+0x1b,0x0, 0xcb,0x77,0x74,0x38,0x1b,0x1b,0x0, 0xcb,0x77,0x74,0x40,0x1b,0x1b,0x0, 
+0xcb,0x17,0x74,0xa8,0x13,0x18,0x0, 0xcb,0x17,0x74,0x78,0x53,0x60,0x15,0x1b,0x78,
+0x0, 0xcb,0x17,0x74,0x70,0x9b,0x62,0x1b,0x78,0x0, 0xca,0xf7,0x74,0x60,0x1b,0x57,
+0x0, 0x98,0x61,0x12,0xf9,0x0, 0x52,0xf7,0x1, 0x1a,0xf9,0x0, 0x85,0x29,0x85,0x29,
+0x85,0x29,0x9a,0xea,0x1c,0x21,0xd8,0xe, 0xe1,0x0, 0xc2,0xe0,0x10,0x1, 0xec,0xd7,
+0x0, 0x2, 0x9a,0xe2,0xe, 0xe1,0x8, 0xca,0xe0,0x1, 0x0, 0xe, 0xe1,0x10,0xc2,0xe0,
+0x10,0x1, 0xfe,0xf7,0x1, 0x6e,0xc6,0xf7,0xff,0xff,0xfe,0xf7,0x79,0x4, 0xe, 0xe1,
+0x14,0xca,0xe0,0x11,0x0, 0x97,0xf, 0xe, 0xe1,0x18,0xcb,0x18,0x42,0x40,0x9a,0xe1,
+0xd, 0x21,0x24,0xe, 0xe1,0x1c,0xc, 0x1, 0xc, 0x1c,0x61,0x8, 0xc2,0xe0,0x10,0x1, 
+0x98,0x81,0xee,0xf7,0x0, 0x76,0x98,0xaa,0x40,0xc6,0xc1,0x86,0xe8,0xd, 0x21,0x26,
+0x1c,0x21,0x28,0x85,0x29,0x9a,0xea,0x1c,0x21,0xd8,0xe, 0xe1,0x0, 0xc2,0xe0,0x10,
+0x1, 0xec,0xd7,0x0, 0x2, 0x9a,0xe2,0xe, 0xe1,0x8, 0x52,0xe0,0x42,0xe, 0xe1,0x10,
+0xc2,0xe0,0x10,0x1, 0xfe,0xf7,0x1, 0x2c,0xc6,0xf7,0xff,0xff,0xfe,0xf7,0x79,0x4, 
+0xe, 0xe1,0x14,0xca,0xe0,0x12,0x0, 0x97,0xf, 0xe, 0xe1,0x18,0xcb,0x18,0x42,0x40,
+0x9a,0xe1,0xd, 0x21,0x24,0xe, 0xe1,0x1c,0xc, 0x1, 0xc, 0x1c,0x61,0x8, 0x40,0xc6,
+0xc1,0xc2,0xe0,0x10,0x1, 0x98,0x81,0xee,0xf7,0x0, 0x76,0x98,0xaa,0x86,0xe8,0xc2,
+0xf4,0x0, 0x1, 0x53,0x20,0x10,0xcb,0x17,0x25,0xc0,0xf, 0x38,0x1, 0xca,0xf7,0x22,
+0x0, 0xc, 0x17,0x1, 0xd, 0x21,0x26,0x1c,0x21,0x28,0x85,0x29,0x9a,0xe0,0x9c,0x38,
+0x8b,0x17,0x4f,0x57,0x8, 0x43,0x63,0xd4,0xb, 0x7b,0x1, 0x5f,0x97,0x0, 0x9e,0xe1,
+0x57,0x37,0x3, 0x4f,0x39,0x8, 0x8f,0x23,0xb, 0x39,0x1, 0x43,0x3b,0xcd,0x5f,0x39,
+0x6, 0x4f,0x79,0xfa,0x47,0x3b,0xce,0x43,0x39,0xdd,0x1f,0x61,0x0, 0x5f,0x39,0x6, 
+0x8f,0x5b,0xf, 0x3a,0x1, 0x1f,0x61,0x8, 0x4f,0x58,0x8, 0x8f,0x5b,0xb, 0x5a,0xf8,
+0x5f,0x59,0x15,0x4b,0x18,0xe0,0xd2,0xe4,0xfd,0xe6,0x88,0x78,0x9c,0x28,0x85,0x29,
+0x1c,0x21,0xe8,0x9a,0xe0,0xc3,0x94,0x0, 0x1, 0xd, 0x41,0x14,0xd, 0x61,0x10,0xd, 
+0x81,0xc, 0xd, 0xa1,0x8, 0x8b,0x57,0xcb,0x9c,0x24,0x14,0x4f,0x77,0x10,0xb, 0x3c,
+0x1, 0x4f,0x39,0xde,0x1f,0x61,0x4, 0x57,0x39,0xf, 0x8f,0x77,0x1b,0x3b,0x0, 0x8f,
+0x59,0xc3,0x14,0x0, 0x1, 0x5f,0x5a,0x0, 0x9e,0xe1,0xd2,0xe4,0xff,0xe, 0xca,0xf8,
+0x7a,0x10,0xff,0xa0,0xfe,0xff,0xf, 0x37,0x2, 0x47,0x39,0xec,0xf, 0x37,0x0, 0xff,
+0x60,0x80,0x0, 0xca,0xf8,0x26,0x18,0xb, 0x37,0x1, 0x47,0x39,0xdd,0x5f,0x39,0x4, 
+0xf, 0x37,0x1, 0xca,0xf8,0x24,0x28,0xcb,0x18,0x7a,0x30,0xb, 0x37,0x1, 0x53,0x39,
+0x1, 0xf, 0x37,0x1, 0xa, 0xf8,0x1, 0xc1,0x14,0x0, 0x1, 0xc6,0xf7,0x1, 0x0, 0x5e,
+0xf7,0x4, 0x22,0xe3,0xc8,0xe, 0xf8,0x2, 0xca,0xf7,0x1, 0x0, 0xe, 0xf8,0x0, 0xca,
+0xe8,0x7a,0x10,0xf, 0x17,0x2, 0xcb,0x18,0x1, 0x0, 0xc0,0xe0,0x10,0x1, 0xf, 0x17,
+0x0, 0xc0,0x80,0x10,0x1, 0x13,0x61,0x4, 0x13,0x81,0x5, 0x13,0x21,0x6, 0x43,0xdb,
+0xe4,0x43,0x0, 0xdd,0xc1,0x40,0x10,0x1, 0x40,0xde,0xcc,0x5f,0x18,0x0, 0x9a,0xe0,
+0xc9,0x8, 0x26,0x0, 0xfc,0xe7,0x4, 0x64,0xfc,0x84,0x8, 0x70,0xfd,0x4a,0xa, 0x48,
+0x41,0x7c,0xcc,0xe4,0x0, 0x0, 0xc9,0x1c,0xb9,0x20,0x5c,0xa5,0x0, 0x20,0x60,0x5e,
+0x4c,0xa5,0x10,0x4f,0x37,0x8, 0x8c,0xa8,0x8f,0x24,0x9, 0x85,0x1, 0xd, 0x99,0x1, 
+0xe4,0x0, 0x0, 0x81,0xd7,0x79,0x0, 0xbd,0x8b,0x38,0xd7,0xd7,0x0, 0x8c,0x43,0x38,
+0xe5,0xd4,0xd7,0x0, 0x3c,0x43,0x38,0x5d,0x5f,0x39,0x0, 0x41,0x97,0x3c,0x8f,0x2a,
+0x4c,0xa5,0x10,0x8c,0xa8,0x9, 0xa5,0x1, 0x10,0xac,0x0, 0x5d,0xad,0x6, 0x4c,0xa5,
+0x8, 0xcd,0xad,0x0, 0xff,0x8c,0xa4,0x11,0x99,0x0, 0x43,0x2d,0x60,0xf, 0x25,0x1, 
+0x9f,0x1, 0x9e,0xe1,0x5f,0x18,0x0, 0x5f,0x37,0x0, 0xd7,0x59,0xfc,0xed,0xc2,0xf4,
+0x0, 0x1, 0xca,0xf7,0x7a,0x10,0xf, 0x17,0x2, 0x47,0xb8,0xec,0xf, 0xb7,0x0, 0xd, 
+0xa1,0xa, 0xd, 0x81,0xe, 0xd, 0x61,0x12,0xd, 0x41,0x16,0x1c,0x21,0x18,0x85,0x29,
+0xc3,0x0, 0x10,0x1, 0xc2,0xf4,0x0, 0x1, 0x1c,0x21,0xa0,0xff,0x18,0x4, 0x79,0xca,
+0xf7,0x23,0x8, 0x13,0x57,0x0, 0x13,0x38,0x0, 0x1f,0x61,0x60,0x8f,0x3b,0x1b,0x59,
+0xa0,0x13,0x57,0x60,0x1b,0x59,0xd0,0x13,0x57,0x1, 0x13,0x38,0x1, 0x8f,0x3b,0x1b,
+0x59,0xa0,0x13,0x57,0x61,0x1b,0x59,0xd0,0x9f,0x2, 0xc3,0x34,0x0, 0x1, 0x9e,0xe4,
+0xcb,0x39,0x23,0x68,0xd6,0xf9,0xfe,0x7e,0xc3,0x14,0x0, 0x1, 0x9a,0xe0,0xcb,0x18,
+0x23,0x8, 0x1f,0x21,0x0, 0x8f,0x37,0x13,0x79,0x1, 0x13,0x59,0x0, 0x4f,0x7b,0x40,
+0x47,0x3b,0xd5,0xf, 0x38,0x1, 0x1f,0x21,0x30,0x8f,0x37,0x13,0x79,0x1, 0x13,0x59,
+0x0, 0x4f,0x7b,0x40,0x47,0x3b,0xd5,0xf, 0x38,0x61,0x9e,0xe2,0x9f,0x4, 0x5e,0xe6,
+0x9, 0x23,0xff,0x45,0x1c,0x21,0x60,0x85,0x29,0xc3,0x14,0x0, 0x1, 0xd0,0x61,0x15,
+0x76,0xc2,0xe0,0x10,0x1, 0xcb,0x20,0x3e,0x3e,0xf2,0xf7,0x6, 0xaf,0x26,0xe8,0x47,
+0x5e,0xe0,0x49,0xcb,0x20,0x13,0x17,0xcb,0x40,0x14,0x16,0x4b,0x3a,0xc8,0xcb,0x18,
+0x22,0x9c,0xf, 0x38,0x1, 0xcb,0x0, 0x3e,0x3e,0x26,0xe8,0x47,0x5e,0xe0,0x49,0xcb,
+0x0, 0x11,0x19,0xcb,0x20,0x12,0x18,0x4b,0x19,0xc0,0xc3,0x34,0x0, 0x1, 0xcb,0x59,
+0x22,0xa0,0xf, 0x1a,0x1, 0xcb,0x0, 0x3e,0x3e,0x26,0xe8,0x47,0x5e,0xe0,0x49,0xcb,
+0x0, 0xd, 0x1d,0xcb,0x40,0xe, 0x1c,0x4b,0x1a,0xc0,0xcb,0x39,0x22,0xa4,0xf, 0x19,
+0x1, 0xcb,0x0, 0x3e,0x3e,0x26,0xe8,0x47,0x5e,0xe0,0x49,0xcb,0x0, 0xb, 0x1f,0xcb,
+0x20,0xc, 0x1e,0x4b,0x19,0xc0,0xc3,0x34,0x0, 0x1, 0xcb,0x59,0x22,0xa8,0xf, 0x1a,
+0x1, 0xcb,0x0, 0x3e,0x3e,0x26,0xe8,0x37,0x5e,0xe0,0x49,0xcb,0x40,0x15,0xa, 0x4b,
+0x1a,0xc0,0xcb,0x39,0x22,0xac,0xf, 0x19,0x1, 0xcb,0x0, 0x3e,0x3e,0x26,0xe8,0x37,
+0x5e,0xe0,0x49,0xcb,0x20,0x3e,0x20,0x4b,0x19,0xc0,0xc3,0x34,0x0, 0x1, 0xcb,0x59,
+0x22,0xb0,0xf, 0x1a,0x1, 0xcb,0x0, 0x3e,0x3e,0x26,0xec,0x47,0x5e,0xe0,0x49,0xcb,
+0x0, 0x14,0x16,0xcb,0x40,0x13,0x17,0x4b,0x1a,0xc0,0xcb,0x39,0x22,0xb4,0xf, 0x19,
+0x1, 0xcb,0x0, 0x3e,0x3e,0x26,0xec,0x47,0x5e,0xe0,0x49,0xcb,0x0, 0x12,0x18,0xcb,
+0x20,0x11,0x19,0x4b,0x19,0xc0,0xc3,0x34,0x0, 0x1, 0xcb,0x59,0x22,0xb8,0xf, 0x1a,
+0x1, 0xcb,0x0, 0x3e,0x3e,0x26,0xec,0x47,0x5e,0xe0,0x49,0xcb,0x0, 0xe, 0x1c,0xcb,
+0x40,0xd, 0x1d,0x4b,0x1a,0xc0,0xcb,0x39,0x22,0xbc,0xf, 0x19,0x1, 0xcb,0x0, 0x3e,
+0x3e,0x26,0xec,0x47,0x5e,0xe0,0x49,0xcb,0x0, 0xc, 0x1e,0xcb,0x20,0xb, 0x1f,0x4b,
+0x19,0xc0,0xc3,0x34,0x0, 0x1, 0xcb,0x59,0x22,0xc0,0xf, 0x1a,0x1, 0xcb,0x0, 0x3e,
+0x3e,0x26,0xec,0x37,0x5e,0xe0,0x41,0xcb,0x40,0x15,0xa, 0x4b,0x1a,0xc0,0xcb,0x39,
+0x22,0xc4,0xf, 0x19,0x1, 0xcb,0x0, 0x3e,0x3e,0x26,0xec,0x37,0x5e,0xe0,0x41,0xcb,
+0x20,0x3e,0x20,0x4b,0x19,0xc0,0xc3,0x34,0x0, 0x1, 0xcb,0x59,0x22,0xc8,0xf, 0x1a,
+0x1, 0xcb,0x0, 0x13,0x17,0x26,0xec,0x47,0x5e,0xe0,0x69,0xcb,0x0, 0x14,0x16,0xcb,
+0x40,0x3e,0x3e,0x4b,0x1a,0xc0,0xcb,0x39,0x22,0xcc,0xf, 0x19,0x1, 0xcb,0x0, 0x11,
+0x19,0x26,0xec,0x47,0x5e,0xe0,0x69,0xcb,0x0, 0x12,0x18,0xcb,0x20,0x3e,0x3e,0x4b,
+0x19,0xc0,0xc3,0x34,0x0, 0x1, 0xcb,0x59,0x22,0xd0,0xf, 0x1a,0x1, 0xcb,0x0, 0xd, 
+0x1d,0x26,0xec,0x47,0x5e,0xe0,0x69,0xcb,0x0, 0xe, 0x1c,0xcb,0x40,0x3e,0x3e,0x4b,
+0x1a,0xc0,0xcb,0x39,0x22,0xd4,0xf, 0x19,0x1, 0xcb,0x20,0xb, 0x1f,0x26,0xec,0x47,
+0x5e,0xe0,0x69,0xcb,0x0, 0xc, 0x1e,0xcb,0x20,0x3e,0x3e,0x4b,0x39,0xc0,0xc3,0x14,
+0x0, 0x1, 0xcb,0x58,0x22,0xd8,0xf, 0x3a,0x1, 0x5e,0xe0,0x69,0xcb,0x20,0x3e,0x3e,
+0xcb,0x58,0x22,0xdc,0xcb,0x60,0x15,0xa, 0x4b,0x99,0xd8,0xf, 0x9a,0x1, 0xcb,0x98,
+0x22,0xe0,0xcb,0x40,0x3e,0x20,0x4b,0xb9,0xd0,0xf, 0xbc,0x1, 0x5e,0xe0,0x73,0xcb,
+0x98,0x22,0xe4,0xcb,0xa0,0x14,0x16,0x4b,0xb9,0xe8,0xf, 0xbc,0x1, 0xcb,0x98,0x22,
+0xe8,0xcb,0xa0,0x12,0x18,0x4b,0xb9,0xe8,0xf, 0xbc,0x1, 0xcb,0x98,0x22,0xec,0xcb,
+0xa0,0xe, 0x1c,0x4b,0xb9,0xe8,0xf, 0xbc,0x1, 0xcb,0x98,0x22,0xf0,0xcb,0xa0,0xc, 
+0x1e,0x4b,0xb9,0xe8,0xf, 0xbc,0x1, 0x4b,0x79,0xd8,0xcb,0x98,0x22,0xf4,0xf, 0x7c,
+0x1, 0x4b,0x39,0xd0,0xcb,0x78,0x22,0xf8,0xf, 0x3b,0x1, 0xcb,0x18,0x24,0x14,0x53,
+0x20,0xb8,0xf, 0x38,0x1, 0x9b,0x0, 0x26,0xe8,0x37,0x5e,0xe0,0x49,0xcb,0x0, 0x5, 
+0x0, 0x4b,0x18,0x0, 0xc3,0x34,0x0, 0x1, 0xcb,0x59,0x23,0xe8,0xf, 0x1a,0x1, 0x9b,
+0x0, 0x26,0xec,0x37,0x5e,0xe0,0x41,0xcb,0x0, 0x5, 0x0, 0x4b,0x18,0x0, 0xcb,0x39,
+0x23,0xec,0xf, 0x19,0x1, 0x5e,0xe0,0x69,0xcb,0x20,0x5, 0x0, 0xc3,0x14,0x0, 0x1, 
+0x4b,0x60,0xc8,0xcb,0x58,0x23,0xf0,0xf, 0x7a,0x1, 0x5e,0xe0,0x73,0xcb,0x18,0x23,
+0xf4,0x4b,0x20,0xc8,0xf, 0x38,0x1, 0xe4,0x0, 0x2, 0x5, 0xca,0xf8,0x22,0x9c,0xff,
+0x20,0x14,0x16,0xf, 0x37,0x1, 0xca,0xf8,0x22,0xa0,0xff,0x20,0x12,0x18,0xf, 0x37,
+0x1, 0xca,0xf8,0x22,0xa4,0xff,0x20,0xe, 0x1c,0xf, 0x37,0x1, 0xca,0xf8,0x22,0xa8,
+0xff,0x20,0xc, 0x1e,0xf, 0x37,0x1, 0xca,0xf8,0x22,0xac,0xff,0x20,0x15,0xa, 0xf, 
+0x37,0x1, 0xca,0xf8,0x22,0xb0,0xff,0x20,0x3e,0x20,0xf, 0x37,0x1, 0xca,0xf8,0x22,
+0xb4,0xff,0x20,0x13,0x17,0xf, 0x37,0x1, 0xca,0xf8,0x22,0xb8,0xff,0x20,0x11,0x19,
+0xf, 0x37,0x1, 0xca,0xf8,0x22,0xbc,0xff,0x20,0xd, 0x1d,0xf, 0x37,0x1, 0xca,0xf8,
+0x22,0xc0,0xff,0x20,0xb, 0x1f,0xf, 0x37,0x1, 0xfe,0xe0,0x3e,0x3e,0xcb,0x38,0x22,
+0xc4,0xe, 0xf9,0x1, 0xcb,0x38,0x22,0xc8,0xe, 0xf9,0x1, 0xcb,0x38,0x22,0xcc,0xe, 
+0xf9,0x1, 0xcb,0x38,0x22,0xd0,0xe, 0xf9,0x1, 0xcb,0x38,0x22,0xd4,0xe, 0xf9,0x1, 
+0xcb,0x38,0x22,0xd8,0xe, 0xf9,0x1, 0xcb,0x38,0x22,0xdc,0xe, 0xf9,0x1, 0xcb,0x38,
+0x22,0xe0,0xe, 0xf9,0x1, 0xcb,0x38,0x22,0xe4,0xe, 0xf9,0x1, 0xcb,0x38,0x22,0xe8,
+0xe, 0xf9,0x1, 0xcb,0x38,0x22,0xec,0xe, 0xf9,0x1, 0xcb,0x38,0x22,0xf0,0xe, 0xf9,
+0x1, 0xcb,0x38,0x22,0xf4,0xe, 0xf9,0x1, 0xcb,0x38,0x22,0xf8,0xe, 0xf9,0x1, 0xca,
+0xf8,0x24,0x14,0x53,0x20,0x8b,0xf, 0x37,0x1, 0xca,0xf8,0x23,0xe8,0xff,0x20,0x5, 
+0x0, 0xf, 0x37,0x1, 0xca,0xf8,0x23,0xec,0xc, 0x17,0x1, 0xca,0xf8,0x23,0xf0,0xc, 
+0x17,0x1, 0xcb,0x18,0x23,0xf4,0xc, 0x18,0x1, 0x85,0x29,0x1c,0x21,0xe0,0xd, 0x21,
+0x1c,0xd, 0x41,0x18,0xd, 0x61,0x14,0xd, 0x81,0x10,0xd, 0xa1,0xc, 0xd, 0xc1,0x8, 
+0xd, 0xe1,0x4, 0xc1,0x54,0x0, 0x1, 0x52,0xe0,0x30,0xc9,0x8a,0x25,0xc0,0xe, 0xec,
+0x1, 0xc9,0x6a,0x24,0x81,0xc1,0xe0,0x10,0x1, 0x1a,0xeb,0x0, 0xc1,0xc0,0x10,0x1, 
+0xec,0x8f,0x0, 0x2, 0xee,0xee,0x0, 0x66,0x50,0x60,0x64,0x95,0xaf,0xc9,0xad,0x42,
+0x40,0x40,0x84,0x69,0x86,0xe8,0x52,0xe0,0x40,0xc9,0x4a,0x22,0x28,0xe, 0xea,0x1, 
+0x52,0xe0,0x44,0x50,0x60,0x1e,0xe, 0xea,0x1, 0xee,0xee,0x0, 0x66,0xec,0x8f,0x0, 
+0x2, 0x40,0x84,0x69,0x86,0xe8,0x52,0xe0,0x10,0xe, 0xec,0x1, 0x18,0xb, 0x0, 0xd, 
+0xe1,0x6, 0xd, 0xc1,0xa, 0xd, 0xa1,0xe, 0xd, 0x81,0x12,0xd, 0x61,0x16,0xd, 0x41,
+0x1a,0xd, 0x21,0x1e,0x1c,0x21,0x20,0x85,0x29,0xfc,0x21,0xff,0x30,0xc0,0x80,0x10,
+0x1, 0xed,0xe1,0x0, 0xb4,0xed,0x21,0x0, 0xcc,0xed,0x41,0x0, 0xc8,0xed,0x61,0x0, 
+0xc4,0xed,0x81,0x0, 0xc0,0xed,0xa1,0x0, 0xbc,0xed,0xc1,0x0, 0xb8,0xee,0x1, 0x0, 
+0xb0,0xee,0x21,0x0, 0xac,0xee,0x41,0x0, 0xa8,0xee,0x61,0x0, 0xa4,0xee,0x81,0x0, 
+0xa0,0xee,0xa1,0x0, 0x9c,0xee,0xc1,0x0, 0x98,0x1c,0x61,0x38,0xfc,0x84,0x5, 0x74,
+0x50,0xa0,0x60,0xe7,0xff,0x96,0x7e,0xc2,0xf4,0x0, 0x1, 0xcb,0x17,0x22,0x28,0xca,
+0xf7,0x3c,0xcc,0x9, 0xf8,0x1, 0x1f,0x1, 0x20,0xb, 0x37,0x1, 0xf, 0x38,0x1, 0x9e,
+0xe4,0xc3,0x34,0x0, 0x1, 0x9f,0x2, 0xcb,0x39,0x3c,0xfc,0xd6,0xf9,0xff,0x76,0x1e,
+0xe1,0x38,0xff,0x1, 0x0, 0x98,0xf, 0x57,0x2, 0xb, 0x37,0x5, 0x4f,0x39,0x10,0x8f,
+0x3a,0xb, 0x57,0x7, 0xf, 0x59,0x1, 0x9e,0xe8,0xd7,0x17,0xff,0x6e,0xc2,0xf4,0x0, 
+0x1, 0xcb,0x17,0x24,0x2c,0xc, 0x18,0x1, 0x9b,0x2c,0xcb,0x17,0x24,0x10,0xf, 0x38,
+0x1, 0x96,0xcf,0xcb,0x17,0x22,0x4, 0x9b,0x3f,0x1d,0x61,0x8, 0x1b,0x38,0x0, 0x99,
+0x40,0x8a,0x17,0xca,0x57,0x22,0x29,0xc2,0x60,0x10,0x1, 0xc2,0x80,0x10,0x1, 0xc2,
+0xa0,0x10,0x1, 0xca,0xd6,0x42,0x40,0x1e,0xea,0x10,0x5e,0xf7,0x0, 0x1a,0xf2,0x0, 
+0xca,0xf0,0x22,0x0, 0x4e,0x2a,0x9, 0x1e,0x31,0x27,0x4e,0x31,0x10,0x8e,0x37,0x56,
+0xea,0x1, 0x53,0x0, 0x3f,0x5e,0xe0,0x1, 0x99,0x80,0xca,0xe0,0x3f,0x0, 0xc9,0xb0,
+0x22,0x8, 0x4a,0xf8,0xb8,0xe, 0xf1,0x1, 0xa, 0xed,0x1, 0x21,0x80,0x2e,0xc6,0xf7,
+0xff,0xfe,0xe4,0x0, 0x0, 0x15,0x5e,0xf7,0x4, 0x52,0xf7,0x1, 0xe, 0xed,0x1, 0x99,
+0xc0,0x98,0x60,0x88,0x83,0xe7,0xff,0xf1,0x76,0xeb,0x13,0x8, 0x71,0x1e,0xe1,0x0, 
+0x8e,0xee,0xec,0x94,0x0, 0x2, 0xf, 0x17,0x1, 0x50,0x60,0x26,0xee,0xf5,0x0, 0x66,
+0x40,0x84,0xb1,0x9d,0xc2,0x86,0xe8,0xd1,0xc8,0xfe,0xd6,0x88,0x61,0xe7,0xff,0xf0,
+0x7e,0x5c,0x63,0x0, 0x4c,0x63,0x8, 0x21,0x80,0x46,0xff,0x81,0x0, 0x98,0x8c,0x7c,
+0xea,0xe3,0xff,0x69,0xe4,0x0, 0x0, 0x29,0xfe,0xe1,0x0, 0x98,0x8c,0x77,0xa, 0xeb,
+0x1, 0xeb,0x3, 0xff,0x69,0x42,0xf8,0xbd,0xe, 0xeb,0x1, 0x9d,0x81,0x5d,0x8c,0x0, 
+0x21,0x8a,0x22,0xc, 0x11,0x1, 0x9d,0x41,0x9d,0x62,0x5d,0x4a,0x0, 0xd1,0x4c,0xfa,
+0x56,0x9a,0xe0,0xb, 0x21,0x8, 0x8b,0x17,0x4f,0x57,0x8, 0x1f,0x81,0x8, 0x5f,0x77,
+0x0, 0x8f,0x5c,0xb, 0x5a,0x0, 0xd7,0x59,0x0, 0x40,0x8b,0x3a,0x8b,0x1b,0x9e,0xe1,
+0xd2,0xec,0xff,0x46,0xfe,0xe1,0x0, 0x98,0x4f,0x18,0x8, 0x8f,0x17,0xc2,0xe0,0x10,
+0x1, 0xeb,0x58,0xff,0x70,0xfe,0xf7,0xa, 0x48,0x9b,0x0, 0x8b,0x37,0x23,0x40,0x54,
+0x1f,0x61,0x8, 0x8f,0x78,0xb, 0x7b,0x0, 0xcf,0x7b,0x0, 0xff,0x43,0x7b,0xd0,0x1b,
+0x79,0x0, 0x13,0x79,0x0, 0xc3,0x60,0x1d,0x4e,0x20,0x0, 0xf9,0x9b,0x1f,0x1b,0x17,
+0x0, 0xc3,0x20,0x10,0x1, 0x9e,0xe1,0xff,0x39,0xa, 0x54,0xd6,0xf9,0xff,0x9e,0xc1,
+0x54,0x0, 0x1, 0x53,0x0, 0x7f,0xca,0xea,0x22,0x4, 0x1b,0x17,0x0, 0xca,0xea,0x22,
+0x8, 0x53,0x0, 0x1e,0x98,0x60,0xf, 0x17,0x1, 0xe7,0xff,0xf3,0x60,0x9a,0xe0,0xc9,
+0x4a,0x3c,0xcc,0xe4,0x0, 0x0, 0x25,0x9f,0x2, 0x9f,0x21,0x5f,0x3, 0x9, 0x23,0xfe,
+0x7d,0xe7,0xff,0xff,0x9d,0x4f,0x37,0x8, 0x1f,0x41,0x20,0x8f,0x2a,0x8f,0x57,0xb, 
+0x5a,0x1, 0xf, 0x59,0x1, 0x9e,0xe2,0xc3,0x14,0x0, 0x1, 0x5e,0xe3,0x9, 0x23,0xff,
+0x9d,0xca,0xf8,0x24,0x2c,0x9b,0x22,0xf, 0x37,0x1, 0xcb,0x18,0x22,0x28,0xd, 0xf8,
+0x1, 0xee,0xc1,0x0, 0x9a,0xee,0xa1,0x0, 0x9e,0xee,0x81,0x0, 0xa2,0xee,0x61,0x0, 
+0xa6,0xee,0x41,0x0, 0xaa,0xee,0x21,0x0, 0xae,0xee,0x1, 0x0, 0xb2,0xed,0xe1,0x0, 
+0xb6,0xed,0xc1,0x0, 0xba,0xed,0xa1,0x0, 0xbe,0xed,0x81,0x0, 0xc2,0xed,0x61,0x0, 
+0xc6,0xed,0x41,0x0, 0xca,0xed,0x21,0x0, 0xce,0xfc,0x21,0x0, 0xd0,0x85,0x29,0x9c,
+0x30,0x9b,0x8, 0xd, 0x21,0xc, 0xd, 0x41,0x8, 0xd, 0x61,0x4, 0xc1,0x40,0x10,0x1, 
+0xfe,0xea,0xa, 0x70,0x1b,0x17,0x4, 0x9b,0x1, 0x1b,0x17,0x1, 0xff,0x0, 0x7, 0xff,
+0xf, 0x17,0x7, 0xf, 0x17,0x9, 0xff,0x0, 0x1, 0x24,0xf, 0x17,0xb, 0x53,0x0, 0x13,
+0xfb,0xa, 0xa, 0x70,0x9b,0x4, 0x51,0x60,0x33,0x1b,0x17,0x14,0xd, 0x77,0xc, 0xd, 
+0x77,0x10,0x98,0x60,0xe4,0x0, 0x15,0xea,0x9b,0xa, 0xc2,0xe0,0x10,0x1, 0xfb,0x17,
+0x6, 0xbc,0xc3,0x0, 0x10,0x1, 0x9a,0xe1,0xee,0xf8,0x6, 0xa8,0xc3,0x0, 0x10,0x1, 
+0xf8,0x18,0x6, 0xdc,0xc3,0x0, 0x10,0x1, 0xf8,0x18,0x6, 0xa3,0xc3,0x0, 0x10,0x1, 
+0xec,0x18,0x6, 0x81,0xc3,0x0, 0x10,0x1, 0xec,0x18,0x6, 0xc8,0xc3,0x0, 0x10,0x1, 
+0xec,0x18,0x6, 0xd4,0xc3,0x0, 0x10,0x1, 0xec,0x18,0x6, 0xff,0xc3,0x0, 0x10,0x1, 
+0xf8,0x18,0x6, 0xc4,0xc3,0x0, 0x10,0x1, 0xf8,0x18,0x6, 0xa1,0xc3,0x0, 0x10,0x1, 
+0xfa,0xf8,0x6, 0xda,0xc3,0x0, 0x10,0x1, 0xfa,0xf8,0x6, 0xb0,0xc3,0x0, 0x10,0x1, 
+0x1f,0x20,0xc8,0xfb,0x38,0x6, 0xae,0xc3,0x0, 0x10,0x1, 0xf8,0x18,0x6, 0xdd,0xc3,
+0x0, 0x10,0x1, 0xf8,0x18,0x6, 0xe0,0xc3,0x0, 0x10,0x1, 0xf8,0x18,0x6, 0xcc,0xc3,
+0x0, 0x10,0x1, 0xf8,0x18,0x6, 0xde,0xc3,0x0, 0x10,0x1, 0xec,0x18,0x6, 0xe3,0xc3,
+0x0, 0x10,0x1, 0x53,0x20,0xeb,0xef,0x38,0x6, 0xad,0xc3,0x0, 0x10,0x1, 0xec,0x18,
+0x6, 0xe8,0xc3,0x0, 0x10,0x1, 0xf8,0x18,0x6, 0xa0,0xc3,0x0, 0x10,0x1, 0xc3,0x20,
+0x10,0x1, 0xf8,0x18,0x6, 0xbd,0x9b,0x2, 0xfb,0x19,0x6, 0xe4,0xc3,0x20,0x10,0x1, 
+0xfb,0x19,0x6, 0xa2,0xc3,0x0, 0x10,0x1, 0xec,0x18,0x6, 0xc0,0xc3,0x0, 0x10,0x1, 
+0xf9,0x78,0x6, 0xdb,0xc3,0x0, 0x10,0x1, 0xf8,0x18,0x6, 0xcf,0xc3,0x0, 0x10,0x1, 
+0xf8,0x18,0x6, 0xcd,0xff,0x18,0x6, 0xcd,0x18,0x18,0x1, 0xc3,0x0, 0x10,0x1, 0xf8,
+0x18,0x6, 0xd8,0xff,0x18,0x6, 0xd8,0x1a,0xf8,0x1, 0xc2,0xe0,0x10,0x1, 0xc0,0x60,
+0x10,0x1, 0xf8,0x17,0x6, 0xf4,0xfc,0x63,0x8, 0x28,0xc2,0xe0,0x10,0x1, 0x98,0x80,
+0xee,0xf7,0x0, 0x7e,0x50,0xa0,0x28,0x86,0xe8,0xc2,0xe0,0x10,0x1, 0xfe,0xf7,0x7, 
+0xec,0x18,0x17,0x4, 0x18,0x17,0x5, 0x18,0x17,0x6, 0x18,0x17,0x20,0x18,0x17,0x21,
+0x18,0x17,0x22,0xc2,0xe0,0x10,0x1, 0xf8,0x17,0x6, 0xdf,0xc2,0xe0,0x10,0x1, 0xf3,
+0x37,0x5, 0x69,0xc2,0xf4,0x0, 0x1, 0xcb,0x17,0x79,0xe9,0xca,0xf7,0x79,0xd0,0x1b,
+0x38,0x0, 0xc3,0x40,0x10,0x1, 0xc3,0x0, 0x10,0x1, 0xc3,0x60,0x10,0x1, 0xf3,0x18,
+0x5, 0x61,0xff,0x5a,0xa, 0x88,0xf, 0x17,0x1, 0xff,0x7b,0x7, 0xc4,0xf3,0x2a,0xa, 
+0x70,0x9a,0xe0,0xe4,0x0, 0x0, 0x29,0x4f,0x17,0x8, 0x9e,0xe1,0x43,0x98,0xd4,0x8f,
+0x1b,0xc, 0x1c,0x1, 0xc, 0x18,0x1, 0x5f,0x17,0x0, 0xd7,0x38,0xff,0x6d,0xc2,0xe0,
+0x10,0x1, 0xeb,0x17,0x4, 0xf9,0x53,0x18,0x4, 0xef,0x17,0x4, 0xf9,0xc3,0x1a,0x0, 
+0x1, 0xff,0x18,0x2c,0xff,0xc2,0xe0,0x10,0x1, 0xef,0x17,0x0, 0xd0,0x53,0x0, 0xc8,
+0xc2,0xe0,0x10,0x1, 0xef,0x17,0x4, 0xfb,0xc3,0x1a,0x0, 0x1, 0xff,0x18,0x2f,0x6e,
+0xc2,0xe0,0x10,0x1, 0xef,0x17,0x0, 0xd4,0xc3,0x1a,0x0, 0x1, 0xff,0x18,0x2e,0x9b,
+0xc2,0xe0,0x10,0x1, 0xef,0x17,0x0, 0xdc,0xc3,0x1a,0x0, 0x1, 0xff,0x18,0x24,0xca,
+0xc2,0xe0,0x10,0x1, 0xef,0x17,0x0, 0xe0,0x53,0x0, 0x19,0xc2,0xe0,0x10,0x1, 0xfb,
+0x17,0x6, 0xf5,0xfe,0xf7,0x6, 0xf5,0x1b,0x17,0x1, 0x1b,0x17,0x3, 0x53,0x0, 0x32,
+0x9b,0x21,0x1b,0x17,0x4, 0x1b,0x17,0x5, 0x1b,0x37,0x2, 0x53,0x0, 0x50,0x1b,0x17,
+0x6, 0x1b,0x17,0x7, 0xc2,0xe0,0x10,0x1, 0xf8,0x17,0xa, 0x64,0xfe,0xf7,0xa, 0x64,
+0x18,0x17,0x1, 0x18,0x17,0x2, 0x18,0x17,0x3, 0xc, 0x17,0x5, 0xc, 0x17,0x7, 0xc, 
+0x17,0xb, 0xc, 0x17,0x9, 0xd, 0x61,0x6, 0xd, 0x41,0xa, 0xd, 0x21,0xe, 0x1c,0x21,
+0x10,0x85,0x29,0xc2,0xf4,0x0, 0x1, 0xcb,0x17,0x79,0x4, 0xc, 0x18,0x1, 0xff,0x20,
+0xea,0x60,0xcb,0x17,0x79,0x0, 0xf, 0x38,0x1, 0xca,0xf7,0x79,0x10,0xff,0x0, 0x3, 
+0x0, 0xf, 0x17,0x1, 0x85,0x29,0xc2,0xf4,0x0, 0x1, 0xca,0xf7,0x24,0x2c,0xb, 0x17,
+0x1, 0xc2,0xe0,0x10,0x1, 0x4f,0x18,0x9, 0x9f,0x1, 0xfb,0x17,0x6, 0xaf,0x85,0x29,
+0xc3,0x14,0x0, 0x1, 0xff,0x40,0x80,0x0, 0xca,0xf8,0x26,0x4, 0xb, 0x37,0x1, 0xc7,
+0x39,0x7f,0x0, 0x47,0x39,0xd5,0x5f,0x39,0x4, 0xf, 0x37,0x1, 0xc3,0x20,0x10,0x1, 
+0xb, 0x57,0x1, 0xff,0x39,0x4, 0xfc,0x13,0x79,0x0, 0x47,0x5a,0xdd,0xf, 0x57,0x1, 
+0xcb,0x58,0x26,0x8, 0xb, 0x79,0x3, 0xc7,0x7b,0xf, 0xff,0xf, 0x7a,0x1, 0xcb,0x58,
+0x26,0xc, 0xb, 0x79,0x5, 0xc7,0x7b,0xf, 0xff,0xf, 0x7a,0x1, 0xcb,0x58,0x26,0x10,
+0xb, 0x79,0x7, 0xc7,0x7b,0x3, 0xff,0xf, 0x7a,0x1, 0xcb,0x18,0x26,0x14,0xb, 0x39,
+0x9, 0xc7,0x39,0x3, 0xff,0xf, 0x38,0x1, 0xb, 0x17,0x1, 0x53,0x18,0x30,0xf, 0x17,
+0x1, 0x85,0x29,0xc2,0xf4,0x0, 0x1, 0xcb,0x17,0x24,0x58,0xb, 0x18,0x1, 0x5f,0x4, 
+0x9b,0x20,0x0, 0x81,0xcb,0x37,0x24,0x34,0x53,0x0, 0x31,0xf, 0x19,0x1, 0xcb,0x37,
+0x24,0x38,0xca,0xf7,0x26,0x24,0xf, 0x19,0x1, 0xff,0x0, 0x3, 0x3, 0xe4,0x0, 0x0, 
+0x99,0x1f,0x38,0xdb,0x5f,0x27,0x1b,0x20,0x0, 0x81,0xcb,0x37,0x24,0x34,0x53,0x0, 
+0x27,0xf, 0x19,0x1, 0xcb,0x37,0x24,0x38,0xca,0xf7,0x26,0x24,0xf, 0x19,0x1, 0xff,
+0x0, 0x2, 0x2, 0xe4,0x0, 0x0, 0x4d,0x1f,0x38,0xa2,0x5f,0x28,0xdb,0x20,0x0, 0x8d,
+0xcb,0x37,0x24,0x34,0x53,0x0, 0x1f,0xf, 0x19,0x1, 0xcb,0x37,0x24,0x38,0xca,0xf7,
+0x26,0x24,0xf, 0x19,0x1, 0xff,0x0, 0x1, 0x1, 0xf, 0x17,0x1, 0xe4,0x0, 0x0, 0x5d,
+0xff,0x18,0xff,0x5b,0x5f,0xa, 0x5b,0x20,0x0, 0x7d,0xcb,0x37,0x24,0x34,0x53,0x0, 
+0x19,0xf, 0x19,0x1, 0xcb,0x37,0x24,0x38,0xf, 0x19,0x1, 0xca,0xf7,0x26,0x24,0xc, 
+0x17,0x1, 0xe4,0x0, 0x0, 0x11,0xe4,0x0, 0x0, 0x1, 0x85,0x29,0x9c,0x38,0xff,0x0, 
+0xa0,0x30,0xd, 0x41,0x0, 0xd, 0x21,0x4, 0xc1,0x54,0x0, 0x1, 0xca,0xea,0x26,0x4, 
+0xf, 0x17,0x1, 0xca,0xea,0x26,0x30,0xff,0x0, 0x10,0x11,0xf, 0x17,0x1, 0xe7,0xff,
+0xfe,0x6a,0xcb,0x2a,0x26,0x1c,0x52,0xe0,0xf4,0xc9,0x4a,0x26,0x20,0xff,0x0, 0x80,
+0x10,0xe, 0xf9,0x1, 0xf, 0xa, 0x1, 0x9e,0xe1,0x5e,0xf7,0x4, 0xc2,0xe0,0x20,0x4, 
+0x23,0xff,0xc5,0xff,0x0, 0xe0,0x30,0xc2,0xf4,0x0, 0x1, 0xca,0xf7,0x26,0x4, 0xf, 
+0x17,0x1, 0xd, 0x41,0x2, 0xd, 0x21,0x6, 0x9c,0x28,0x85,0x29,0x9c,0x38,0xc2,0xf4,
+0x0, 0x1, 0xd, 0x21,0x4, 0xcb,0x17,0x3c,0x48,0xff,0x20,0x5, 0x0, 0xf, 0x38,0x1, 
+0xcb,0x17,0x3c,0x54,0xc, 0x18,0x1, 0xcb,0x17,0x3d,0xcc,0xff,0x20,0x6e,0x0, 0xf, 
+0x38,0x1, 0xcb,0x17,0x3d,0xd0,0x53,0x20,0x71,0xca,0xf7,0x3c,0x50,0xf, 0x38,0x1, 
+0xb, 0x17,0x1, 0xc7,0x18,0xff,0xfe,0xf, 0x17,0x1, 0xe7,0xff,0xe3,0x10,0xe7,0xff,
+0xe3,0xce,0xd, 0x21,0x6, 0x9c,0x28,0xe7,0xff,0xfe,0xab,0x1c,0x21,0xe8,0xd, 0x21,
+0x14,0xd, 0x41,0x10,0xd, 0x61,0xc, 0xe7,0xff,0xf6,0xb0,0x98,0x61,0xe7,0xff,0xb4,
+0xce,0xe7,0xff,0x88,0x96,0x50,0x60,0x26,0xe7,0xff,0xe1,0xc6,0xe7,0xff,0x83,0xfe,
+0xe7,0xff,0xff,0x18,0xe7,0xff,0xfb,0xe4,0x98,0x60,0xc1,0x60,0x10,0x1, 0xee,0xeb,
+0x0, 0x86,0x86,0xe8,0xc1,0x54,0x0, 0x1, 0xca,0xea,0x3c,0x44,0xb, 0x17,0x1, 0xcb,
+0x18,0x10,0x0, 0xf, 0x17,0x1, 0xca,0xea,0x3c,0x4c,0xb, 0x17,0x1, 0xcb,0x18,0x10,
+0x0, 0xf, 0x17,0x1, 0xe7,0xff,0xf0,0xea,0xe7,0xff,0xef,0xc6,0xc9,0x4a,0x24,0x80,
+0xff,0x0, 0xc0,0x0, 0xa, 0xea,0x1, 0x46,0xf7,0xc5,0x5e,0xf7,0x4, 0xe, 0xea,0x1, 
+0xe7,0xff,0xa4,0xc6,0xc3,0x0, 0x10,0x1, 0xee,0xeb,0x0, 0x86,0xec,0x78,0x5, 0x5e,
+0x86,0xe8,0x9b,0x0, 0xca,0xe0,0x48,0x0, 0xc3,0x17,0x0, 0xd, 0xc3,0x17,0x0, 0xf, 
+0x53,0x18,0x4, 0xc3,0x17,0x0, 0xd, 0xc3,0x17,0x0, 0xf, 0x53,0x18,0x8, 0xc3,0x17,
+0x0, 0xd, 0xc2,0xe0,0x1, 0x1f,0x52,0xf7,0x6, 0xc2,0xe0,0x1, 0x1d,0xe7,0xff,0xfa,
+0x8c,0xc3,0x14,0x0, 0x1, 0xca,0xf8,0x7a,0x10,0xcb,0x18,0x7a,0x50,0xf, 0x37,0x2, 
+0xcb,0x39,0x1, 0x0, 0xf, 0x37,0x0, 0x1f,0x40,0xdf,0xf, 0x38,0x2, 0x47,0x39,0xd4,
+0xf, 0x38,0x0, 0xb, 0x17,0x1, 0xc7,0x18,0xff,0xef,0xf, 0x17,0x1, 0xe7,0xff,0xfa,
+0xa6,0xc2,0xe0,0x10,0x1, 0xfe,0xf7,0xa, 0x88,0xe, 0xe1,0x0, 0xc2,0xe0,0x10,0x1, 
+0xfe,0xf7,0x7, 0xc4,0x50,0x60,0x13,0xe, 0xe1,0x4, 0x98,0x82,0xc0,0xa0,0x10,0x1, 
+0xc0,0xc0,0x10,0x1, 0xfc,0xa5,0x3, 0x40,0xfc,0xc6,0x4, 0x64,0xc0,0xe0,0x10,0x1, 
+0xc1,0x0, 0x10,0x1, 0xfc,0xe7,0x4, 0xa9,0xfd,0x8, 0x9, 0x2e,0xe7,0xff,0x95,0x46,
+0xc0,0x60,0x10,0x1, 0xc0,0x80,0x10,0x1, 0xfc,0x63,0x5, 0x34,0xfc,0x84,0x5, 0x6c,
+0xc0,0xa0,0x10,0x1, 0xc0,0xc0,0x10,0x1, 0xfc,0xa5,0x5, 0x4c,0xfc,0xc6,0x5, 0x48,
+0xe7,0xff,0x95,0xde,0xc0,0x7a,0x0, 0x1, 0xc0,0x9a,0x0, 0x1, 0xfc,0x63,0x65,0xd1,
+0xfc,0x84,0x65,0xd7,0xc0,0xba,0x0, 0x1, 0xfc,0xa5,0x65,0xdd,0xe7,0xff,0x96,0x2, 
+0x98,0x61,0xe7,0xff,0x96,0x2a,0x9b,0x2, 0xc2,0xe0,0x10,0x1, 0x98,0x60,0xef,0x17,
+0x5, 0x5c,0xe7,0xff,0xe6,0x2e,0xc2,0xe0,0x10,0x1, 0xe8,0xb7,0x2, 0x83,0xc2,0xe0,
+0x10,0x1, 0xfe,0xf7,0x2, 0x84,0x50,0x60,0x10,0xe, 0xe1,0x0, 0x98,0x88,0xc0,0xc0,
+0x10,0x1, 0xc0,0xe0,0x10,0x1, 0xfc,0xc6,0x4, 0x5c,0xfc,0xe7,0x2, 0xa0,0xc1,0x0, 
+0x10,0x1, 0xfd,0x8, 0x3, 0x54,0xe7,0xff,0xd3,0x64,0xc2,0xe0,0x10,0x1, 0xc3,0x1a,
+0x0, 0x1, 0xff,0x18,0x33,0xb1,0xef,0x17,0x0, 0xd8,0xe7,0xff,0x95,0xfc,0xd, 0x21,
+0x16,0xd, 0x61,0xe, 0xd, 0x41,0x12,0x98,0x60,0x1c,0x21,0x18,0xe7,0xff,0x95,0x7f,
+0x9c,0x30,0xc2,0xe0,0x10,0x1, 0xd, 0x21,0xc, 0xea,0xf7,0x0, 0x4b,0xd, 0x41,0x8, 
+0xd, 0x61,0x4, 0xd, 0x81,0x0, 0x5e,0xf7,0x0, 0xc2,0xe0,0x14,0x4, 0x20,0x0, 0x25,
+0x98,0x60,0xe4,0x0, 0x2, 0x51,0xc2,0xe0,0x10,0x1, 0xc3,0x80,0x10,0x1, 0xf3,0x77,
+0xa, 0x70,0xc3,0xa0,0x10,0x1, 0xc3,0x20,0x10,0x1, 0x9b,0x0, 0xff,0x9c,0x7, 0xc4,
+0xff,0xbd,0xa, 0x88,0xfe,0xf9,0x6, 0xbc,0xe4,0x0, 0x0, 0x6f,0x20,0x60,0x32,0x4f,
+0x58,0x8, 0x8f,0x5d,0xe4,0x0, 0x0, 0x19,0x20,0x64,0x96,0x4f,0x58,0x8, 0x8f,0x5c,
+0xb, 0x5a,0x0, 0xc3,0x5e,0x4a,0x68,0x20,0x3, 0x75,0xc3,0x5f,0x44,0x6c,0x20,0x0, 
+0x3d,0x13,0x17,0x0, 0x9f,0x1, 0x1b,0x17,0x0, 0xe4,0x0, 0x0, 0x21,0x9f,0x1, 0x5f,
+0x58,0x0, 0xd7,0x7a,0xfe,0x55,0x18,0x17,0x0, 0x9b,0x0, 0x13,0x57,0x0, 0xd3,0x49,
+0x0, 0x3d,0x23,0x2, 0x38,0x18,0x17,0x0, 0x98,0x60,0xc2,0xe0,0x10,0x1, 0xee,0xf7,
+0x0, 0x86,0x86,0xe8,0xc2,0xe0,0x1, 0x1f,0x9b,0x19,0x46,0xf7,0xc4,0xc2,0xe0,0x1, 
+0x1d,0xc1,0x74,0x0, 0x1, 0xc9,0x4b,0x7a,0x10,0xe, 0xea,0x2, 0xca,0xf7,0x1, 0x0, 
+0xe, 0xea,0x0, 0xc9,0x6b,0x7a,0x30,0xc9,0x80,0x1, 0x0, 0xd, 0x8b,0x0, 0xe7,0xff,
+0xa0,0x6a,0xe, 0xea,0x2, 0xca,0xf7,0x1, 0x0, 0xe, 0xea,0x0, 0xd, 0x8b,0x0, 0xc2,
+0xe0,0x1, 0x1f,0x52,0xf7,0x6, 0xc2,0xe0,0x1, 0x1d,0xc3,0x0, 0x10,0x1, 0xc2,0xe0,
+0x10,0x1, 0xec,0x78,0x5, 0x5e,0xee,0xf7,0x0, 0x86,0x86,0xe8,0xc2,0xe0,0x10,0x1, 
+0xeb,0x17,0x6, 0x81,0xc7,0x18,0xff,0xef,0xef,0x17,0x6, 0x81,0xeb,0x17,0x6, 0x81,
+0xc7,0x18,0xfe,0xff,0xef,0x17,0x6, 0x81,0xe7,0xff,0x93,0xa0,0x98,0x60,0xe7,0xff,
+0x93,0x3a,0xc2,0xe0,0x10,0x1, 0x9b,0x3, 0x98,0x60,0xec,0x17,0x6, 0x7c,0xc2,0xe0,
+0x10,0x1, 0xfb,0x17,0x6, 0xdf,0xe4,0x0, 0x19,0x66,0xe4,0x0, 0x3, 0x50,0x98,0x61,
+0xe4,0x0, 0x0, 0x15,0x9b,0x1, 0xe7,0xff,0xfe,0x8b,0xd, 0x81,0x2, 0xd, 0x61,0x6, 
+0xd, 0x41,0xa, 0xd, 0x21,0xe, 0x1c,0x21,0x10,0x85,0x29,0x9c,0x38,0xd, 0x41,0x0, 
+0xd, 0x21,0x4, 0xc1,0x54,0x0, 0x1, 0xcb,0xa, 0x7a,0x10,0xf, 0x38,0x2, 0x53,0x39,
+0x10,0xf, 0x38,0x0, 0xc3,0x0, 0x10,0x1, 0xef,0x38,0x5, 0x66,0xd7,0x23,0x0, 0xaa,
+0xec,0x78,0x5, 0x64,0x20,0x60,0x14,0x98,0x61,0xe7,0xff,0xe2,0x60,0xe7,0xff,0xe1,
+0x46,0xca,0xea,0x26,0x18,0xff,0x20,0x80,0x0, 0xb, 0x17,0x1, 0x47,0x18,0xcd,0x5f,
+0x18,0x4, 0xf, 0x17,0x1, 0xca,0xea,0x24,0x28,0xb, 0x17,0x1, 0x53,0x18,0x1, 0xf, 
+0x17,0x1, 0xff,0x0, 0xfe,0xff,0xc9,0x4a,0x7a,0x10,0xe, 0xea,0x2, 0x46,0xf7,0xc4,
+0xc3,0x0, 0x10,0x1, 0xe, 0xea,0x0, 0xec,0x78,0x5, 0x5e,0xc2,0xe0,0x10,0x1, 0xee,
+0xf7,0x0, 0x86,0x86,0xe8,0xd, 0x21,0x6, 0xd, 0x41,0x2, 0x9c,0x28,0x85,0x29,0x9a,
+0xe0,0x8b,0x17,0xe4,0x0, 0x0, 0x1d,0x43,0x23,0xbc,0x9e,0xe1,0x13,0x39,0x0, 0x8f,
+0x19,0xd4,0x97,0xff,0xb4,0x40,0x60,0xc5,0x85,0x29,0x9c,0x38,0xd, 0x21,0x4, 0xd, 
+0x41,0x0, 0xc1,0x54,0x0, 0x1, 0xc9,0x4a,0x36,0x0, 0x12,0xea,0x0, 0x56,0xf7,0xfd,
+0x1a,0xea,0x0, 0x12,0xea,0x0, 0x52,0xf7,0x2, 0x97,0xf, 0x1a,0xea,0x0, 0xcb,0x18,
+0x42,0x40,0xc2,0xe0,0x10,0x1, 0x98,0x6f,0xec,0x97,0x0, 0x2, 0xc2,0xe0,0x10,0x1, 
+0x40,0x84,0xc1,0xee,0xf7,0x0, 0x66,0x86,0xe8,0x12,0xea,0x0, 0x56,0xf7,0xfd,0x1a,
+0xea,0x0, 0xd, 0x41,0x2, 0xd, 0x21,0x6, 0x9c,0x28,0x85,0x29,0xc2,0xe0,0x10,0x1, 
+0xfe,0xf7,0x7, 0xec,0xb, 0x77,0x16,0xb, 0x37,0x18,0xf, 0x77,0x19,0xf, 0x37,0x17,
+0x13,0x17,0x0, 0x27,0x4, 0x7d,0xb, 0x57,0x32,0xb, 0x17,0x34,0xf, 0x57,0x35,0xf, 
+0x17,0x33,0xd7,0x19,0x0, 0x84,0xf, 0x37,0x33,0xf, 0x17,0x17,0xf, 0x77,0x35,0xf, 
+0x57,0x19,0x85,0x29,0xc2,0xe0,0x10,0x1, 0xcb,0x0, 0x7, 0xff,0xfe,0xf7,0x7, 0xec,
+0xb, 0x37,0x17,0x43,0x38,0xcd,0xf, 0x37,0x17,0x13,0x37,0x0, 0x27,0x24,0x55,0xb, 
+0x37,0x33,0x43,0x18,0xcd,0xf, 0x17,0x33,0xb, 0x17,0x1b,0x43,0x0, 0xc5,0xf, 0x17,
+0x1b,0x85,0x29,0xc2,0xe0,0x10,0x1, 0xcb,0x0, 0x7, 0xff,0xfe,0xf7,0x7, 0xec,0xb, 
+0x37,0x19,0x43,0x38,0xcd,0xf, 0x37,0x19,0x13,0x37,0x0, 0x27,0x24,0x55,0xb, 0x37,
+0x35,0x43,0x18,0xcd,0xf, 0x17,0x35,0xb, 0x17,0x1d,0x43,0x0, 0xc5,0xf, 0x17,0x1d,
+0x85,0x29,0xc2,0xe0,0x10,0x1, 0xf8,0x17,0x6, 0xa0,0xc2,0xf4,0x0, 0x1, 0xca,0xf7,
+0x79,0xe9,0x13,0x17,0x0, 0xc2,0xe0,0x10,0x1, 0xfb,0x17,0x5, 0x69,0xf2,0xf7,0x5, 
+0x69,0x5e,0xe0,0x9, 0xc2,0xe0,0x10,0x1, 0xfe,0xf7,0x7, 0x34,0xc3,0x60,0x10,0x1, 
+0xc3,0x0, 0x10,0x1, 0xee,0xfb,0x6, 0x8c,0xff,0x18,0x6, 0x9c,0xa, 0xf8,0x1, 0x53,
+0x40,0x80,0x56,0xf7,0x2, 0x4b,0x5a,0x42,0x22,0xe1,0x8, 0xc3,0x20,0x10,0x1, 0xc3,
+0xc0,0x10,0x1, 0xff,0x39,0x6, 0x74,0x9a,0xe0,0xc, 0x19,0x1, 0xff,0xde,0x9, 0xc6,
+0x43,0x97,0xf4,0x13,0xbc,0x0, 0xef,0x9b,0x6, 0x8e,0x8f,0x97,0x1b,0xbc,0x0, 0x9e,
+0xe1,0x5f,0x97,0x4, 0xd7,0x5c,0xff,0x65,0xa, 0xf9,0x1, 0x8f,0x57,0xa, 0xf8,0x1, 
+0xf, 0x59,0x1, 0xc6,0xf7,0xff,0xfd,0xe, 0xf8,0x1, 0xe7,0xff,0xfd,0x21,0xc3,0x0, 
+0x10,0x1, 0xff,0x58,0x9, 0xc6,0x8a,0xfa,0x8b,0x3a,0x18,0x17,0x0, 0xc3,0x0, 0x10,
+0x1, 0x9e,0xe1,0xff,0x18,0xa, 0x48,0xd6,0xf8,0xff,0x9e,0x52,0xe0,0x62,0x1f,0x19,
+0x1f,0x1a,0xfa,0x0, 0xc2,0xe0,0x10,0x1, 0xfe,0xf7,0x9, 0xc7,0x18,0x17,0x0, 0x9e,
+0xe1,0xd7,0x17,0xff,0xde,0xc2,0xe0,0x10,0x1, 0x1f,0x0, 0x9e,0xfb,0x17,0x9, 0xe5,
+0xc2,0xf4,0x0, 0x1, 0xca,0xf7,0x79,0xd0,0xa, 0xf7,0x1, 0x5e,0xf7,0x0, 0xc3,0x20,
+0x10,0x1, 0xfa,0xf9,0x5, 0x61,0xc2,0xe0,0x10,0x1, 0xc3,0x80,0x10,0x1, 0xf3,0xb7,
+0xa, 0x70,0x9b,0x0, 0xc2,0xe0,0x10,0x1, 0xc1,0x0, 0x10,0x1, 0xc0,0x60,0x10,0x1, 
+0xc0,0x80,0x10,0x1, 0xc0,0xa0,0x10,0x1, 0xfe,0xf7,0x9, 0xe6,0xff,0x9c,0x8, 0xbc,
+0x8b,0x78,0x8b,0xd9,0xfd,0x8, 0xa, 0x88,0xfc,0x63,0x9, 0x8, 0xfc,0x84,0x7, 0xc4,
+0xfc,0xa5,0x8, 0x70,0xe4,0x0, 0x0, 0xb7,0xf3,0x3e,0x5, 0x61,0x23,0x28,0x88,0x27,
+0x28,0x2b,0x23,0x24,0x3a,0xe4,0x0, 0x0, 0x25,0x23,0x2c,0x70,0xd3,0x24,0x1, 0x4a,
+0x43,0x38,0x1c,0xe4,0x0, 0x0, 0x2b,0x43,0x38,0x2c,0xe4,0x0, 0x0, 0x1d,0x43,0x38,
+0x44,0xe4,0x0, 0x0, 0xf, 0x43,0x38,0x24,0x14,0xd9,0x1, 0x18,0xd7,0x0, 0xb, 0x39,
+0x1, 0xe4,0x0, 0x0, 0x21,0xf, 0x3c,0x2, 0x4c,0xd9,0x82,0x4f,0x39,0x42,0x18,0xd7,
+0x0, 0x1b,0x37,0x1, 0x9f,0x61,0x9f,0x2, 0x5f,0x7b,0x4, 0x9e,0xe2,0x9f,0x84,0xd7,
+0xbb,0xfd,0x4d,0xc2,0xf4,0x0, 0x1, 0x1f,0x20,0xdf,0xca,0xf7,0x7a,0x50,0xf, 0x17,
+0x2, 0x47,0x18,0xcc,0xf, 0x17,0x0, 0xc3,0x0, 0x10,0x1, 0xff,0x18,0x6, 0x9c,0xa, 
+0xf8,0x1, 0x56,0xf7,0x2, 0x22,0xe1,0x0, 0xc3,0x20,0x10,0x1, 0x9a,0xe0,0xff,0x39,
+0x6, 0x74,0xc3,0xa0,0x10,0x1, 0xc, 0x19,0x1, 0x43,0x77,0xd4,0x13,0x9b,0x0, 0xef,
+0x7d,0x6, 0x8e,0x8f,0x77,0x1b,0x9b,0x0, 0x9e,0xe1,0xc2,0xe0,0x10,0x4, 0x23,0xff,
+0xad,0xa, 0xf9,0x1, 0xfe,0xf7,0x0, 0x80,0xe, 0xf9,0x1, 0xa, 0xf8,0x1, 0xc6,0xf7,
+0xff,0xfd,0xe, 0xf8,0x1, 0xe7,0xff,0xfa,0x6b,0xc3,0x40,0x10,0x1, 0xc3,0x60,0x10,
+0x1, 0xc3,0x20,0x10,0x1, 0xc2,0xe0,0x10,0x1, 0xff,0x5a,0xa, 0x70,0xff,0x7b,0x8, 
+0x70,0xff,0x39,0x8, 0xbc,0xfe,0xf7,0x6, 0xf5,0x20,0x68,0x36,0x13,0x17,0x0, 0x12,
+0xf7,0x1, 0xe4,0x0, 0x1, 0x2b,0x20,0x6c,0x36,0x13,0x17,0x2, 0x12,0xf7,0x3, 0xe4,
+0x0, 0x1, 0x11,0xd0,0x64,0x0, 0x76,0x13,0x17,0x4, 0x12,0xf7,0x5, 0xe4,0x0, 0x0, 
+0xf5,0xd0,0x65,0x0, 0x76,0x13,0x17,0x6, 0x12,0xf7,0x7, 0xe4,0x0, 0x0, 0xd9,0x20,
+0x60,0x86,0x13,0x1a,0x0, 0x9a,0xe0,0xe4,0x0, 0x0, 0x1d,0x4f,0x57,0x10,0x9e,0xe1,
+0x8f,0x59,0xc, 0x1a,0x0, 0x5f,0x57,0x0, 0xd7,0x1a,0xff,0x9d,0xe4,0x0, 0x1, 0x6f,
+0x9a,0xe0,0x8b,0x17,0x20,0x64,0xaa,0x13,0x1a,0x0, 0xe4,0x0, 0x0, 0x33,0x4f,0x57,
+0x10,0x4f,0x97,0x8, 0x8f,0x59,0x8f,0x9b,0x9e,0xe1,0xb, 0x9c,0x0, 0x4f,0x9c,0x40,
+0xf, 0x9a,0x0, 0x5f,0x57,0x0, 0xd7,0x1a,0xff,0x45,0xe4,0x0, 0x1, 0x13,0xd0,0x66,
+0x4, 0x2a,0xd0,0x67,0x0, 0xae,0xc3,0x80,0x10,0x1, 0x13,0x5a,0x0, 0x9a,0xe0,0xff,
+0x9c,0x9, 0x8, 0xe4,0x0, 0x0, 0x5f,0x10,0x9a,0x0, 0xcb,0xa0,0x3, 0xe8,0x9b,0x40,
+0xe4,0x0, 0x0, 0xb9,0x4f,0x17,0x8, 0x4f,0xd7,0x10,0x43,0xb8,0xe4,0x8f,0xd9,0x8f,
+0x1b,0xf, 0xde,0x2, 0xb, 0x18,0x1, 0x4f,0xde,0x42,0x9e,0xe1,0x43,0x18,0xf5,0xf, 
+0x1d,0x1, 0x5f,0x17,0x0, 0xd7,0x58,0xfe,0xfd,0xe4,0x0, 0x0, 0x75,0x4f,0x9a,0x8, 
+0x8f,0x9b,0x8, 0x7c,0x0, 0xf, 0x99,0x2, 0x4c,0x63,0x40,0xcf,0xdc,0x3, 0xe8,0x41,
+0x3, 0xe5,0xd7,0x83,0x0, 0x5c,0x41,0x18,0x43,0xe4,0x0, 0x0, 0xf, 0x41,0x17,0x43,
+0x8f,0xc8,0x9f,0x41,0x43,0xde,0xe8,0xf, 0xd9,0x0, 0x9f,0x24,0x5f,0x9a,0x0, 0xd4,
+0x9c,0xfe,0x75,0x85,0x29,0x5c,0x63,0x0, 0x20,0x6c,0x68,0x20,0x68,0x88,0x5c,0x60,
+0x21,0xcb,0x20,0x7f,0xff,0x1f,0x0, 0xbe,0x4b,0x39,0x0, 0x4b,0x18,0x0, 0xe4,0x0, 
+0x0, 0x2b,0x53,0x20,0x84,0xff,0x0, 0xff,0x7c,0xe4,0x0, 0x0, 0x15,0x53,0x20,0x42,
+0x1f,0x0, 0xbe,0xc2,0xe0,0x10,0x1, 0xc3,0x80,0x10,0x1, 0xf3,0x77,0xa, 0x70,0xff,
+0x9c,0x9, 0x8, 0x9a,0xe0,0xe4,0x0, 0x0, 0x2d,0x4f,0x57,0x8, 0x8f,0x5c,0xb, 0x5a,
+0x0, 0xd7,0x1a,0x0, 0xbc,0x9e,0xe1,0xd7,0x59,0x0, 0x8c,0x5f,0x57,0x0, 0xd7,0x7a,
+0xff,0x5d,0x98,0x61,0xe4,0x0, 0x0, 0xd, 0x98,0x60,0x85,0x29,0x1c,0x21,0xe8,0xd, 
+0x41,0x14,0xd, 0x61,0x10,0xd, 0x81,0xc, 0xd, 0xa1,0x8, 0xd, 0xc1,0x4, 0xd, 0xe1,
+0x0, 0xc2,0xe0,0x10,0x1, 0xc3,0x0, 0x10,0x1, 0xfe,0xf7,0x7, 0xec,0xc3,0x80,0x10,
+0x1, 0xc3,0x20,0x10,0x1, 0x13,0xd7,0x0, 0xff,0x18,0x5, 0x3a,0xff,0x9c,0x6, 0xd8,
+0xff,0x39,0x6, 0xb4,0xd3,0xc1,0xf, 0x19,0xb, 0xb9,0x4, 0xc3,0xaf,0xff,0xe0,0x20,
+0x5, 0xb1,0xb, 0x59,0x6, 0x9, 0x59,0x0, 0xb, 0x79,0x2, 0x9, 0x97,0x34,0x9, 0xb7,
+0x32,0x43,0xcc,0xd5,0x41,0xd, 0xed,0xb, 0x37,0x18,0x9, 0x77,0x16,0x43,0x1b,0xcd,
+0x40,0xcb,0x55,0x43,0x8, 0xc3,0x41,0xde,0x33,0x8f,0xe, 0x23,0x1, 0x84,0x41,0xfd,
+0x55,0x41,0xdb,0xd5,0x40,0xbe,0x7b,0x40,0x68,0x73,0x8c,0xa3,0x20,0xa0,0x40,0x24,
+0xa0,0x28,0x27,0x0, 0x2a,0xe4,0x0, 0x0, 0x8f,0x27,0x1d,0xe, 0x4c,0x98,0xfa,0x44,
+0x64,0xc6,0x40,0x63,0x25,0x4c,0x85,0xfa,0x44,0xa4,0x2e,0x40,0x85,0x25,0xd4,0x83,
+0x1, 0x74,0x40,0x99,0xdd,0x41,0xc6,0x73,0x40,0x84,0x7b,0x8c,0x8e,0x20,0x80,0x40,
+0x24,0x80,0x28,0x27,0x0, 0x2a,0xe4,0x0, 0x0, 0x2d,0x27,0x1c,0x4a,0x4f,0x4, 0xfa,
+0x44,0x98,0x26,0x40,0x84,0xc5,0x9b,0x1, 0xd4,0x83,0x5, 0xd8,0x40,0x6c,0xdd,0x40,
+0x8d,0x55,0x40,0xab,0xed,0x43,0x1a,0xcd,0x41,0xc3,0x2b,0x43,0x4, 0xc3,0x8f,0xe, 
+0x23,0x1, 0x84,0x43,0xaa,0xed,0x41,0xda,0xdd,0x41,0xe3,0xeb,0x41,0x44,0x73,0x8d,
+0x4f,0x21,0x40,0x40,0x25,0x40,0x28,0x27,0x0, 0x2a,0xe4,0x0, 0x0, 0x8f,0x27,0x1d,
+0xe, 0x4d,0xf8,0xfa,0x44,0xef,0xc6,0x40,0xe7,0x7d,0x4d,0xea,0xfa,0x45,0x4f,0x56,
+0x41,0xea,0x7d,0xd5,0xe7,0x1, 0x74,0x41,0x59,0xd5,0x41,0xc5,0x73,0x43,0xaa,0xeb,
+0x8f,0xae,0x23,0xa0,0x40,0x27,0xa0,0x28,0x27,0x0, 0x2a,0xe4,0x0, 0x0, 0x2d,0x27,
+0x1c,0x4a,0x4f,0x1d,0xfa,0x47,0xb8,0xee,0x43,0xbd,0xc5,0x9b,0x0, 0xd7,0xa7,0x2, 
+0x30,0x43,0x79,0xdd,0x40,0xc6,0x33,0x43,0x7b,0xdb,0x43,0x59,0xd5,0x40,0xa5,0x2b,
+0x43,0x5a,0xd3,0x8f,0x66,0x8c,0xba,0x9b,0x0, 0xd4,0xbb,0x0, 0x45,0x8b,0x65,0x9b,
+0x1, 0x40,0x84,0x23,0x40,0x63,0x1b,0x8c,0x64,0xd4,0x7b,0x0, 0x4d,0x8b,0x63,0x53,
+0x0, 0x10,0x41,0x8, 0x43,0x43,0xde,0xf3,0x53,0x40,0x11,0x8f,0xc8,0x5f,0xdb,0x1f,
+0x4b,0x18,0xd0,0x4f,0x58,0x21,0x47,0x18,0xd6,0x57,0x18,0xf, 0x23,0x0, 0x3c,0xd, 
+0xb7,0x17,0xd, 0x97,0x19,0xd, 0x77,0x33,0xf, 0x37,0x35,0x13,0x1c,0x0, 0x1b,0x17,
+0x10,0x13,0x1c,0x1, 0x1b,0x17,0x2c,0xe4,0x0, 0x2, 0x6d,0xb, 0x59,0x0, 0xc3,0x4f,
+0xff,0xe0,0x23,0xff,0xa5,0x9, 0xb9,0x2, 0x13,0x78,0x0, 0x9, 0x17,0x16,0x9f,0x61,
+0x41,0x88,0xd5,0x5f,0x7b,0x0, 0xb, 0xb7,0x18,0x9, 0x57,0x32,0x41,0x7d,0x6d,0x43,
+0x4a,0xd5,0xb, 0x37,0x34,0x43,0x5a,0xd3,0x41,0xb9,0x6d,0x1b,0x78,0x0, 0x41,0xad,
+0x6b,0x8f,0x4d,0x41,0x8c,0x63,0x41,0x6b,0x5b,0x8d,0x6c,0x5f,0x4b,0x1f,0x53,0x40,
+0x10,0x4b,0x40,0xd0,0x23,0x40,0x3c,0xd, 0x57,0x17,0xf, 0x37,0x19,0xd, 0x17,0x33,
+0xf, 0xb7,0x35,0xd3,0x64,0x0, 0x6d,0x9f,0xdf,0x1b,0xd7,0x0, 0xe7,0xff,0xff,0x1f,
+0x18,0x18,0x0, 0xe7,0xff,0xff,0x11,0x23,0xc6,0x12,0x18,0x18,0x0, 0xb, 0x59,0x4, 
+0xc3,0x4f,0xff,0xe0,0x23,0xfd,0xdd,0x9, 0x57,0x16,0x9, 0x17,0x18,0xb, 0x79,0x0, 
+0xb, 0x19,0x2, 0x43,0x6a,0xdd,0x43,0x8, 0xc5,0x43,0x7b,0xdb,0x43,0x18,0xc3,0x41,
+0x4a,0xd5,0x41,0x7b,0xc4,0xb, 0xb9,0x6, 0x41,0x4a,0x53,0x41,0x8, 0xed,0xc3,0x60,
+0x10,0x1, 0x41,0x8, 0x43,0xc3,0x0, 0x10,0x1, 0x8d,0xa, 0xff,0x7b,0x6, 0xec,0xff,
+0x18,0xa, 0x54,0xd5,0xb, 0x2, 0xd5,0xf, 0x59,0x1, 0xf, 0xb9,0x3, 0xff,0x40,0x7f,
+0xff,0xf, 0x59,0x5, 0xf, 0x59,0x7, 0xb, 0x3b,0x5, 0xf, 0x3b,0x1, 0xb, 0x3b,0x7, 
+0xf, 0x3b,0x3, 0xb, 0x38,0x9, 0xf, 0x38,0x1, 0xb, 0x38,0xb, 0xf, 0x38,0x3, 0xb, 
+0x38,0xd, 0xf, 0x58,0x9, 0xf, 0x38,0x5, 0xf, 0x58,0xb, 0xb, 0x38,0xf, 0xf, 0x58,
+0xd, 0xf, 0x38,0x7, 0xf, 0x58,0xf, 0xf, 0x5b,0x5, 0x13,0x1c,0x1, 0xf, 0x5b,0x7, 
+0x43,0xde,0xc5,0x1b,0x1c,0x0, 0x1b,0xdc,0x1, 0xe7,0xff,0xfd,0xc5,0xff,0x40,0x7f,
+0xff,0xf, 0x59,0x5, 0xf, 0x59,0x7, 0xf, 0x5b,0x5, 0xf, 0x5b,0x7, 0xf, 0x58,0x9, 
+0xf, 0x58,0xb, 0xf, 0x58,0xd, 0xf, 0x58,0xf, 0xe7,0xff,0xfd,0x85,0xd, 0xe1,0x2, 
+0xd, 0xc1,0x6, 0xd, 0xa1,0xa, 0xd, 0x81,0xe, 0xd, 0x61,0x12,0xd, 0x41,0x16,0x1c,
+0x21,0x18,0x85,0x29,0xc3,0x0, 0x10,0x1, 0xff,0x18,0x6, 0xb4,0xfe,0xe0,0x7f,0xff,
+0xe, 0xf8,0x1, 0xe, 0xf8,0x3, 0xe, 0xf8,0x5, 0xe, 0xf8,0x7, 0x9b,0x1, 0xc3,0x20,
+0x10,0x1, 0xff,0x39,0x6, 0xd8,0x1b,0x19,0x1, 0xc3,0x0, 0x10,0x1, 0xff,0x18,0x6, 
+0xec,0xe, 0xf8,0x1, 0xe, 0xf8,0x3, 0xe, 0xf8,0x5, 0xe, 0xf8,0x7, 0xc3,0x0, 0x10,
+0x1, 0x18,0x19,0x0, 0xf8,0x18,0x6, 0xcf,0xc3,0x0, 0x10,0x1, 0xff,0x18,0xa, 0x54,
+0xe, 0xf8,0x1, 0xe, 0xf8,0x3, 0xe, 0xf8,0x5, 0xe, 0xf8,0x7, 0xe, 0xf8,0x9, 0xe, 
+0xf8,0xb, 0xe, 0xf8,0xd, 0xe, 0xf8,0xf, 0xc2,0xe0,0x10,0x1, 0xf8,0x17,0x6, 0xfd,
+0x85,0x29,0xc2,0xe0,0x10,0x1, 0xc0,0xa0,0x10,0x1, 0xf3,0x37,0x7, 0xec,0xfc,0xa5,
+0x6, 0xcf,0xc0,0x60,0x10,0x1, 0xc2,0xe0,0x10,0x1, 0xfc,0x63,0x6, 0xfd,0xc3,0x0, 
+0x10,0x1, 0x13,0x65,0x0, 0x10,0x83,0x0, 0xfe,0xf7,0xa, 0x54,0xff,0x18,0x8, 0x2, 
+0x9b,0x80,0xff,0x40,0x7f,0xff,0x98,0xc2,0xe4,0x0, 0x1, 0x33,0xd7,0x79,0x0, 0x92,
+0xf, 0x57,0x1, 0xf, 0x57,0x3, 0xf, 0x57,0x5, 0xf, 0x57,0x7, 0x8b,0x79,0xb, 0xb7,
+0x4, 0xc3,0xaf,0xff,0xe0,0x20,0x0, 0x41,0xb, 0xb7,0x1, 0xf, 0xb7,0x5, 0xb, 0xb7,
+0x3, 0xe4,0x0, 0x0, 0x1b,0xb, 0xb8,0x1, 0xf, 0xb7,0x5, 0xb, 0xb8,0x3, 0xf, 0xb7,
+0x7, 0x5f,0x20,0x21,0xb, 0xb8,0x1, 0xb, 0xd8,0x2, 0xf, 0xb7,0x1, 0xf, 0xd7,0x3, 
+0x48,0x82,0x1, 0x9, 0x17,0x4, 0xc1,0x0, 0xff,0xec,0x20,0x0, 0xf5,0x5c,0xfd,0x6, 
+0xc0,0xe0,0xff,0xec,0x20,0x0, 0xcd,0xb, 0xb7,0x6, 0xc3,0xa0,0xff,0xec,0x20,0x0, 
+0xa5,0xc3,0xc0,0xff,0xec,0x20,0x0, 0x89,0x40,0xe7,0x45,0x43,0xde,0xed,0x40,0xe7,
+0x30,0x43,0xde,0x30,0x8d,0x7, 0x8f,0xbe,0xd, 0x18,0x1, 0x5f,0xbd,0x6, 0xd, 0x17,
+0x1, 0xf, 0xb8,0x3, 0xf, 0xb7,0x3, 0x9f,0x81,0x9e,0xe8,0x5f,0x9c,0x0, 0x1f,0x18,
+0x1c,0xd7,0x99,0xfb,0x5e,0x1b,0x65,0x0, 0x18,0x83,0x0, 0x85,0x29,0xfc,0x21,0xff,
+0x78,0xc2,0xe0,0x10,0x1, 0xed,0x21,0x0, 0x84,0xee,0xf7,0x0, 0x7e,0xed,0x41,0x0, 
+0x80,0x1c,0x61,0x20,0x98,0x80,0x50,0xa0,0x60,0x86,0xe8,0xc1,0x0, 0x10,0x1, 0xc3,
+0xc0,0x10,0x1, 0xfd,0x8, 0x2, 0x6e,0xff,0xde,0x9, 0x8, 0x9b,0x80,0x9b,0x40,0x8a,
+0xfe,0x8b,0x8, 0x8b,0x7c,0x8b,0x3a,0x13,0xb8,0x0, 0x23,0xa0,0x9a,0x4f,0xb9,0x20,
+0xfd,0x41,0x0, 0x80,0x8, 0x77,0x1, 0x8f,0xaa,0xc, 0x7d,0xa1,0x4f,0xb9,0x20,0x8, 
+0x77,0x3, 0x8f,0xaa,0x9f,0x21,0xc, 0x7d,0xa9,0x5f,0x39,0x0, 0xe4,0x0, 0x0, 0xe5,
+0x23,0xa4,0x9a,0x4f,0xba,0x20,0xfd,0x41,0x0, 0x80,0x8, 0x77,0x1, 0x8f,0xaa,0xc, 
+0x7d,0xa3,0x4f,0xba,0x20,0x8, 0x77,0x3, 0x8f,0xaa,0x9f,0x41,0xc, 0x7d,0xab,0x5f,
+0x5a,0x0, 0xe4,0x0, 0x0, 0x99,0x23,0xa8,0x9a,0x4f,0xbb,0x20,0xfd,0x41,0x0, 0x80,
+0x8, 0x77,0x1, 0x8f,0xaa,0xc, 0x7d,0xa5,0x4f,0xbb,0x20,0x8, 0x77,0x3, 0x8f,0xaa,
+0x9f,0x61,0xc, 0x7d,0xad,0x5f,0x7b,0x0, 0xe4,0x0, 0x0, 0x4d,0x23,0xac,0x8a,0x4f,
+0xbc,0x20,0xfd,0x41,0x0, 0x80,0x8, 0x77,0x1, 0x8f,0xaa,0xc, 0x7d,0xa7,0x4f,0xbc,
+0x20,0x8, 0x77,0x3, 0x8f,0xaa,0x9f,0x81,0xc, 0x7d,0xaf,0x5f,0x9c,0x0, 0xc3,0xa0,
+0x10,0x1, 0x9f,0x2, 0x9e,0xe4,0xff,0xbd,0x2, 0x7e,0xd7,0x1d,0xfa,0xee,0xe4,0x0, 
+0x2, 0x55,0x4f,0x38,0x10,0x1d,0x41,0x8, 0x8f,0x2a,0xc, 0x19,0x0, 0x1f,0x21,0x2, 
+0x8f,0x38,0x18,0x19,0x0, 0x9f,0x1, 0xd3,0x6, 0xff,0x5e,0x43,0x17,0x3c,0x13,0x78,
+0x0, 0x9b,0x0, 0xe4,0x0, 0x0, 0x55,0xd3,0x6, 0x1, 0x6a,0x4f,0x98,0x20,0x8f,0x9a,
+0x8, 0x7c,0x0, 0xb, 0x9c,0x8, 0x8f,0x83,0x4f,0xb8,0x10,0x1d,0x41,0x8, 0x8f,0xaa,
+0xf, 0x9d,0x0, 0x1f,0x81,0x2, 0x8f,0x98,0x9f,0x1, 0x1b,0x3c,0x0, 0x5f,0x38,0x0, 
+0xd7,0x79,0xfe,0xbd,0x9b,0x0, 0xe4,0x0, 0x0, 0xa7,0x1f,0x98,0x1, 0x4f,0xb8,0x10,
+0xfd,0x41,0x0, 0x80,0x5f,0x9c,0x0, 0x8f,0xaa,0x8b,0x3c,0x8f,0xa, 0xe4,0x0, 0x0, 
+0x6d,0xd3,0x25,0x1, 0xb5,0x4c,0x79,0x10,0xfd,0x41,0x0, 0x80,0xc, 0x9d,0x8a,0x8c,
+0x6a,0xc, 0xa3,0x8a,0xd4,0x85,0x0, 0xd0,0xc, 0xbd,0x88,0xc, 0x83,0x88,0x10,0x98,
+0x82,0x88,0x6a,0x8c,0x79,0x10,0xa3,0x82,0x18,0xb8,0x82,0x18,0x83,0x82,0x9f,0x21,
+0x5f,0x39,0x0, 0xd7,0x3b,0xfe,0x76,0x8b,0x1c,0xd7,0x1b,0xfd,0x8e,0xff,0x61,0x0, 
+0x80,0x13,0x1, 0x2, 0x4f,0x38,0x8, 0x4f,0x18,0x18,0x8f,0x17,0x4f,0x18,0x8, 0x8f,
+0x1b,0xb, 0x78,0xa0,0x5f,0x77,0xb1,0x20,0x0, 0x91,0x1f,0x19,0x1, 0xff,0xa1,0x0, 
+0x80,0x4f,0x18,0x10,0x8f,0x17,0x4f,0x18,0x8, 0x8f,0x1d,0xb, 0x98,0xa0,0x5f,0x97,
+0xb9,0x4b,0x7b,0x0, 0x4b,0x9c,0x0, 0xe4,0x0, 0x0, 0x11,0x9b,0x80,0x8b,0x7c,0x8b,
+0x1e,0x8b,0x28,0x13,0xb9,0x0, 0xd7,0xa6,0x0, 0xb6,0xb, 0xb8,0x1, 0x43,0xbd,0xdd,
+0xf, 0xb8,0x1, 0xb, 0xb8,0x3, 0x43,0xbd,0xe5,0xf, 0xb8,0x3, 0xc1,0x40,0x10,0x1, 
+0x9f,0x22,0x9f,0x4, 0xfd,0x4a,0x2, 0x7e,0xd7,0x2a,0xfe,0xde,0x9e,0xe1,0x9f,0x42,
+0xd2,0xe4,0x0, 0xae,0xe4,0x0, 0x0, 0x35,0xc0,0xe0,0x10,0x1, 0x1f,0x41,0x20,0x9a,
+0xe0,0xfc,0xe7,0x4, 0x60,0x5c,0xd7,0x0, 0x9b,0x0, 0xe7,0xff,0xfd,0x91,0xed,0x41,
+0x0, 0x82,0xed,0x21,0x0, 0x86,0xfc,0x21,0x0, 0x88,0x85,0x29,0xc2,0xe0,0x10,0x1, 
+0xc3,0x40,0x10,0x1, 0xf3,0x37,0xa, 0x70,0xc3,0x60,0x10,0x1, 0x9a,0xe0,0xc3,0x80,
+0x10,0x1, 0x8b,0x17,0xff,0x5a,0x8, 0x70,0xff,0x7b,0xa, 0x88,0xff,0x9c,0x7, 0xc4,
+0x9b,0xa2,0xe4,0x0, 0x0, 0x45,0x41,0x17,0xdc,0x43,0xd7,0xd4,0x8, 0x68,0x0, 0x9f,
+0x1, 0x41,0x17,0xe4,0x5f,0x18,0x0, 0x9, 0x8, 0x0, 0x9e,0xe2,0x8d,0x3, 0x41,0x8, 
+0xe8,0xd, 0x1e,0x1, 0xd7,0x19,0xff,0x16,0x85,0x29,0xc2,0xe0,0x10,0x1, 0xc3,0x0, 
+0x10,0x1, 0xff,0x18,0x5, 0x6, 0xb, 0x58,0x14,0xb, 0x38,0x2, 0xf3,0x97,0x7, 0xec,
+0x5f,0xba,0x4, 0xa, 0xf8,0x6, 0xb, 0x18,0x16,0x43,0xd7,0xd5,0x40,0x97,0xc5,0xcb,
+0x40,0x7, 0xff,0x43,0x1a,0xc5,0x41,0x17,0xcd,0x5c,0xd8,0x4, 0x40,0x7a,0xbd,0xc3,
+0x0, 0x10,0x1, 0x40,0xb9,0xbd,0xff,0x18,0x8, 0x2, 0x9b,0x60,0xc8,0xe0,0x7, 0xff,
+0xe4,0x0, 0x0, 0x6f,0xb, 0x58,0x0, 0xd6,0xfa,0x0, 0x98,0x43,0x5a,0xcd,0x43,0x5a,
+0xf3,0x43,0x5a,0x40,0x8f,0x5d,0xe4,0x0, 0x0, 0x2d,0xd7,0x43,0x0, 0xa8,0x43,0x47,
+0xd5,0x43,0x5a,0xcd,0x43,0x5a,0x23,0x43,0x5a,0x28,0x8f,0x46,0xf, 0x58,0x1, 0x9f,
+0x61,0x1f,0x18,0x1c,0x5f,0x7b,0x0, 0xd7,0x7c,0xfe,0x6e,0x85,0x29,0xc2,0xe0,0x10,
+0x1, 0xf3,0x57,0x7, 0xec,0xc2,0xe0,0x10,0x1, 0xfe,0xf7,0x5, 0x6, 0xb, 0x37,0x14,
+0xa, 0xf7,0x16,0xcb,0x60,0x7, 0xff,0x9b,0x0, 0x43,0x7b,0xcd,0x43,0x7b,0xbd,0xc2,
+0xe0,0x10,0x1, 0xfe,0xf7,0x8, 0x2, 0xe4,0x0, 0x0, 0x39,0xb, 0x97,0x0, 0x9f,0x1, 
+0x43,0x9c,0xcd,0x5f,0x18,0x0, 0xcf,0x9c,0x7, 0xff,0x43,0x9c,0xd8,0xf, 0x97,0x1, 
+0x1e,0xf7,0x1c,0xd7,0x1a,0xff,0x46,0x85,0x29,0xc3,0x14,0x0, 0x1, 0xca,0xf8,0x79,
+0xe9,0x1c,0x21,0xd8,0xcb,0x18,0x79,0xd0,0xd, 0x41,0x20,0xd, 0x61,0x1c,0xd, 0x81,
+0x18,0xd, 0xa1,0x14,0xd, 0xc1,0x10,0xd, 0xe1,0xc, 0xe, 0x1, 0x8, 0xe, 0x21,0x4, 
+0xd, 0x21,0x24,0xc1,0x80,0x10,0x1, 0xfd,0x8c,0x6, 0xfe,0xb, 0x2c,0x1, 0xc7,0x39,
+0x7f,0xff,0xf, 0x2c,0x1, 0x13,0x57,0x0, 0xc2,0xe0,0x10,0x1, 0xfb,0x57,0x5, 0x69,
+0xb, 0x58,0x1, 0xc3,0x0, 0x10,0x1, 0x5f,0x5a,0x0, 0xfb,0x58,0x5, 0x61,0xc1,0xa0,
+0x10,0x1, 0xc1,0xe0,0x10,0x1, 0xc1,0xc0,0x10,0x1, 0xc3,0x0, 0x10,0x1, 0xc2,0x0, 
+0x10,0x1, 0x5c,0x63,0x0, 0xfd,0xad,0x6, 0xc0,0xfd,0xef,0x5, 0x50,0xfd,0xce,0x9, 
+0x8, 0xfe,0x20,0x80,0x0, 0xfd,0x58,0x9, 0xc6,0xfd,0x70,0x7, 0xec,0xd0,0x61,0x1a,
+0x6e,0xc2,0xe0,0x10,0x1, 0xf2,0xf7,0x5, 0x45,0x22,0xe0,0x26,0x46,0x39,0x8d,0xe, 
+0x2c,0x1, 0xe7,0xff,0xe8,0x4, 0xe7,0xff,0xe8,0x5a,0xe7,0xff,0xe7,0x84,0x13,0xb, 
+0x0, 0xb, 0x2b,0x16,0xd3,0x1, 0x5, 0x9, 0xa, 0xeb,0x32,0x5e,0xf9,0x15,0x4b,0x61,
+0x1, 0xce,0xfb,0x0, 0x1c,0x8e,0xeb,0x4b,0x40,0xa, 0xb, 0x37,0x16,0x9a,0xe0,0x27,
+0x3c,0x50,0xc2,0xe0,0x10,0x1, 0x5f,0x99,0x4, 0xea,0xf7,0xa, 0x77,0x5f,0x37,0x15,
+0x4a,0xfc,0xb8,0xe, 0xeb,0x13,0xcf,0x7b,0x0, 0x1c,0x9a,0xe0,0x8f,0x6b,0xb, 0x3b,
+0x18,0x27,0x3c,0x50,0xc2,0xe0,0x10,0x1, 0x5f,0x79,0x4, 0xea,0xf7,0xa, 0x79,0x5f,
+0x37,0x15,0x4a,0xfb,0xb8,0xe, 0xeb,0x15,0xce,0xfa,0x0, 0x1c,0x8e,0xeb,0xb, 0x37,
+0x16,0x9a,0xe0,0x27,0x3c,0x50,0xc2,0xe0,0x10,0x1, 0x5f,0x79,0x4, 0xea,0xf7,0xa, 
+0x77,0x5f,0x37,0x15,0x4a,0xfb,0xb8,0xe, 0xeb,0x2f,0xcf,0x5a,0x0, 0x1c,0x9a,0xe0,
+0x8f,0x4b,0xb, 0x3a,0x18,0x27,0x3c,0x50,0xc2,0xe0,0x10,0x1, 0x5f,0x59,0x4, 0xea,
+0xf7,0xa, 0x79,0x5f,0x37,0x15,0x4a,0xfa,0xb8,0xc3,0x20,0x10,0x1, 0xee,0xf9,0x8, 
+0x1d,0xe4,0x0, 0x0, 0x73,0x9a,0xe0,0x27,0x3c,0x50,0xc2,0xe0,0x10,0x1, 0x5f,0x59,
+0x4, 0xea,0xf7,0xa, 0x77,0x5f,0x37,0x15,0x4a,0xfa,0xb8,0xe, 0xeb,0x13,0xb, 0x2b,
+0x18,0x9a,0xe0,0x27,0x3c,0x50,0xc2,0xe0,0x10,0x1, 0x5f,0x59,0x4, 0xea,0xf7,0xa, 
+0x79,0x5f,0x37,0x15,0x4a,0xfa,0xb8,0xe, 0xeb,0x15,0xc2,0xe0,0x10,0x1, 0xb, 0x2f,
+0x0, 0xfe,0xf7,0x5, 0x62,0x23,0x24,0xce,0x9b,0x22,0xf, 0x2f,0x1, 0xc3,0x20,0x10,
+0x1, 0xb, 0x4b,0x13,0xef,0x59,0x5, 0x55,0xb, 0x2b,0x15,0xf, 0x37,0x1, 0xc2,0xe0,
+0x10,0x1, 0x9b,0x20,0xfe,0xf7,0x8, 0x0, 0x9b,0x4f,0xff,0x60,0x7, 0xf0,0x9b,0x8a,
+0xff,0xa0,0x7, 0xf5,0xe4,0x0, 0x1, 0x9, 0x23,0x2b,0x9a,0xc3,0x20,0x10,0x1, 0xb, 
+0x6b,0x13,0xeb,0x39,0x5, 0x54,0x43,0x7b,0xcd,0x4f,0x5b,0xfa,0x47,0x7a,0xde,0x43,
+0x5b,0xd5,0x5f,0x48,0xd9,0x20,0x0, 0x6d,0xb, 0x57,0x0, 0xb, 0x6b,0x15,0x43,0x7b,
+0xd5,0x4f,0x5b,0xfa,0x47,0x7a,0xde,0x43,0x5b,0xd5,0x5f,0x48,0xd1,0x20,0x0, 0x21,
+0x9b,0x43,0xf, 0x4f,0x1, 0xa, 0xf7,0x1, 0xf, 0x2b,0x13,0xe, 0xeb,0x15,0xe7,0xff,
+0xff,0x41,0xb, 0xd7,0xff,0xd3,0xce,0x0, 0x3d,0xf, 0x57,0xff,0xb, 0xd7,0xff,0xc3,
+0xc0,0xfe,0xa, 0x20,0x0, 0x19,0xf, 0x77,0xff,0xb, 0xd7,0x1, 0xd3,0xc9,0x0, 0x3d,
+0xf, 0x97,0x1, 0xb, 0xd7,0x1, 0xc3,0xc0,0xfe,0xaa,0x20,0x0, 0x19,0xf, 0xb7,0x1, 
+0x9f,0x21,0x1e,0xf7,0x1c,0x5f,0x39,0x4, 0xd7,0x19,0xfe,0x55,0x27,0x4, 0x7d,0xb, 
+0x2b,0x2f,0xa, 0xeb,0x13,0x42,0xf9,0xbd,0xb, 0x2b,0x31,0xe, 0xeb,0x1b,0xa, 0xeb,
+0x15,0x42,0xf9,0xbd,0xe, 0xeb,0x1d,0xe4,0x0, 0x0, 0x15,0xc, 0xb, 0x1b,0xc, 0xb, 
+0x1d,0xc2,0xe0,0x10,0x1, 0xf2,0xf7,0x5, 0x69,0x22,0xe1,0x9e,0x52,0xe0,0x52,0xb, 
+0x2b,0x13,0x1a,0xea,0x0, 0x4f,0x79,0x41,0xa, 0xeb,0x15,0x4f,0x7b,0x20,0x4f,0x57,
+0x41,0x1b,0x2a,0x2, 0x57,0x5a,0xf, 0x1a,0xea,0x3, 0x47,0x5b,0xd5,0x1b,0x4a,0x1, 
+0x27,0x4, 0xa1,0xb, 0xb, 0x1a,0xa, 0xeb,0x1c,0x4f,0x38,0x42,0x4f,0x57,0x42,0x5f,
+0x39,0x4, 0x57,0x5a,0xf, 0x4f,0x39,0x20,0x1b,0xa, 0x5, 0x47,0x39,0xd5,0x1a,0xea,
+0x6, 0x1b,0x2a,0x4, 0xe4,0x0, 0x0, 0x1b,0x18,0xa, 0x4, 0x18,0xa, 0x5, 0x18,0xa, 
+0x6, 0x88,0x6a,0x98,0x87,0xe7,0xff,0xe2,0x54,0x18,0x6a,0x7, 0xe4,0x0, 0x1, 0xe3,
+0x8a,0xea,0x18,0x17,0x0, 0xc3,0x20,0x10,0x1, 0x9e,0xe1,0xff,0x39,0xa, 0x48,0xd6,
+0xf9,0xff,0x9e,0x52,0xe0,0x62,0x1a,0xea,0x0, 0xa, 0xeb,0x13,0x4f,0x37,0x41,0x1a,
+0xea,0x2, 0xa, 0xeb,0x15,0x1b,0x2a,0x1, 0x1a,0xea,0x4, 0x4f,0x37,0x41,0x56,0xf8,
+0x1, 0x4f,0x18,0x20,0x52,0xf7,0x20,0x53,0x18,0x2, 0x1a,0xea,0x11,0x1b,0xa, 0x12,
+0xa, 0xeb,0x1a,0x4f,0x17,0x42,0x1a,0xea,0xe, 0x1b,0xa, 0xd, 0xa, 0xeb,0x1c,0x4f,
+0x17,0x42,0x1a,0xea,0x10,0x1b,0xa, 0xf, 0x1b,0x2a,0x3, 0x88,0x6a,0x50,0x80,0x1f,
+0xe7,0xff,0xe1,0x7e,0xc2,0xe0,0x10,0x1, 0xc3,0x40,0x10,0x1, 0xc3,0x80,0x10,0x1, 
+0xc3,0xa0,0x10,0x1, 0xc3,0xc0,0x10,0x1, 0x18,0x6a,0x1f,0xfe,0xf7,0x9, 0xe6,0xff,
+0x5a,0x8, 0xbc,0x9b,0x0, 0xc3,0x60,0x10,0x1, 0xff,0x9c,0xa, 0x88,0xff,0xbd,0x7, 
+0xc4,0xff,0xde,0x8, 0x70,0xf3,0x3b,0x5, 0x61,0x23,0x28,0x88,0x27,0x28,0x2b,0x23,
+0x24,0x3a,0xe4,0x0, 0x0, 0x25,0x23,0x2c,0x70,0xd3,0x24,0x1, 0x4a,0x43,0x38,0x74,
+0xe4,0x0, 0x0, 0x2b,0x43,0x38,0xf4,0xe4,0x0, 0x0, 0x1d,0x43,0x38,0xe4,0xe4,0x0, 
+0x0, 0xf, 0x43,0x38,0xec,0x15,0x19,0x1, 0x19,0x17,0x0, 0xb, 0x39,0x1, 0xe4,0x0, 
+0x0, 0x21,0xf, 0x3a,0x2, 0x4d,0x19,0x82,0x4f,0x39,0x42,0x19,0x17,0x0, 0x1b,0x37,
+0x1, 0x9f,0x2, 0x9e,0xe2,0x9f,0x44,0x5f,0x4, 0xc9,0x23,0xfe,0xad,0xa, 0xec,0x0, 
+0xd2,0xff,0xe, 0x84,0x9a,0xe1,0xe4,0x0, 0x3, 0x8f,0xd0,0x60,0x4, 0x4e,0x9b,0x21,
+0xf, 0x2f,0x1, 0xf2,0xf7,0x5, 0x69,0x22,0xe0,0xb2,0x52,0xe0,0x52,0x1a,0xea,0x0, 
+0x9a,0xff,0x18,0xa, 0x5, 0x1a,0xea,0x1, 0x1a,0xea,0x2, 0x1a,0xea,0x3, 0x1a,0xea,
+0x4, 0x1a,0xea,0x6, 0x88,0x6a,0x98,0x87,0xe7,0xff,0xdf,0xee,0x18,0x6a,0x7, 0xe4,
+0x0, 0x0, 0x89,0x8a,0xea,0x18,0x17,0x0, 0xc3,0x0, 0x10,0x1, 0x9e,0xe1,0xff,0x18,
+0xa, 0x48,0xd6,0xf8,0xff,0x9e,0x52,0xe0,0x62,0x9b,0x1f,0x1a,0xea,0x0, 0xc2,0xe0,
+0x10,0x1, 0xfe,0xf7,0x9, 0xc7,0x1b,0x17,0x0, 0xc3,0x20,0x10,0x1, 0x9e,0xe1,0xff,
+0x39,0x9, 0xe5,0xd6,0xf9,0xff,0x9e,0x88,0x6a,0x50,0x80,0x1f,0xe7,0xff,0xdf,0x66,
+0x18,0x6a,0x1f,0xa, 0xec,0x1, 0xc, 0xd, 0x0, 0x46,0x31,0xbd,0xe, 0x2c,0x1, 0xe4,
+0x0, 0x2, 0x83,0xd0,0x62,0x9, 0xee,0xf2,0xf7,0x5, 0x69,0x22,0xe1,0xb2,0x52,0xe0,
+0x52,0x1a,0xea,0x0, 0x9a,0xff,0x1a,0xea,0x1, 0x1a,0xea,0x2, 0x1a,0xea,0x3, 0x1a,
+0xea,0x4, 0xc2,0xe0,0x10,0x1, 0xf2,0xf7,0x6, 0xa0,0x57,0x17,0x1, 0x23,0x0, 0x24,
+0x9a,0xe1,0xe4,0x0, 0x0, 0x5d,0x57,0x17,0x2, 0x5f,0x18,0x0, 0x23,0x0, 0x28,0x18,
+0x6a,0x5, 0xe4,0x0, 0x0, 0x43,0x57,0x17,0x4, 0x5f,0x18,0x0, 0x23,0x0, 0x24,0x9a,
+0xe4,0xe4,0x0, 0x0, 0x1f,0x57,0x17,0x8, 0x5f,0x18,0x0, 0x23,0x0, 0x14,0x9a,0xe8,
+0x1a,0xea,0x5, 0x9a,0xff,0x88,0x6a,0x1a,0xea,0x6, 0x98,0x87,0xe7,0xff,0xde,0x66,
+0x18,0x6a,0x7, 0xe4,0x0, 0x1, 0x15,0x8a,0xea,0x18,0x17,0x0, 0xc3,0x0, 0x10,0x1, 
+0x9e,0xe1,0xff,0x18,0xa, 0x48,0xd6,0xf8,0xff,0x9e,0x52,0xe0,0x62,0x1a,0xea,0x0, 
+0xa, 0xeb,0x13,0x4f,0x17,0x41,0x1a,0xea,0x2, 0x1b,0xa, 0x1, 0xa, 0xeb,0x15,0x4f,
+0x17,0x41,0x1a,0xea,0x4, 0x1b,0xa, 0x3, 0x12,0xeb,0x0, 0x57,0x17,0x1, 0x4e,0xf7,
+0x20,0x53,0x18,0x20,0x52,0xf7,0x2, 0x1b,0xa, 0x11,0x1a,0xea,0x12,0xa, 0xeb,0x1a,
+0x4f,0x17,0x42,0x1a,0xea,0xe, 0x1b,0xa, 0xd, 0xa, 0xeb,0x1c,0x4f,0x17,0x42,0x1a,
+0xea,0x10,0x1b,0xa, 0xf, 0x88,0x6a,0x50,0x80,0x1f,0xe7,0xff,0xdd,0x8a,0x9a,0xe0,
+0x18,0x6a,0x1f,0x43,0x17,0x74,0xb, 0x38,0x0, 0x43,0x17,0x54,0x4f,0x59,0x42,0x1b,
+0x38,0x21,0x1b,0x58,0x20,0x9e,0xe2,0x5e,0xe4,0xc9,0x23,0xff,0xa5,0xc2,0xe0,0x10,
+0x1, 0xf2,0xf7,0x5, 0x52,0x22,0xe0,0x78,0x22,0xe4,0x92,0xc2,0xe0,0x10,0x1, 0xf2,
+0xf7,0x9, 0xcb,0xc2,0xe0,0x10,0x0, 0x20,0x0, 0x31,0x5e,0xe8,0x1, 0x20,0x0, 0x19,
+0x22,0xe0,0x32,0xa, 0xec,0x1, 0x46,0x31,0xbd,0xe, 0x2c,0x1, 0xc2,0xe0,0x10,0x1, 
+0xeb,0x17,0x6, 0x9d,0x53,0x18,0x2, 0xef,0x17,0x6, 0x9d,0x9a,0xe2,0xe, 0xed,0x0, 
+0xe, 0x21,0x6, 0xe, 0x1, 0xa, 0xd, 0xe1,0xe, 0xd, 0xc1,0x12,0xd, 0xa1,0x16,0xd, 
+0x81,0x1a,0xd, 0x61,0x1e,0xd, 0x41,0x22,0xd, 0x21,0x26,0x1c,0x21,0x28,0x85,0x29,
+0x9c,0x30,0xd, 0x21,0xc, 0xd, 0x41,0x8, 0xd, 0x61,0x4, 0xd, 0x81,0x0, 0xc2,0xe0,
+0x10,0x1, 0xf3,0x17,0x5, 0x38,0x23,0x4, 0x46,0x98,0x60,0xf8,0x17,0x5, 0x38,0xe7,
+0xff,0xf4,0x54,0xe7,0xff,0xde,0x3e,0xc2,0xe0,0x10,0x1, 0xc3,0x40,0x10,0x1, 0xf3,
+0x37,0xa, 0x70,0xc3,0x60,0x10,0x1, 0x9a,0xe0,0xff,0x5a,0x8, 0x70,0xff,0x7b,0xa, 
+0x88,0xe4,0x0, 0x0, 0x29,0x4f,0x17,0x8, 0x9e,0xe1,0x43,0x98,0xd4,0x8f,0x1b,0xb, 
+0x18,0x1, 0xf, 0x1c,0x1, 0x5f,0x17,0x0, 0xd7,0x38,0xff,0x6d,0x98,0x67,0xe7,0xff,
+0xe1,0x96,0x98,0x63,0xe7,0xff,0xe3,0xe2,0x5c,0x63,0x0, 0x20,0x60,0x26,0x98,0x61,
+0xe4,0x0, 0x0, 0xd, 0x98,0x65,0xe7,0xff,0xe1,0x66,0xc1,0x40,0x10,0x1, 0xc2,0xe0,
+0x10,0x1, 0xf1,0x8a,0x6, 0xdd,0xf3,0x17,0x6, 0xf4,0x1d,0x6c,0x1, 0x9f,0x1, 0x5d,
+0x6b,0x0, 0x5f,0x18,0x0, 0xf9,0x6a,0x6, 0xdd,0xfb,0x17,0x6, 0xf4,0x8b,0x2a,0xd1,
+0x6a,0x0, 0x55,0x5f,0x2, 0x93,0x20,0x1, 0x21,0xf8,0x17,0x6, 0xf4,0xc2,0xe0,0x10,
+0x1, 0xf8,0x19,0x6, 0xdd,0x9b,0x1, 0xef,0x17,0x6, 0x7c,0xc2,0xe0,0x10,0x1, 0xec,
+0x17,0x6, 0xc8,0x1f,0x20,0xef,0xc2,0xf4,0x0, 0x1, 0xca,0xf7,0x7a,0x10,0xf, 0x17,
+0x2, 0x47,0x18,0xcc,0xf, 0x17,0x0, 0xff,0x20,0xff,0x7f,0xc2,0xe0,0x10,0x1, 0xeb,
+0x17,0x6, 0xff,0x47,0x18,0xcc,0xef,0x17,0x6, 0xff,0xe4,0x0, 0x0, 0x61,0x98,0x62,
+0xe7,0xff,0xe2,0xca,0x5c,0x63,0x0, 0x20,0x60,0x2a,0x21,0x60,0x1c,0xf9,0x8a,0x6, 
+0xdd,0xe7,0xff,0x6c,0x8e,0xd, 0x21,0xe, 0xd, 0x81,0x2, 0xd, 0x61,0x6, 0xd, 0x41,
+0xa, 0x98,0x60,0x1c,0x21,0x10,0xe7,0xff,0x6c,0xb, 0xd, 0x81,0x2, 0xd, 0x61,0x6, 
+0xd, 0x41,0xa, 0xd, 0x21,0xe, 0x1c,0x21,0x10,0x85,0x29,0xc2,0xe0,0x10,0x1, 0xc3,
+0x0, 0x10,0x1, 0xc3,0x40,0x10,0x1, 0xc3,0x20,0x10,0x1, 0xf3,0x77,0x6, 0xa2,0x5c,
+0x63,0x0, 0xff,0x18,0x2, 0x7e,0xff,0x5a,0x9, 0x8, 0xff,0x39,0x4, 0x77,0x9a,0xe0,
+0x20,0x60,0x2c,0x98,0x61,0x9b,0xa3,0xe4,0x0, 0x0, 0xb3,0x98,0x61,0x9b,0xa2,0xe4,
+0x0, 0x0, 0x4b,0x43,0x97,0xcc,0x13,0xdc,0x0, 0x4f,0x97,0x8, 0x4f,0xde,0x8, 0x8f,
+0x98,0x8f,0xda,0xb, 0x9c,0x0, 0xb, 0xde,0x0, 0x43,0x9c,0xe8,0x9e,0xe1,0x5f,0xdc,
+0x15,0x48,0x63,0x0, 0x5f,0x97,0x0, 0xd7,0x7c,0xfe,0xe5,0xe4,0x0, 0x0, 0x59,0x43,
+0x97,0xcc,0x13,0xdc,0x0, 0x4f,0x97,0x8, 0x4f,0xde,0x8, 0x8f,0x98,0x8f,0xda,0xb, 
+0x9c,0x0, 0xb, 0xde,0x0, 0x43,0x9c,0xe8,0x9e,0xe1,0x5f,0x9e,0x15,0x48,0x63,0x0, 
+0x5f,0x97,0x0, 0xd7,0x7c,0xfe,0xe5,0x85,0x29,0x5c,0x63,0x0, 0xc2,0xe0,0x10,0x1, 
+0xfe,0xf7,0x4, 0x77,0x8e,0xe3,0x13,0x17,0x0, 0x4f,0x18,0x8, 0xc2,0xe0,0x10,0x1, 
+0x4c,0x63,0x8, 0xfe,0xf7,0x9, 0x8, 0x8e,0xf8,0xc3,0x0, 0x10,0x1, 0xff,0x18,0x2, 
+0x7e,0x8c,0x78,0xb, 0x17,0x0, 0xa, 0xe3,0x0, 0x5f,0x17,0x1d,0x48,0x61,0x1, 0x85,
+0x29,0x1c,0x21,0xe8,0xc2,0xe0,0x10,0x1, 0xd, 0x41,0x10,0xd, 0x61,0xc, 0xd, 0x81,
+0x8, 0xd, 0xa1,0x4, 0xd, 0x21,0x14,0xf1,0xb7,0x6, 0xa2,0x99,0x40,0xc1,0x60,0x10,
+0x1, 0x99,0x81,0xe4,0x0, 0x0, 0x5f,0xe7,0xff,0xff,0x44,0x5c,0x63,0x0, 0x20,0x60,
+0x44,0x4f,0xc, 0x54,0xf2,0xeb,0x6, 0xa0,0x46,0xf8,0xbd,0xe4,0x0, 0x0, 0x23,0x4e,
+0xec,0x54,0xf3,0xb, 0x6, 0xa0,0x46,0xf7,0xbf,0x46,0xf7,0xc4,0xfa,0xeb,0x6, 0xa0,
+0x9d,0x41,0x5c,0x6a,0x0, 0xd5,0xa3,0xfe,0x95,0xc2,0xe0,0x10,0x1, 0xf3,0x17,0x6, 
+0xa0,0xc2,0xe0,0x10,0x1, 0x23,0x0, 0x38,0xeb,0x17,0x6, 0xff,0x53,0x18,0x10,0xe4,
+0x0, 0x0, 0x3d,0xeb,0x17,0x6, 0xff,0x57,0x38,0x10,0x23,0x20,0x34,0x9b,0x43,0xc3,
+0x20,0x10,0x1, 0xfb,0x59,0x6, 0xdf,0x1f,0x20,0xef,0x47,0x18,0xcc,0xd, 0xa1,0x6, 
+0xd, 0x81,0xa, 0xd, 0x61,0xe, 0xd, 0x41,0x12,0xd, 0x21,0x16,0xef,0x17,0x6, 0xff,
+0x1c,0x21,0x18,0x85,0x29,0x9c,0x38,0xd, 0x41,0x0, 0xd, 0x21,0x4, 0xe7,0xff,0xfe,
+0xa8,0xc1,0x40,0x10,0x1, 0xc3,0x20,0x10,0x1, 0xc3,0x0, 0x10,0x1, 0xee,0xea,0x6, 
+0xea,0xff,0x39,0x6, 0xfe,0xff,0x18,0x6, 0xbd,0x22,0xe0,0x56,0x18,0x18,0x0, 0xa, 
+0xf9,0x1, 0x56,0xf7,0x10,0x22,0xe1,0x98,0x9a,0xe1,0xe4,0x0, 0x0, 0x99,0x22,0xe4,
+0xa6,0x12,0xf8,0x0, 0x9e,0xe1,0x5e,0xf7,0x0, 0x1a,0xf8,0x0, 0xb, 0x19,0x1, 0x57,
+0x18,0x10,0x23,0x1, 0x14,0xc3,0x0, 0x10,0x1, 0xf3,0x18,0x6, 0xe4,0xd6,0xf8,0x1, 
+0xf1,0x9a,0xe2,0xe4,0x0, 0x0, 0x47,0x22,0xe8,0x9e,0x18,0x18,0x0, 0xa, 0xf9,0x1, 
+0x56,0xf7,0x10,0x22,0xe0,0x44,0xd, 0x41,0x2, 0xd, 0x21,0x6, 0x98,0x62,0x9c,0x28,
+0xe7,0xff,0xee,0x73,0x9a,0xe3,0xee,0xea,0x6, 0xe8,0xe4,0x0, 0x0, 0x23,0x22,0xec,
+0x36,0x98,0x60,0xe7,0xff,0xee,0x4c,0xec,0xa, 0x6, 0xe8,0xd, 0x41,0x2, 0xd, 0x21,
+0x6, 0x9c,0x28,0x85,0x29,0x9c,0x38,0xd, 0x21,0x4, 0xc2,0xe0,0x10,0x1, 0xea,0xf7,
+0x6, 0xff,0x56,0xf7,0x8, 0x22,0xe0,0xf0,0xc2,0xe0,0x10,0x1, 0xee,0xf7,0x6, 0xc2,
+0x22,0xe4,0xc4,0xe7,0xff,0xe4,0xc2,0xc2,0xe0,0x10,0x1, 0x9b,0x3, 0xef,0x17,0x6, 
+0xc8,0xc2,0xe0,0x10,0x1, 0xf8,0x17,0x6, 0xc4,0xc2,0xe0,0x10,0x1, 0xf8,0x17,0x6, 
+0xa1,0xc2,0xe0,0x10,0x1, 0xf8,0x17,0x6, 0xcc,0xc2,0xe0,0x10,0x1, 0xf8,0x17,0x6, 
+0xde,0xd, 0x21,0x6, 0x9c,0x28,0x85,0x29,0x52,0xe0,0x50,0x1c,0x21,0xd0,0xc3,0x0, 
+0x10,0x1, 0xd, 0x41,0x28,0xd, 0x61,0x24,0xd, 0x81,0x20,0xd, 0xe1,0x14,0xe, 0x1, 
+0x10,0xe, 0x21,0xc, 0xe, 0x41,0x8, 0xe, 0x61,0x4, 0xe, 0x81,0x0, 0xc2,0x40,0x10,
+0x1, 0xc2,0x80,0x10,0x1, 0xee,0xf2,0x6, 0xd1,0xfe,0x94,0x6, 0xa4,0xc2,0x60,0x10,
+0x1, 0xe, 0xf4,0x1, 0xc2,0x0, 0x10,0x1, 0x52,0xe0,0x14,0xc1,0x60,0x10,0x1, 0xc1,
+0xe0,0x10,0x1, 0xd, 0x21,0x2c,0xfd,0xef,0x6, 0xcd,0xd, 0xa1,0x1c,0xd, 0xc1,0x18,
+0xee,0xf8,0x6, 0xe7,0xee,0xf3,0x6, 0xb3,0x99,0x40,0xfd,0x6b,0x6, 0xec,0xfd,0x90,
+0x7, 0xec,0x8a,0x2f,0xe4,0x0, 0x2, 0xf1,0x4e,0xea,0x10,0x8e,0xeb,0xb, 0x37,0x0, 
+0xc3,0x2f,0xff,0xe4,0x20,0x5, 0x33,0xa, 0xf7,0x2, 0xc2,0xef,0xff,0xe0,0x20,0x5, 
+0x9, 0xcf,0xa, 0x0, 0x1c,0x8f,0xc, 0x9, 0xd8,0x17,0xb, 0x18,0x19,0x41,0xd9,0x75,
+0x42,0xf7,0xc5,0x5d,0xce,0x6, 0x5e,0xf7,0x6, 0x4f,0x2e,0xfa,0x4f,0x17,0xfa,0x45,
+0xd9,0x76,0x46,0xf8,0xbe,0x41,0xce,0xcd,0x42,0xf7,0xc5,0x5d,0xce,0x6, 0x43,0xa, 
+0x7c,0x5e,0xf7,0x6, 0xe9,0xb2,0x6, 0xd1,0x13,0x38,0x0, 0xd6,0xed,0x0, 0xbc,0xb, 
+0x14,0x1, 0xd5,0xd8,0x0, 0x84,0x9b,0x3, 0x27,0x28,0x57,0x1f,0x19,0x1, 0xe4,0x0, 
+0x0, 0x19,0x9b,0x0, 0x23,0x20,0x24,0x1f,0x19,0xff,0x5f,0x18,0x0, 0x43,0x31,0x54,
+0x1b,0x19,0x0, 0x43,0xf, 0x54,0x13,0x18,0x0, 0xd3,0x2, 0x6, 0xb9,0xeb,0x13,0x6, 
+0xb3,0xd6,0xf8,0x0, 0xcc,0xce,0xea,0x0, 0x1c,0x4f,0xa, 0x10,0x8e,0xec,0x8f,0xb, 
+0xb, 0x18,0x3, 0xf, 0x17,0x19,0xe4,0x0, 0x0, 0x9b,0xd6,0xed,0x2, 0x4c,0x43,0x2d,
+0xc5,0x40,0x77,0xc5,0x43,0x39,0xcb,0x42,0xf8,0xbd,0x43,0x4d,0x6b,0x40,0x63,0xbb,
+0x8c,0x79,0x40,0x63,0xd3,0x40,0x63,0xc8,0xe7,0xff,0x50,0x4e,0x4e,0xea,0x10,0x8e,
+0xeb,0x5c,0x63,0x6, 0xb, 0x17,0x2, 0x41,0xad,0x1d,0xce,0xea,0x0, 0x1c,0x8e,0xec,
+0xb, 0x37,0x18,0xd7,0x19,0x0, 0x58,0x41,0xb8,0x6d,0xe4,0x0, 0x0, 0xd, 0x8d,0xb8,
+0xd, 0xb7,0x19,0xc2,0xe0,0x10,0x1, 0xea,0xf7,0x6, 0xe7,0xd5,0xd7,0x0, 0xcc,0xce,
+0xea,0x0, 0x1c,0x4f,0xa, 0x10,0x8e,0xec,0x8f,0xb, 0xb, 0x18,0x1, 0xf, 0x17,0x17,
+0xe4,0x0, 0x0, 0xa1,0x9, 0xb4,0x1, 0xd5,0xcd,0x2, 0x4c,0x43,0xd, 0xbd,0x43,0x2d,
+0x6b,0x43,0x18,0xc3,0x40,0x6e,0xbd,0x41,0xd7,0x75,0x40,0x63,0x73,0x8c,0x78,0x40,
+0x63,0xcb,0x40,0x63,0xc0,0xe7,0xff,0x4f,0x74,0x4e,0xea,0x10,0x8e,0xeb,0x5c,0x63,
+0x6, 0xb, 0x17,0x0, 0x41,0xad,0x1d,0xce,0xea,0x0, 0x1c,0x8e,0xec,0xb, 0x37,0x16,
+0xd7,0x19,0x0, 0x58,0x41,0xb8,0x6d,0xe4,0x0, 0x0, 0xd, 0x8d,0xb8,0xd, 0xb7,0x17,
+0x4e,0xea,0x10,0xcf,0xa, 0x0, 0x1c,0x8e,0xeb,0x8f,0xc, 0x9d,0x41,0xb, 0x38,0x17,
+0x5d,0x4a,0x0, 0xb, 0x18,0x19,0xf, 0x37,0x1, 0xf, 0x17,0x3, 0xf2,0xf0,0x7, 0xec,
+0xd6,0xea,0xf4,0x45,0xe, 0x81,0x2, 0xe, 0x61,0x6, 0xe, 0x41,0xa, 0xe, 0x21,0xe, 
+0xe, 0x1, 0x12,0xd, 0xe1,0x16,0xd, 0xc1,0x1a,0xd, 0xa1,0x1e,0xd, 0x81,0x22,0xd, 
+0x61,0x26,0xd, 0x41,0x2a,0xd, 0x21,0x2e,0x1c,0x21,0x30,0x85,0x29,0x1c,0x21,0xd8,
+0xd, 0x41,0x20,0xd, 0xa1,0x14,0xd, 0x21,0x24,0xd, 0x61,0x1c,0xd, 0x81,0x18,0xd, 
+0xc1,0x10,0xd, 0xe1,0xc, 0xe, 0x1, 0x8, 0xe, 0x21,0x4, 0xc1,0x40,0x10,0x1, 0xfd,
+0xaa,0x6, 0xfe,0xa, 0xed,0x1, 0xc6,0xf7,0x7f,0xff,0xe, 0xed,0x1, 0xe7,0xff,0xfa,
+0xd0,0xc2,0xe0,0x10,0x1, 0xf2,0xf7,0x6, 0xdf,0x22,0xe0,0x24,0x98,0x60,0xe7,0xff,
+0xe8,0xd6,0xc1,0x40,0x10,0x1, 0xc2,0x20,0x10,0x1, 0xfd,0x4a,0x6, 0xc8,0xfe,0x31,
+0x6, 0xcc,0xe, 0xea,0x2, 0x22,0xe0,0xfa,0xa, 0xed,0x1, 0x56,0xf7,0x40,0x22,0xe0,
+0x4c,0xe7,0xff,0x4d,0xf2,0x9a,0xe1,0x18,0x11,0x0, 0xe, 0xea,0x0, 0xe4,0x0, 0x0, 
+0x15,0x98,0x62,0xe7,0xff,0xd6,0x2c,0xc3,0x0, 0x10,0x1, 0xf2,0xf8,0x5, 0x38,0xd2,
+0xe1,0x1d,0x16,0xf8,0x18,0x5, 0x38,0xc3,0x0, 0x10,0x1, 0xfa,0xf8,0x6, 0xdf,0xe4,
+0x0, 0x7, 0x25,0xc2,0x0, 0x10,0x1, 0xfe,0x10,0x6, 0xc4,0x22,0xe5,0x16,0xa, 0xed,
+0x1, 0x57,0x17,0x8, 0x23,0x0, 0x2c,0xe7,0xff,0xde,0xda,0xe4,0x0, 0x6, 0x5d,0x57,
+0x17,0x40,0x23,0x0, 0x9c,0xc6,0xf7,0x20,0x0, 0x22,0xe0,0x82,0x12,0xf1,0x0, 0x9e,
+0xe1,0x5e,0xf7,0x0, 0x1a,0xf1,0x0, 0xc3,0x0, 0x10,0x1, 0x98,0x64,0xf3,0x18,0x6, 
+0xae,0xd6,0xf8,0x17,0x5, 0xe4,0x0, 0x6, 0x99,0xc, 0xa, 0x0, 0xe4,0x0, 0x6, 0x8b,
+0xc1,0xc0,0x10,0x1, 0xfd,0xce,0x6, 0xe2,0x22,0xe8,0xca,0xa, 0xed,0x1, 0x56,0xf7,
+0x8, 0x22,0xe0,0x88,0x12,0xf0,0x0, 0x9e,0xe1,0x1a,0xf0,0x0, 0xe7,0xff,0x4c,0xfe,
+0xc2,0xe0,0x10,0x1, 0x13,0x10,0x0, 0xf2,0xf7,0x6, 0xda,0xd7,0x17,0x18,0xb1,0xe4,
+0x0, 0x2, 0x3d,0x18,0x10,0x0, 0xe4,0x0, 0x4, 0xa3,0xc1,0xe0,0x10,0x1, 0xc1,0x80,
+0x10,0x1, 0xc1,0x60,0x10,0x1, 0xfd,0xef,0x6, 0xa1,0xfd,0x8c,0x7, 0xec,0xfd,0x6b,
+0x6, 0xb4,0xd2,0xe3,0x7, 0x76,0x12,0xec,0x0, 0x22,0xe4,0x2e,0xc2,0xe0,0x10,0x1, 
+0xf8,0x17,0x5, 0x3a,0xa, 0xed,0x1, 0x56,0xf7,0x8, 0xd2,0xe0,0x6, 0x6a,0xc2,0xe0,
+0x10,0x1, 0x9b,0x1, 0xfb,0x17,0x5, 0x38,0xe7,0xff,0xd7,0x88,0xe7,0xff,0x4c,0x3e,
+0x12,0xec,0x0, 0xd2,0xe1,0x15,0x56,0xa, 0xec,0x17,0xb, 0xb, 0x1, 0x43,0x18,0xbd,
+0x5f,0x18,0x6, 0x4e,0xf8,0xfa,0x47,0x17,0xc6,0x42,0xf8,0xbd,0xc2,0xe0,0x3e,0x8c,
+0x20,0x0, 0x7d,0xa, 0xec,0x19,0xb, 0xb, 0x3, 0x43,0x18,0xbd,0x5f,0x18,0x6, 0x4e,
+0xf8,0xfa,0x47,0x17,0xc6,0x42,0xf8,0xbd,0xc2,0xe0,0x3e,0x88,0x20,0x9, 0xc5,0xe7,
+0xff,0x4c,0x98,0xd0,0x60,0x13,0x52,0xe7,0xff,0xdc,0xda,0xc2,0xe0,0x10,0x1, 0xef,
+0x17,0x6, 0xc2,0xd3,0x1, 0x12,0xd6,0xe4,0x0, 0x4, 0x57,0x9a,0xfe,0xe, 0xee,0x1, 
+0x13,0x2c,0x0, 0xc2,0xe0,0x10,0x1, 0x9b,0x0, 0xfe,0xf7,0x8, 0x2, 0xe4,0x0, 0x0, 
+0x35,0xb, 0x57,0x1, 0x9f,0x1, 0xf, 0x4b,0x1, 0x5f,0x18,0x0, 0xb, 0x57,0x3, 0x1e,
+0xf7,0x1c,0xf, 0x4b,0x3, 0x9d,0x64,0xd7,0x19,0xff,0x56,0xe7,0xff,0xf7,0xfa,0xe7,
+0xff,0xdd,0x26,0xd, 0x21,0x26,0xe, 0x21,0x6, 0xe, 0x1, 0xa, 0xd, 0xe1,0xe, 0xd, 
+0xc1,0x12,0xd, 0xa1,0x16,0xd, 0x81,0x1a,0xd, 0x61,0x1e,0xd, 0x41,0x22,0x98,0x61,
+0x1c,0x21,0x28,0xe7,0xff,0xe5,0x2d,0x18,0xf, 0x0, 0x9a,0xe4,0xe4,0x0, 0x3, 0xd5,
+0xd2,0xe4,0x8, 0xc6,0xa, 0xed,0x1, 0x56,0xf7,0x8, 0x22,0xe0,0x5c,0x9a,0xe3,0xc, 
+0xe, 0x1, 0xe, 0xea,0x0, 0xc2,0xe0,0x10,0x1, 0xf8,0x17,0x5, 0x3a,0xe4,0x0, 0x3, 
+0xc9,0x12,0xef,0x0, 0x9e,0xe1,0x1a,0xef,0x0, 0xc1,0xa0,0x10,0x1, 0xc1,0xc0,0x10,
+0x1, 0xfd,0xad,0x6, 0xfd,0xfd,0xce,0xa, 0x54,0x12,0xed,0x0, 0x22,0xe9,0xba,0xb, 
+0xb, 0x0, 0xa, 0xee,0x0, 0x43,0x58,0xbd,0x5f,0x5a,0x6, 0x4f,0x3a,0xfa,0x47,0x59,
+0xd6,0x43,0x3a,0xcd,0xc3,0x20,0x25,0x8c,0x20,0x0, 0x7d,0xb, 0x2e,0x3, 0xb, 0x4b,
+0x3, 0x43,0x5a,0xcd,0x5f,0x5a,0x6, 0x4f,0x3a,0xfa,0x47,0x59,0xd6,0x43,0x3a,0xcd,
+0xc3,0x20,0x29,0xe8,0x20,0x0, 0xd9,0x8e,0xf8,0x9b,0x22,0x42,0xf7,0xc8,0xe, 0xec,
+0x17,0xc2,0xe0,0x10,0x1, 0xeb,0x17,0x6, 0xb6,0xc2,0xe0,0x10,0x1, 0xea,0xf7,0xa, 
+0x56,0x8e,0xf8,0x43,0x37,0xc8,0x9a,0x1, 0xf, 0x2c,0x19,0x1a,0xc, 0x0, 0x98,0x61,
+0xe7,0xff,0xe3,0xd2,0x1a,0xd, 0x0, 0x18,0xf, 0x0, 0xc2,0xe0,0x10,0x1, 0x13,0xf, 
+0x0, 0xf2,0xf7,0x6, 0xb0,0xd7,0x17,0xa, 0x61,0x12,0xed,0x0, 0xd2,0xe1,0x9, 0x46,
+0xa, 0xeb,0x0, 0xb, 0x2e,0x1, 0x43,0x37,0xcd,0x5f,0x39,0x6, 0x4f,0x19,0xfa,0x47,
+0x38,0xce,0x43,0x19,0xc5,0xc3,0x0, 0x25,0x8c,0x20,0x0, 0x7d,0xb, 0xe, 0x3, 0xb, 
+0x2b,0x3, 0x43,0x39,0xc5,0x5f,0x39,0x6, 0x4f,0x19,0xfa,0x47,0x38,0xce,0x43,0x19,
+0xc5,0xc3,0x0, 0x29,0xe8,0x20,0x3, 0xbd,0xe, 0xec,0x17,0xc2,0xe0,0x10,0x1, 0xea,
+0xf7,0x6, 0xb7,0xe, 0xec,0x19,0x9a,0xe1,0x98,0x61,0x1a,0xec,0x0, 0xe7,0xff,0xe2,
+0xf8,0x18,0xd, 0x0, 0xe4,0x0, 0x1, 0xdb,0xd2,0xe5,0x1, 0xae,0xc, 0xe, 0x1, 0xe7,
+0xff,0x48,0x36,0x9b,0x3, 0xc2,0xe0,0x10,0x1, 0xfb,0x17,0x6, 0xdf,0xe7,0xff,0xd9,
+0x8e,0xc2,0xe0,0x10,0x1, 0x98,0x60,0xf8,0x17,0x5, 0x38,0xe7,0xff,0xe2,0x9c,0xc2,
+0xe0,0x10,0x1, 0xf8,0x17,0x6, 0xde,0x9a,0xe6,0xe4,0x0, 0x1, 0x3b,0xd2,0xe6,0x5, 
+0xa6,0xa, 0xed,0x1, 0x56,0xf7,0x40,0x22,0xe0,0x26,0x98,0x63,0xe7,0xff,0xd0,0x1a,
+0xc3,0x0, 0x10,0x1, 0xf2,0xf8,0x6, 0xde,0x9e,0xe1,0x5e,0xf7,0x0, 0xfa,0xf8,0x6, 
+0xde,0x5e,0xe6,0x53,0xa, 0xed,0x1, 0x20,0x0, 0xf1,0x56,0xf7,0x40,0x22,0xe0,0x3c,
+0x9a,0xe1,0x18,0x11,0x0, 0xe, 0xea,0x0, 0xe4,0x0, 0x0, 0xf3,0xc, 0xa, 0x0, 0x98,
+0x62,0xe, 0x21,0x6, 0xe, 0x1, 0xa, 0xd, 0xe1,0xe, 0xd, 0xc1,0x12,0xd, 0xa1,0x16,
+0xd, 0x81,0x1a,0xd, 0x61,0x1e,0xd, 0x41,0x22,0xd, 0x21,0x26,0x1c,0x21,0x28,0xe7,
+0xff,0xcf,0x75,0x56,0xf7,0x8, 0x22,0xe1,0x2c,0x18,0x10,0x0, 0x9a,0xe2,0xe4,0x0, 
+0x0, 0x51,0xfe,0xe0,0x7f,0xff,0xc3,0x20,0x10,0x1, 0x18,0xf, 0x0, 0xf8,0x19,0x6, 
+0xd8,0xe, 0xeb,0x1, 0xff,0x39,0x6, 0xd8,0xe, 0xeb,0x3, 0xe, 0xeb,0x5, 0xe, 0xeb,
+0x7, 0x1b,0x19,0x1, 0x9a,0xe5,0xe, 0xea,0x0, 0xe4,0x0, 0x0, 0x31,0xa, 0xee,0x1, 
+0xcb,0x0, 0xff,0xfd,0x9e,0xe1,0x5e,0xf7,0x4, 0xd6,0xf8,0xed,0x15,0xe7,0xff,0xfb,
+0x41,0xe, 0x21,0x6, 0xe, 0x1, 0xa, 0xd, 0xe1,0xe, 0xd, 0xc1,0x12,0xd, 0xa1,0x16,
+0xd, 0x81,0x1a,0xd, 0x61,0x1e,0xd, 0x41,0x22,0xd, 0x21,0x26,0x1c,0x21,0x28,0x85,
+0x29,0x98,0x60,0xe7,0xff,0xc7,0xb1,0x98,0x61,0xe7,0xff,0xc7,0xa5,0xc2,0xe0,0x10,
+0x1, 0x9c,0x38,0x5c,0x63,0x0, 0xef,0xb7,0x5, 0x42,0xd3,0xa0,0x4, 0xf2,0x9a,0xe0,
+0xc3,0x74,0x0, 0x1, 0x8b,0x57,0xcb,0x7b,0x24,0x14,0x4f,0x37,0x10,0xb, 0x1b,0x1, 
+0x4f,0x18,0xce,0x1f,0x21,0x4, 0x57,0x18,0xf, 0x8f,0x37,0x1b,0x19,0x0, 0x8f,0x58,
+0x9e,0xe1,0x5f,0x5a,0x0, 0xd2,0xe4,0xff,0x2e,0xc2,0xe0,0x10,0x1, 0xfe,0xf7,0x9, 
+0x2e,0x13,0x61,0x4, 0x13,0x81,0x5, 0x13,0x1, 0x6, 0x43,0xdb,0xe4,0x43,0x20,0xdd,
+0xcc,0x63,0x0, 0x26,0x40,0x9e,0xc4,0x8c,0x77,0x5f,0x39,0x0, 0x9a,0xe0,0x40,0xbc,
+0xc4,0xe4,0x0, 0x0, 0x81,0xd7,0x78,0x0, 0xbd,0x8b,0x19,0xd7,0xd7,0x0, 0x8c,0x43,
+0x19,0xe5,0xd4,0x97,0x0, 0x3c,0x43,0x19,0x2d,0x5f,0x18,0x0, 0xd3,0xb, 0x1, 0x65,
+0x8f,0x1d,0x11,0x18,0x0, 0x21,0x0, 0x54,0x4f,0x17,0x8, 0x8f,0x3, 0x8, 0xd8,0x0, 
+0xcc,0xc6,0x0, 0xff,0x41,0x6, 0x40,0xd, 0x18,0x1, 0x9f,0x21,0x9e,0xe1,0x5f,0x39,
+0x0, 0x5f,0x17,0x0, 0xd7,0x58,0xfe,0xd, 0x9c,0x28,0x85,0x29,0xc3,0x0, 0x10,0x1, 
+0xc3,0x40,0x10,0x1, 0x5c,0x63,0x0, 0xff,0x18,0x9, 0x8, 0x9a,0xe0,0xff,0x5a,0x8, 
+0x28,0xe4,0x0, 0x0, 0x31,0x4f,0x37,0x10,0xb, 0x98,0x0, 0xb, 0x78,0x2, 0x8f,0x3a,
+0x8f,0x7c,0x9e,0xe1,0xf, 0x79,0x0, 0x9f,0x4, 0x5f,0x37,0x0, 0xd4,0x79,0xff,0x4d,
+0x85,0x29,0x9c,0x38,0xd, 0x41,0x0, 0xc1,0x40,0x10,0x1, 0xfd,0x4a,0xa, 0x70,0x12,
+0xea,0x4, 0x10,0x6a,0x1, 0xd, 0x21,0x4, 0x40,0x63,0xbb,0xe7,0xff,0xff,0x62,0x13,
+0xa, 0x1, 0xc3,0x20,0x10,0x1, 0x13,0x4a,0x4, 0xea,0xf9,0x8, 0x28,0x43,0x5a,0xc3,
+0xff,0x79,0x8, 0x28,0x9b,0x0, 0xe4,0x0, 0x0, 0x35,0x4f,0x38,0x10,0x9f,0x1, 0x8f,
+0x3b,0x5f,0x18,0x0, 0xf, 0x39,0x2, 0x5f,0x99,0x6, 0x5f,0x37,0x1d,0x4a,0xfc,0xb8,
+0xd7,0x58,0xff,0x54,0xc3,0x0, 0x10,0x1, 0xee,0xf8,0x6, 0xa7,0xc2,0xe2,0x32,0x88,
+0xc3,0x20,0x10,0x1, 0x20,0x0, 0x45,0xff,0x39,0x5, 0x6, 0x4e,0xf7,0xa, 0xe, 0xf9,
+0x23,0xe4,0x0, 0x0, 0x39,0xcb,0x0, 0x1, 0x1b,0xc2,0xe0,0x8d,0x68,0x20,0x0, 0x25,
+0x4e,0xf7,0x12,0x5f,0x17,0x6, 0xff,0x39,0x5, 0x6, 0xf, 0x19,0x23,0xd, 0x41,0x2, 
+0xd, 0x21,0x6, 0x9c,0x28,0x85,0x29,0xc3,0x0, 0x10,0x1, 0x5c,0x84,0x0, 0xff,0x18,
+0x9, 0x8, 0x20,0xa0,0x6c,0xe4,0x0, 0x0, 0x4b,0x4f,0x37,0x8, 0x9e,0xe1,0x43,0x59,
+0xc4,0x8f,0x23,0xb, 0x5a,0x0, 0xf, 0x59,0x1, 0xe4,0x0, 0x0, 0xd, 0x9a,0xe0,0x5f,
+0x37,0x0, 0xd4,0x99,0xff,0x3d,0xe4,0x0, 0x0, 0x7b,0x20,0xa4,0xe6,0xe4,0x0, 0x0, 
+0x31,0x4f,0x37,0x8, 0x9e,0xe1,0x43,0x43,0xcc,0x8f,0x38,0xb, 0x5a,0x0, 0xf, 0x59,
+0x1, 0xe4,0x0, 0x0, 0xd, 0x9a,0xe0,0x5f,0x37,0x0, 0xd4,0x99,0xff,0x3d,0xc2,0xe0,
+0x10,0x1, 0xfe,0xf7,0xa, 0x70,0x10,0x77,0x1, 0x12,0xf7,0x4, 0x40,0x63,0xbb,0xe7,
+0xff,0xfd,0x9b,0x85,0x29,0xc2,0xe0,0x10,0x1, 0x5c,0x63,0x0, 0xf2,0xf7,0x5, 0x69,
+0x22,0xe9,0xa8,0xc2,0xe0,0x10,0x1, 0xfe,0xf7,0xa, 0x70,0x9b,0x0, 0x13,0x57,0x4, 
+0x13,0x77,0x0, 0x1f,0x9a,0xff,0xc2,0xe0,0x10,0x1, 0x4f,0x5a,0x8, 0x4f,0x9c,0x8, 
+0x9f,0x5f,0xfe,0xf7,0x9, 0x8, 0x9b,0xa2,0xe4,0x0, 0x0, 0x77,0x27,0x24,0x2d,0xd7,
+0x1c,0x0, 0x42,0xd7,0x1a,0x1, 0x66,0x20,0x60,0x7e,0xd7,0x1a,0x0, 0x3a,0x23,0x20,
+0x36,0xb, 0x37,0x1, 0x4f,0x39,0x10,0xe4,0x0, 0x0, 0x2b,0xb, 0x37,0x1, 0xcf,0x39,
+0x0, 0x3, 0xe4,0x0, 0x0, 0x15,0xb, 0x37,0x0, 0x43,0x39,0xe8,0xf, 0x37,0x1, 0x9f,
+0x1, 0x9e,0xe2,0x5f,0x38,0x0, 0xd7,0x79,0xfe,0x35,0x85,0x29,0x1c,0x21,0xd8,0xff,
+0x0, 0xdf,0x3f,0xd, 0xe1,0xc, 0xc1,0xe0,0x10,0x1, 0xfd,0xef,0x6, 0xfe,0xa, 0xef,
+0x1, 0x46,0xf7,0xc4,0xe, 0xef,0x1, 0xc2,0xe0,0x10,0x1, 0xd, 0x21,0x24,0xf8,0x17,
+0x6, 0xc5,0xd, 0x41,0x20,0xe, 0x1, 0x8, 0xd, 0x61,0x1c,0xd, 0x81,0x18,0xd, 0xa1,
+0x14,0xd, 0xc1,0x10,0xe, 0x21,0x4, 0xe7,0xff,0xd9,0x4a,0x98,0x67,0xe7,0xff,0xc9,
+0x38,0x98,0x60,0xe7,0xff,0xfe,0x84,0xc2,0xe0,0x10,0x1, 0xf8,0x17,0x5, 0x45,0xc2,
+0xe0,0x10,0x1, 0xf8,0x17,0x5, 0x52,0xc2,0xe0,0x10,0x1, 0xc1,0x40,0x10,0x1, 0xf3,
+0x37,0xa, 0x74,0xfd,0x4a,0x9, 0x8, 0xc3,0x40,0x10,0x1, 0x8a,0xa, 0x8b,0xa, 0x9a,
+0xe0,0xff,0x5a,0x8, 0x28,0xe4,0x0, 0x0, 0x31,0x4f,0x77,0x10,0xb, 0xb8,0x0, 0xb, 
+0x98,0x2, 0x8f,0x7a,0x8f,0x9d,0x9e,0xe1,0xf, 0x9b,0x0, 0x9f,0x4, 0x5f,0x77,0x4, 
+0xd7,0x3b,0xff,0x4d,0x9a,0xe0,0x8b,0x17,0xe4,0x0, 0x0, 0x33,0x4f,0x77,0x10,0x8f,
+0x7a,0xf, 0x7b,0x2, 0x5f,0x6c,0x91,0x20,0x0, 0x21,0x9f,0x1, 0x5f,0x18,0x4, 0x9e,
+0xe1,0x5f,0x77,0x4, 0xd7,0x3b,0xff,0x45,0x9f,0x3d,0xd7,0x38,0x1, 0x14,0x98,0x61,
+0xe7,0xff,0xe8,0x36,0x5c,0x63,0x0, 0x20,0x60,0x54,0xc3,0x0, 0x10,0x1, 0x9a,0xe1,
+0xfa,0xf8,0x5, 0x45,0xc3,0x0, 0x10,0x1, 0xfa,0xf8,0x5, 0x52,0xc2,0xe0,0x10,0x1, 
+0xc1,0xc0,0x10,0x1, 0xf3,0x77,0xa, 0x70,0xfd,0xce,0x6, 0xe0,0xa, 0xef,0x1, 0x13,
+0x2e,0x0, 0x9b,0x0, 0xe4,0x0, 0x0, 0x51,0x4f,0x58,0x8, 0x8f,0x4a,0xb, 0x5a,0x0, 
+0xc3,0x40,0x11,0x88,0x20,0x0, 0x35,0xca,0xf7,0x20,0x0, 0x9b,0x20,0xe4,0x0, 0x0, 
+0x15,0x5f,0x45,0x91,0x20,0x0, 0x19,0x52,0xf7,0x40,0x9f,0x1, 0x5f,0x58,0x4, 0xd7,
+0x7a,0xfe,0xcd,0x1b,0x2e,0x0, 0xe, 0xef,0x1, 0xc3,0x14,0x0, 0x1, 0xcb,0x18,0x79,
+0xe0,0xc2,0xe0,0x10,0x1, 0xeb,0x37,0x0, 0x4b,0xf, 0x38,0x1, 0xc3,0x0, 0x10,0x1, 
+0xc2,0x20,0x10,0x1, 0xf8,0x18,0x5, 0x39,0xfe,0x31,0x5, 0x58,0xc3,0x0, 0x10,0x1, 
+0xea,0xf7,0x0, 0x4b,0x18,0x11,0x0, 0xf8,0x18,0x5, 0x3c,0x5e,0xf7,0x0, 0xc3,0x20,
+0x10,0x1, 0xc1,0xa0,0x10,0x1, 0xc1,0x80,0x10,0x1, 0xc1,0x60,0x10,0x1, 0xc1,0x40,
+0x10,0x1, 0xc2,0xe0,0x14,0x4, 0xff,0x39,0x6, 0xdf,0xfd,0xad,0x6, 0xa0,0xfd,0x8c,
+0x6, 0xdc,0xfd,0x6b,0x6, 0xa3,0xfd,0x4a,0x6, 0xa8,0x20,0x9, 0x2d,0x9b,0x60,0x8a,
+0xf0,0x8b,0x5b,0x9b,0x0, 0xb, 0xb7,0x0, 0xb, 0x97,0x2, 0x8f,0x9d,0x5f,0x86,0x59,
+0x20,0x0, 0x31,0x9f,0x61,0x5f,0x7b,0x0, 0xe4,0x0, 0x0, 0x37,0x5f,0x87,0x71,0x20,
+0x0, 0x51,0x9f,0x41,0xc3,0x80,0x25,0x68,0x5f,0x5a,0x0, 0x20,0x0, 0x21,0x9f,0x1, 
+0x5f,0x18,0x0, 0xc3,0x80,0x10,0x1, 0x9e,0xe4,0xff,0x9c,0x9, 0x1c,0xd6,0xfc,0xfe,
+0x46,0xc2,0xe0,0x10,0x1, 0x1b,0x71,0x0, 0xfb,0x57,0x5, 0x39,0xc2,0xe0,0x10,0x1, 
+0xfb,0x17,0x5, 0x3c,0x23,0xc, 0x4a,0xe, 0xea,0x2, 0x9e,0xfc,0x26,0xe8,0x29,0x18,
+0xc, 0x0, 0xe4,0x0, 0x3, 0x61,0x98,0x60,0x99,0x0, 0x9b,0xc0,0x8b,0x63,0x8b,0x48,
+0x8b,0xbe,0x9b,0x0, 0xb, 0x90,0x0, 0xa, 0xf0,0x2, 0x8e,0xfc,0x27,0x8, 0x8b,0xc2,
+0xe0,0x16,0x68,0x20,0x0, 0x31,0x9c,0x61,0x5c,0x63,0x0, 0xe4,0x0, 0x0, 0x9f,0x5e,
+0xe6,0x59,0x20,0x1, 0x21,0x9f,0x61,0x5f,0x7b,0x0, 0xe4,0x0, 0x0, 0x81,0xd3,0x5, 
+0x1, 0x12,0x5e,0xec,0x71,0x20,0x0, 0x31,0x9d,0x1, 0x5d,0x8, 0x0, 0xe4,0x0, 0x0, 
+0x5b,0x5e,0xe6,0x59,0x20,0x0, 0x99,0x9f,0x41,0x5f,0x5a,0x0, 0xe4,0x0, 0x0, 0x3d,
+0x5e,0xe8,0x11,0x20,0x0, 0x31,0x9f,0xc1,0x5f,0xde,0x0, 0xe4,0x0, 0x0, 0x1f,0x5e,
+0xe6,0x59,0x20,0x0, 0x21,0x9f,0xa1,0x5f,0xbd,0x0, 0x9f,0x1, 0x9e,0x4, 0x5f,0x18,
+0x0, 0xd3,0x6, 0xfc,0x9e,0xc3,0x80,0x10,0x1, 0xc2,0x0, 0x10,0x1, 0xf8,0x7c,0x5, 
+0x3b,0xfb,0x50,0x5, 0x57,0xc0,0x60,0x10,0x1, 0xc3,0x40,0x10,0x1, 0xfb,0x63,0x5, 
+0x56,0xfb,0xda,0x5, 0x44,0xc3,0x60,0x10,0x1, 0xc3,0xd4,0x0, 0x1, 0xf9,0x1b,0x5, 
+0x60,0xca,0xfe,0x79,0xc4,0xc1,0x0, 0x10,0x1, 0xfb,0xa8,0x5, 0x59,0x13,0x11,0x0, 
+0xf, 0x17,0x1, 0xc2,0xe0,0x10,0x1, 0xf3,0xb7,0x5, 0x39,0xca,0xfe,0x79,0xc8,0xf, 
+0xb7,0x1, 0xcb,0xde,0x79,0xcc,0xe, 0xea,0x2, 0x5c,0x97,0x4, 0xc, 0x9e,0x1, 0x22,
+0xe4,0xba,0x18,0xb, 0x0, 0x18,0xc, 0x0, 0xd3,0xa4,0x0, 0xe5,0xf2,0xfc,0x5, 0x3b,
+0xd2,0xe2,0x6, 0x29,0xf2,0xfb,0x5, 0x60,0xd2,0xe1,0x5, 0xe9,0xf2,0xfa,0x5, 0x44,
+0xd2,0xe0,0x5, 0xaa,0x9a,0xe2,0xe, 0xea,0x0, 0xe4,0x0, 0x1, 0x59,0x22,0xe8,0xf6,
+0xd3,0xa4,0x0, 0xcd,0xf2,0xfc,0x5, 0x3b,0x26,0xe8,0x99,0xf2,0xfb,0x5, 0x60,0x26,
+0xe4,0x7d,0xf2,0xfa,0x5, 0x44,0x22,0xe0,0x60,0x12,0xec,0x0, 0x9e,0xe1,0x5e,0xf7,
+0x0, 0x1a,0xec,0x0, 0xd2,0xe1,0x4, 0x9, 0x9a,0xe3,0xe4,0x0, 0x0, 0xd, 0x9a,0xe1,
+0xe, 0xea,0x0, 0x18,0xc, 0x0, 0xe4,0x0, 0x0, 0xdf,0x22,0xec,0x8e,0x1f,0x0, 0x80,
+0x1a,0xf9,0x0, 0x1b,0xd, 0x0, 0x98,0x62,0xe7,0xff,0xd5,0x62,0x9a,0xe4,0x18,0xd, 
+0x0, 0xe, 0xea,0x0, 0x18,0x11,0x0, 0x9a,0xe1,0xe4,0x0, 0x1, 0x43,0xd2,0xe4,0x0, 
+0x86,0xe, 0xea,0x0, 0x9a,0xe5,0x27,0x8, 0xe7,0xe4,0x0, 0x0, 0x79,0xd2,0xe5,0x1, 
+0xf6,0x27,0x8, 0xb1,0xf2,0xe3,0x5, 0x56,0x26,0xe8,0x95,0xf2,0xf0,0x5, 0x57,0x26,
+0xe4,0x79,0xf2,0xe8,0x5, 0x59,0x22,0xe0,0x5c,0x12,0xeb,0x0, 0x9e,0xe1,0x5e,0xf7,
+0x0, 0x1a,0xeb,0x0, 0x26,0xe4,0x45,0x9a,0xe6,0xe4,0x0, 0x0, 0xd, 0x9a,0xe4,0xe, 
+0xea,0x0, 0x18,0xb, 0x0, 0x9a,0xe0,0xe4,0x0, 0x0, 0xa7,0xd2,0xe6,0x0, 0x3a,0x22,
+0xe3,0xda,0x52,0xe0,0x40,0x1a,0xed,0x0, 0x9a,0xe3,0x98,0x62,0x1a,0xf9,0x0, 0xe7,
+0xff,0xd4,0x74,0x9a,0xe1,0x18,0xd, 0x0, 0xe, 0xea,0x0, 0x18,0xb, 0x0, 0x18,0xc, 
+0x0, 0xe4,0x0, 0x0, 0x53,0xe, 0xea,0x2, 0x22,0xe7,0x34,0x52,0xe0,0x40,0x1a,0xed,
+0x0, 0x9a,0xe3,0x98,0x62,0x1a,0xf9,0x0, 0xe7,0xff,0xd4,0x22,0x9a,0xe1,0x18,0xd, 
+0x0, 0xe, 0xea,0x0, 0x18,0xc, 0x0, 0x18,0xb, 0x0, 0xc3,0x0, 0x10,0x1, 0xfa,0xf8,
+0x6, 0xc5,0x22,0xe0,0x1c,0xe7,0xff,0xbd,0xda,0x98,0x61,0xe7,0xff,0xcd,0x44,0x98,
+0x61,0xe7,0xff,0xc3,0xe8,0x5c,0x63,0x0, 0x20,0x60,0x3e,0x12,0xee,0x0, 0x9e,0xe1,
+0x1a,0xee,0x0, 0xe4,0x0, 0x0, 0xf, 0x18,0xe, 0x0, 0x12,0xee,0x0, 0x26,0xe8,0x7d,
+0xc2,0xe0,0x10,0x1, 0xf8,0x17,0x6, 0xdd,0xc2,0xe0,0x10,0x1, 0x18,0xe, 0x0, 0xf8,
+0x17,0x6, 0xf4,0xa, 0xef,0x1, 0x52,0xf7,0x80,0xe, 0xef,0x1, 0xe, 0x21,0x6, 0xe, 
+0x1, 0xa, 0xd, 0xe1,0xe, 0xd, 0xc1,0x12,0xd, 0xa1,0x16,0xd, 0x81,0x1a,0xd, 0x61,
+0x1e,0xd, 0x41,0x22,0xd, 0x21,0x26,0x1c,0x21,0x28,0x85,0x29,0x1c,0x21,0xe8,0xd, 
+0x21,0x14,0xd, 0x41,0x10,0xd, 0x81,0x8, 0xd, 0xa1,0x4, 0xd, 0xc1,0x0, 0xd, 0x61,
+0xc, 0xe7,0xff,0xf4,0x2, 0xc1,0xc0,0x10,0x1, 0xfd,0xce,0x5, 0x6, 0x88,0x6e,0xe7,
+0xff,0x67,0x9e,0xc1,0x80,0x10,0x1, 0xc1,0x40,0x10,0x1, 0xfd,0x8c,0x7, 0xec,0xc1,
+0xa0,0x10,0x1, 0x12,0xec,0x0, 0xfd,0x4a,0x9, 0x8, 0xfd,0xad,0x8, 0x28,0x22,0xe0,
+0x3a,0x12,0xec,0x0, 0xd2,0xe0,0x5, 0x56,0xe4,0x0, 0x1, 0xfb,0x12,0xec,0x6, 0x4f,
+0x17,0x10,0x4e,0xf7,0x10,0x8f,0xa, 0x8e,0xea,0xb, 0x18,0x0, 0xa, 0xf7,0x2, 0x8e,
+0xf8,0xc2,0xe0,0xbb,0x6c,0x23,0xff,0x71,0xc2,0xe0,0x10,0x1, 0x89,0x6a,0xf3,0x77,
+0xa, 0x74,0x9b,0x0, 0x8a,0xea,0xe4,0x0, 0x0, 0x55,0xb, 0x57,0x1, 0xb, 0x37,0x3, 
+0x4f,0x5a,0x8, 0x4f,0x98,0x10,0xf, 0x57,0x1, 0x4f,0x39,0x8, 0x8f,0x8d,0x5f,0x39,
+0x6, 0x5f,0x5a,0x6, 0xf, 0x37,0x3, 0x9f,0x1, 0x8f,0x3a,0x9e,0xe4,0xf, 0x3c,0x0, 
+0x5f,0x38,0x0, 0xd7,0x79,0xfe,0xbd,0x88,0x6e,0xe7,0xff,0x66,0x8a,0x12,0xec,0x0, 
+0x22,0xe6,0x46,0xc2,0xe0,0x10,0x1, 0x9b,0x2, 0xf3,0x77,0xa, 0x74,0x9a,0xe0,0xe4,
+0x0, 0x0, 0x49,0xb, 0x4b,0x0, 0xb, 0x2b,0x2, 0x43,0x5a,0xc0,0x43,0x39,0xc0,0x4f,
+0x97,0x10,0xf, 0x2b,0x3, 0xf, 0x4b,0x1, 0x8f,0x8d,0x8f,0x3a,0x9e,0xe1,0xf, 0x3c,
+0x0, 0x9d,0x64,0x5f,0x37,0x0, 0xd7,0x79,0xfe,0xed,0xe7,0xff,0xfe,0xaf,0xc2,0xe0,
+0x10,0x1, 0x8b,0x8a,0xf3,0x77,0xa, 0x74,0x9a,0xe0,0x9f,0x7f,0xe4,0x0, 0x0, 0x8b,
+0x4f,0x17,0x8, 0x1f,0x38,0x1, 0x4f,0x59,0x8, 0x8f,0x4a,0xb, 0xba,0x0, 0x27,0xbc,
+0x1a,0xc, 0x1a,0x1, 0x4f,0x58,0x8, 0x8f,0x5c,0xb, 0xba,0x0, 0x27,0xbc,0x1a,0xc, 
+0x1a,0x1, 0x4f,0x18,0x8, 0x8f,0xa, 0x4f,0x57,0x10,0xb, 0xb8,0x0, 0x8f,0x4d,0x4f,
+0x39,0x8, 0x9e,0xe1,0x8f,0x2a,0x5e,0xf7,0x0, 0xb, 0x19,0x0, 0x8f,0x1d,0xf, 0x1a,
+0x0, 0xd7,0x77,0xfd,0xfc,0xd, 0xc1,0x2, 0xd, 0xa1,0x6, 0xd, 0x81,0xa, 0xd, 0x61,
+0xe, 0xd, 0x41,0x12,0xd, 0x21,0x16,0x1c,0x21,0x18,0x85,0x29,0x9c,0x30,0xd, 0x21,
+0xc, 0xd, 0x41,0x8, 0xc2,0xe0,0x10,0x1, 0xf3,0x17,0x6, 0xc5,0x23,0x0, 0x2c,0xf8,
+0x17,0x6, 0xc5,0xe4,0x0, 0x1, 0xc1,0xc2,0xe0,0x10,0x1, 0xee,0xf7,0x6, 0xaa,0x9e,
+0xfd,0xd2,0xe3,0x6, 0x91,0xe7,0xff,0xfc,0xee,0x98,0x61,0xe7,0xff,0xf3,0x14,0xe7,
+0xff,0xf1,0x6, 0xc0,0xa0,0x10,0x1, 0xfc,0xa5,0x5, 0x6, 0x88,0x65,0xc, 0xa1,0x4, 
+0xe7,0xff,0x64,0x9c,0xc1,0x40,0x10,0x1, 0xc, 0xa1,0x6, 0xf2,0xea,0x7, 0xec,0x22,
+0xe0,0x68,0x98,0x61,0x98,0x81,0xe7,0xff,0x42,0x26,0xf2,0xea,0x7, 0xec,0x22,0xe0,
+0x2c,0xe7,0xff,0xcd,0xf2,0xe7,0xff,0xce,0xf0,0xf3,0xa, 0x7, 0xec,0xc2,0xe0,0x10,
+0x1, 0x23,0x0, 0x74,0xc3,0x0, 0x10,0x1, 0xf3,0x18,0x5, 0x45,0x23,0x0, 0x4a,0xeb,
+0x17,0x6, 0xff,0x53,0x18,0x8, 0xef,0x17,0x6, 0xff,0xe4,0x0, 0x0, 0x33,0xeb,0x17,
+0x6, 0xff,0x9b,0x37,0x47,0x18,0xcc,0xef,0x17,0x6, 0xff,0xc2,0xe0,0x10,0x1, 0xf8,
+0x17,0x7, 0xec,0xc2,0xe0,0x10,0x1, 0xee,0xf7,0x6, 0xea,0x22,0xe8,0x1c,0xe7,0xff,
+0xe5,0x9e,0xc2,0xe0,0x10,0x1, 0xef,0x17,0x6, 0xc2,0x89,0x57,0x23,0x4, 0x1c,0xe7,
+0xff,0xdf,0x6c,0xee,0xea,0x6, 0xc2,0x22,0xe4,0x52,0xc2,0xe0,0x10,0x1, 0xef,0x17,
+0x6, 0xea,0x23,0x8, 0x26,0x9b,0x3, 0xef,0x17,0x6, 0xe8,0xc2,0xe0,0x10,0x1, 0xea,
+0xf7,0x6, 0xfe,0x26,0xfc,0x42,0xd, 0x41,0xa, 0xd, 0x21,0xe, 0x1c,0x21,0x10,0xe7,
+0xff,0xb8,0x67,0xd, 0x41,0xa, 0xd, 0x21,0xe, 0x1c,0x21,0x10,0x85,0x29,0x9c,0x38,
+0xd, 0x21,0x4, 0xe7,0xff,0xf2,0x52,0xc2,0xf4,0x0, 0x1, 0xca,0xf7,0x79,0xe9,0x13,
+0x17,0x0, 0xc2,0xe0,0x10,0x1, 0xfb,0x17,0x5, 0x69,0xf3,0x17,0x5, 0x69,0x23,0x0, 
+0x28,0xf2,0xf7,0x5, 0x69,0x22,0xe4,0xf6,0xc2,0xe0,0x10,0x1, 0xea,0xf7,0x6, 0xff,
+0x56,0xf7,0x80,0x22,0xe0,0x32,0xd, 0x21,0x6, 0x9c,0x28,0xe7,0xff,0xfd,0x83,0x9b,
+0x5, 0xc2,0xe0,0x10,0x1, 0xef,0x17,0x6, 0xc8,0x9b,0x3, 0xc2,0xe0,0x10,0x1, 0x98,
+0x60,0xfb,0x17,0x6, 0xdf,0xe7,0xff,0xcd,0xa8,0xd, 0x21,0x6, 0x9c,0x28,0xe7,0xff,
+0xb7,0x89,0xd, 0x21,0x6, 0x9c,0x28,0xe7,0xff,0xb8,0x8f,0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x48,0x0, 0x0, 0x0, 0x11,0x11,0x11,0x0, 0x2, 0x0, 0x8b,0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x30,0x0, 0x2, 0x0, 0x0, 0x0, 0x31,0x0, 0x31,0x0, 0x31,0x0, 
+0x31,0x0, 0x0, 0x0, 0xc0,0x2, 0x2, 0x21,0x3, 0x0, 0x9, 0x0, 0x23,0x0, 0x23,0x0, 
+0x23,0x0, 0xac,0xdc,0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11,0x11,0x0, 0x0, 0x0, 0x0, 
+0x0, 0xc0,0xff,0xff,0x7f,0x4, 0x1e,0x0, 0x0, 0x48,0x0, 0x7c,0xfe,0xf3,0x1, 0x0, 
+0x10,0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x16,0x14,0x18,0x12,0x1c,0xe, 0x1e,0xc, 0xa, 0x15,0x20,0x3e,0x17,0x13,0x19,0x11,
+0x1d,0xd, 0x1f,0xb, 0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,
+0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,0x3e,
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc, 
+0xff,0xff,0xff,0xff,0xff,0x3f,0x0, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 
+0x1, 0x1, 0xe9,0x0, 0xe9,0x0, 0x19,0x2, 0x30,0x1, 0x19,0x1, 0x2, 0x1, 0xea,0x0, 
+0xd3,0x0, 0xbb,0x0, 0xa4,0x0, 0x8c,0x0, 0x75,0x0, 0x5d,0x0, 0x46,0x0, 0x2e,0x0, 
+0x17,0x0, 0x0, 0x0, 0x2b,0x0, 0x97,0x6, 0xbc,0xff,0x64,0x0, 0xf, 0x0, 0x54,0x0, 
+0x1a,0x4, 0xf0,0xff,0x1b,0x0, 0x15,0x0, 0xbc,0x0, 0x49,0x4, 0xe6,0xff,0x2, 0x0, 
+0x19,0x0, 0xbd,0x1, 0xd9,0x3, 0xf, 0x0, 0x0, 0x0, 0x1a,0x0, 0x3d,0x0, 0xc4,0x5, 
+0xa8,0xff,0x50,0x0, 0x13,0x0, 0xa4,0x0, 0x3d,0x4, 0xec,0xff,0xa, 0x0, 0x1f,0x0, 
+0x32,0x1, 0x46,0x4, 0xe2,0xff,0x1, 0x0, 0x21,0x0, 0x59,0x0, 0x45,0x7, 0x5a,0xff,
+0x69,0x0, 0x14,0x0, 0xc0,0x0, 0x5a,0x4, 0xee,0xff,0x10,0x0, 0x25,0x0, 0x18,0x1, 
+0x6f,0x3, 0x25,0x0, 0x2, 0x0, 0x28,0x0, 0x8f,0x1, 0xdc,0x4, 0xa0,0xff,0x1, 0x0, 
+0x29,0x0, 0x73,0x0, 0x20,0x9, 0xf4,0xfe,0x8a,0x0, 0x13,0x0, 0xcd,0x0, 0x25,0x4, 
+0xfa,0xff,0x1b,0x0, 0x29,0x0, 0x17,0x1, 0x5, 0x3, 0x41,0x0, 0x4, 0x0, 0x2f,0x0, 
+0x8c,0x1, 0xd3,0x5, 0x35,0xff,0x2, 0x0, 0x30,0x0, 0xb, 0x2, 0xd7,0x2, 0xb3,0x0, 
+0x0, 0x0, 0x31,0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x1, 0x1, 
+0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0xfe,0x0, 0xe2,0x14,0xf9,0xff,0xfd,0x0, 
+0x85,0x19,0x5, 0x0, 0xfc,0x0, 0xcf,0x21,0x14,0x0, 0xfb,0x0, 0xec,0x29,0x27,0x0, 
+0xf9,0x0, 0x90,0x35,0x38,0x0, 0xf8,0x0, 0x49,0x3f,0x47,0x0, 0xf7,0x0, 0x6, 0x46,
+0x5c,0x0, 0xf4,0x0, 0x6c,0x52,0x76,0x0, 0xfe,0x0, 0xe, 0x1a,0xe8,0xff,0xfd,0x0, 
+0xcd,0x1b,0xf2,0xff,0xfc,0x0, 0xf, 0x22,0xfd,0xff,0xfb,0x0, 0x76,0x28,0x7, 0x0, 
+0xfb,0x0, 0x88,0x2e,0x12,0x0, 0xfa,0x0, 0x8e,0x35,0x1a,0x0, 0xf9,0x0, 0xce,0x3b,
+0x22,0x0, 0xf8,0x0, 0x93,0x40,0x2e,0x0, 0xf7,0x0, 0xfc,0x47,0x3b,0x0, 0xf6,0x0, 
+0x6c,0x4f,0x49,0x0, 0xfc,0x0, 0x82,0x29,0xca,0xff,0xfc,0x0, 0x15,0x2a,0xd1,0xff,
+0xfb,0x0, 0x46,0x2d,0xdc,0xff,0xfa,0x0, 0x3a,0x33,0xe5,0xff,0xfa,0x0, 0x98,0x38,
+0xeb,0xff,0xf9,0x0, 0xd1,0x3c,0xf2,0xff,0xf8,0x0, 0x5e,0x42,0xf6,0xff,0xf8,0x0, 
+0xa3,0x46,0xfb,0xff,0xf7,0x0, 0xc0,0x49,0x3, 0x0, 0xf6,0x0, 0xfe,0x4e,0xb, 0x0, 
+0xf6,0x0, 0xde,0x52,0x13,0x0, 0xf5,0x0, 0x46,0x55,0x21,0x0, 0xf9,0x0, 0x3c,0x43,
+0xb0,0xff,0xf9,0x0, 0xe6,0x41,0xb1,0xff,0xf9,0x0, 0x4a,0x43,0xb3,0xff,0xf8,0x0, 
+0xb6,0x46,0xb8,0xff,0xf8,0x0, 0xee,0x4a,0xbd,0xff,0xf7,0x0, 0xb4,0x4e,0xc1,0xff,
+0xf7,0x0, 0x69,0x52,0xc7,0xff,0xf6,0x0, 0xa9,0x56,0xcc,0xff,0xf6,0x0, 0xc5,0x59,
+0xd0,0xff,0xf5,0x0, 0xe7,0x5b,0xd7,0xff,0xf5,0x0, 0xdd,0x5e,0xdd,0xff,0xf5,0x0, 
+0x2c,0x61,0xe3,0xff,0xf4,0x0, 0xb, 0x62,0xed,0xff,0xf4,0x0, 0xf0,0x64,0xf6,0xff,
+0x4, 0x3, 0x4, 0x5, 0x4, 0x4, 0x0, 0x0, 0x0, 0x1, 0x4, 0x5, 0x8, 0x9, 0xc, 0xd, 
+0x11,0x10,0x12,0x2, 0x3, 0x6, 0x7, 0xa, 0xb, 0xe, 0xf, 0x11,0x12,0xc, 0xd, 0xe, 
+0xf, 0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 
+0x7, 0x8, 0x9, 0xa, 0xb, 0x18,0x19,0x1a,0x1b,0x1c,0x1d,0x1e,0x1f,0x20,0x21,0x22,
+0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f,0x2, 0x3, 0x6, 
+0x7, 0xa, 0xb, 0xe, 0xf, 0x0, 0x1, 0x4, 0x5, 0x8, 0x9, 0xc, 0xd, 0x11,0x10,0x12,
+0x5a,0x0, 0x14,0x0, 0x14,0x0, 0x2, 0x0, 0x2, 0x0, 0x64,0x0, 0x28,0x0, 0x28,0x0, 
+0x1, 0x0, 0x1, 0x0, 0x64,0x0, 0x1, 0x0, 0x64,0x0, 0x1, 0x0, 0x32,0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x32,0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x50,0x0, 0x96,0x0, 
+0x40,0x6, 0x0, 0x0, 0x80,0xc, 0x0, 0x0, 0x1, 0x3, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x1, 0x0, 0xd8,0xe, 0xd8,0xe, 0x0, 0x0, 0x0, 0x0, 0xf0,0x0, 0x7e,0x0, 0x2b,0x0, 
+0x19,0x2, 0x1d,0x0, 0x19,0x0, 0xcf,0xff,0xfe,0x0, 0x14,0x0, 0x14,0x0, 0xf, 0x0, 
+0x48,0x0, 0xb4,0x1, 0x2b,0x0, 0x2c,0x1, 0x1, 0x0, 0x16,0x0, 0x1b,0x1, 0xca,0x0, 
+0x5a,0x0, 0x5a,0x0, 0xb, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x48,0xa, 0x80,0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3c,0x0, 0xa0,0x33,0x0, 0xff,0xff,
+0x0, 0x3c,0x0, 0xa0,0x34,0x0, 0xff,0xff,0x0, 0x3c,0x0, 0xa0,0x35,0x0, 0xff,0x3f,
+0x0, 0x3c,0x0, 0xa0,0x36,0x0, 0x0, 0x0, 0x0, 0x3c,0x0, 0xa0,0x37,0x0, 0x0, 0x0, 
+0x0, 0x3c,0x0, 0xa0,0x38,0x0, 0x0, 0x0, 0x0, 0x3c,0x0, 0xa0,0x39,0x0, 0x0, 0x0, 
+0x0, 0x3c,0x0, 0xa0,0x3a,0x0, 0x0, 0x0, 0x0, 0x3c,0x0, 0xa0,0x3b,0x0, 0x0, 0x0, 
+0x0, 0x3c,0x0, 0xa0,0x3c,0x0, 0xff,0xff,0x0, 0x3c,0x0, 0xa0,0x3d,0x0, 0xff,0xff,
+0x0, 0x3c,0x0, 0xa0,0x3e,0x0, 0xff,0x3f,0x2, 0x3, 0x0, 0x0, 0x0, 0x1, 0x1, 0x2, 
+0x1, 0x2, 0x3, 0x2, 0x3, 0x3, 0x49,0x6e,0x20,0x75,0x6d,0x61,0x69,0x6e,0x20,0xa, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x36,0x6e,0x1, 0x3, 0xff,0xff,0xff,0xff,0xff,0xff,0xff,
+0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x0, 0x0, 0xff,0xff,0xff,0xff,
+0xff,0xff,0xff,0xff,0x2c,0x1, 0x80,0x0, 0x2, 0x0, 0x3, 0x0, 0x1, 0x0, 0x9, 0x0, 
+0x2, 0x0, 0xe, 0x7, 0x7, 0x30,0x30,0x39,0x0, 0x5, 0x42,0x42,0x56,0x0, 0x42,0x42,
+0x4d,0x44,0x4c,0x0, 0x6, 0x4c,0x43,0x4d,0x0, 0x7, 0x1, 0xff,0x1, 0x3, 0x8, 0x0, 
+0x9, 0x0, 0xa, 0x0, 0xb, 0x0, 0xc, 0x0, 0xd, 0x0, 0xe, 0x0, 0xf, 0x0, 0x10,0x0, 
+0x11,0x0, 0x12,0x0, 0x4f,0x36,0x0, 0xd0,0x1f,0x14,0x0, 0x0, 0x32,0x14,0x0, 0x0, 
+0x50,0x14,0x0, 0x0, 0x7, 0x15,0x0, 0x0, 0x2c,0xb, 0x0, 0x0, 0x6e,0x9, 0x0, 0x0, 
+0x67,0x3, 0x0, 0x0, 0xd, 0x9, 0x0, 0x0, 0xe9,0x15,0x0, 0x0, 0x7a,0x15,0x0, 0x0, 
+0xce,0x1d,0x0, 0x0, 0x8d,0x15,0x0, 0x0, 0xd4,0x23,0x0, 0x0, 0xee,0x37,0x0, 0xd0,
+0xf0,0x37,0x0, 0xd0,0x5b,0xf, 0x0, 0x0, 0xa5,0xd, 0x0, 0x0, 0x7c,0x11,0x0, 0x0, 
+0xdf,0x10,0x0, 0x0, 0x7a,0xd, 0x0, 0x0, 0x4d,0x53,0x43,0x54,0x50,0x43,0x33,0x0, 
+0x35,0x6, 0x0, 0x0, 0x4f,0x6, 0x0, 0x0, 0x12,0x7, 0x0, 0x0, 0x83,0x7, 0x0, 0x0, 
+0xb, 0x8, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc2,0x2a,0x95,0x20,
+0x4d,0x53,0x54,0x41,0x52,0x54,0x50,0x43,0x0, 0x0, 0x0, 0x0, 0x4c,0x43,0x9, 0x0, 
+0x2, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x30,0x30,0x39,0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
+0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 
\ No newline at end of file
diff --git a/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/huaruichuan_03.i b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/huaruichuan_03.i
new file mode 100755
index 0000000..af1d4dd
--- /dev/null
+++ b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/huaruichuan_03.i
@@ -0,0 +1,250 @@
+0xc0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x3f, 
+0x40, 0x02, 0x98, 0x3f, 0x28, 0x09, 0x98, 0x3f, 0x29, 0x09, 0x98, 0x3f, 0x2a, 0x09, 0x98, 0x3f, 0xd4, 0x09, 0x98, 0x3f, 0xd5, 0x09, 0x98, 0x3f, 0xd6, 0x09, 0x98, 0x3f, 0xd7, 0x09, 0x98, 0x3f, 0xd8, 0x09, 0x98, 0x3f, 0xd9, 0x09, 0x98, 0x3f, 0xda, 0x09, 0x98, 0x3f, 0xdb, 0x09, 0x98, 0x3f, 0xdc, 0x09, 0x98, 0x3f, 0xdd, 0x09, 0x98, 0x3f, 0xde, 0x09, 0x98, 0x3f, 0xdf, 0x09, 0x98, 0x3f, 0xe0, 0x09, 0x98, 0x3f, 0xe1, 0x09, 0x98, 0x3f, 0xe2, 0x09, 0x98, 0x3f, 0xe3, 0x09, 0x98, 0x3f, 0xe4, 0x09, 0x98, 0x3f, 0xe6, 0x09, 0x98, 0x3f, 0xe8, 0x09, 0x98, 0x3f, 0xe9, 0x09, 0x98, 0x3f, 0xea, 0x09, 0x98, 0x3f, 0xeb, 0x09, 0x98, 0x3f, 0xed, 0x09, 0x98, 0x3f, 0xef, 0x09, 0x98, 0x3f, 0x0d, 0x0a, 0x98, 0x3f, 0x0e, 0x0a, 0x98, 0x3f, 0x0f, 0x0a, 0x98, 0x3f, 0x0e, 0x0b, 0x98, 0x3f, 0xa1, 0x0b, 0x98, 0x32, 
+0x80, 0x02, 0x98, 0x3f, 0x37, 0x0c, 0x98, 0x3f, 0x38, 0x0c, 0x1d, 0xb0, 0x60, 0xa8, 0x58, 0xaa, 0x50, 0xa8, 0x9d, 0xb0, 0x02, 0xa9, 0x41, 0xa9, 0x02, 0x62, 0x03, 0x6a, 0xb0, 0xb2, 0x02, 0x60, 0x40, 0x68, 0x0b, 0x5a, 0xb2, 0xb2, 0x0b, 0x5a, 0xb3, 0xb2, 0x41, 0xab, 0x02, 0xab, 0x27, 0xc4, 0x17, 0xc7, 0x27, 0xc5, 0x3f, 0xc5, 0x5d, 0xc5, 0xb4, 0xc6, 0xe5, 0xc8, 0xf5, 0xc8, 0x7d, 0xc5, 0x3f, 0xc6, 0xca, 0xc5, 0x35, 0xc6, 0x11, 0xc4, 0x92, 0xac, 0xfe, 0x91, 0x20, 0xc4, 0x11, 0xc4, 0xe3, 0xaa, 0xe5, 0xc8, 0xfe, 0xc8, 0xd1, 0xac, 0x02, 0x90, 0x11, 0xc9, 0x16, 0x9e, 0xd9, 0xac, 0x02, 0x90, 0x1f, 0xc9, 0x12, 0x9e, 0xc1, 0xac, 0x07, 0x92, 0xa9, 0xac, 0x18, 0x92, 0xa1, 0xac, 0x16, 0x92, 0x99, 0xac, 0x14, 0x92, 0x2b, 0x9e, 0x95, 0xc6, 0xc9, 0xa8, 0x27, 0xc4, 0xf1, 0xac, 0x01, 0x90, 0x50, 0x63, 
+0xc0, 0x02, 0xf1, 0xaa, 0xc1, 0xac, 0xfb, 0x93, 0xc9, 0xaa, 0xd1, 0xaa, 0xd9, 0xaa, 0x20, 0xc4, 0xd6, 0xc6, 0xe5, 0xc8, 0xf5, 0xc8, 0x7d, 0xc5, 0xca, 0xc5, 0xa8, 0xc6, 0x18, 0x9e, 0x7e, 0xc6, 0xe4, 0xaa, 0xec, 0xaa, 0xa9, 0xac, 0xd7, 0x93, 0xb4, 0xe4, 0xa1, 0xac, 0xd0, 0x93, 0xa1, 0xaa, 0x99, 0xaa, 0xbc, 0xac, 0x0c, 0x90, 0xbc, 0xaa, 0xa2, 0xa8, 0x04, 0x60, 0x27, 0x78, 0x66, 0x60, 0x28, 0x78, 0x29, 0x78, 0x2a, 0x78, 0x2b, 0x78, 0x93, 0xc6, 0xa2, 0xac, 0xfe, 0x93, 0x9e, 0x58, 0xb1, 0x04, 0x19, 0x10, 0x43, 0x8a, 0x83, 0xac, 0x04, 0x90, 0x83, 0xaa, 0x2e, 0xc4, 0x1a, 0x38, 0xfe, 0x9f, 0x94, 0xac, 0x02, 0x90, 0x98, 0x3f, 0x97, 0x06, 0x4a, 0xe7, 0x19, 0xc7, 0x35, 0xc4, 0x99, 0xac, 0x01, 0x90, 0xac, 0x9f, 0x9e, 0x58, 0x6c, 0x04, 0x00, 0xac, 0x1b, 0x90, 0x9e, 0x5a, 0x6d, 0x04, 0x42, 0xc8, 
+0x00, 0x03, 0x25, 0x60, 0x02, 0x68, 0x10, 0x38, 0x0a, 0x04, 0x03, 0x5b, 0x7a, 0x48, 0x0e, 0x80, 0x9e, 0x59, 0xe5, 0x00, 0x19, 0x01, 0xbe, 0x59, 0xe5, 0x00, 0x9e, 0x5a, 0x6e, 0x04, 0x3a, 0x48, 0x09, 0x9c, 0x00, 0x61, 0xbe, 0x59, 0xe5, 0x00, 0xa1, 0xa8, 0x04, 0x9e, 0x00, 0x61, 0xbe, 0x59, 0xe5, 0x00, 0x00, 0x9e, 0x43, 0xcc, 0xa1, 0xac, 0x8a, 0x93, 0x9e, 0x59, 0x90, 0x04, 0x18, 0x31, 0x0d, 0x8a, 0x11, 0xc4, 0xdb, 0xc7, 0x32, 0xb1, 0x29, 0xaa, 0xb2, 0xb1, 0x38, 0xb1, 0x41, 0xaa, 0x29, 0xaa, 0xb8, 0xb1, 0x35, 0xb1, 0x41, 0xa8, 0x29, 0xa8, 0xb5, 0xb1, 0x11, 0xc4, 0xba, 0xac, 0x0f, 0x92, 0xb9, 0xac, 0xfb, 0x91, 0x9e, 0x58, 0x02, 0x01, 0xbe, 0x58, 0x48, 0x00, 0xa0, 0xf8, 0xe0, 0xac, 0x6d, 0x91, 0xb7, 0x60, 0x01, 0x68, 0xbe, 0x58, 0x48, 0x00, 0xa0, 0xf8, 0x67, 0x9f, 0x82, 0xac, 0x15, 0x3b, 
+0x40, 0x03, 0x03, 0x92, 0x54, 0xb0, 0x38, 0xac, 0xfb, 0x93, 0xda, 0xac, 0x67, 0x90, 0xc3, 0xac, 0x10, 0x92, 0x9e, 0x58, 0x4a, 0x00, 0x19, 0x00, 0xbe, 0x58, 0x4a, 0x00, 0x05, 0x61, 0x01, 0x11, 0x07, 0x80, 0xc3, 0xa8, 0x00, 0x60, 0xec, 0xac, 0x01, 0x90, 0x01, 0x60, 0xbe, 0x58, 0x49, 0x00, 0x4e, 0x9f, 0x00, 0x60, 0x9e, 0x59, 0x86, 0x04, 0x38, 0x48, 0x49, 0x8b, 0x41, 0xa9, 0x00, 0x60, 0xc0, 0xb0, 0x41, 0xab, 0x00, 0x60, 0x54, 0x68, 0x82, 0xac, 0x02, 0x92, 0x00, 0x60, 0x4c, 0x68, 0xae, 0xb0, 0xcd, 0xa9, 0x00, 0x60, 0x84, 0x68, 0xa5, 0xb0, 0x08, 0x71, 0x06, 0x79, 0x07, 0x72, 0x59, 0x48, 0x12, 0x82, 0xf2, 0xa8, 0x00, 0x60, 0x9e, 0x59, 0x87, 0x04, 0x38, 0x48, 0x0c, 0x8a, 0x9e, 0x5b, 0x87, 0x04, 0x19, 0x13, 0x67, 0x38, 0x82, 0x03, 0x82, 0xac, 0x02, 0x92, 0x04, 0xc4, 0x01, 0x9e, 0x34, 0x8d, 
+0x80, 0x03, 0x0a, 0xc4, 0x1a, 0x38, 0x1a, 0x38, 0xf2, 0xaa, 0x9e, 0x5b, 0x86, 0x04, 0x19, 0x13, 0x67, 0x38, 0x8f, 0x03, 0x82, 0xac, 0x02, 0x92, 0x04, 0xc4, 0x01, 0x9e, 0x0a, 0xc4, 0x1a, 0x38, 0x1a, 0x38, 0xcd, 0xab, 0x41, 0xa9, 0x28, 0x60, 0xc0, 0xb0, 0x41, 0xab, 0x58, 0x60, 0x02, 0x68, 0x00, 0x61, 0x19, 0x10, 0x19, 0x48, 0xfd, 0x89, 0x00, 0x60, 0x50, 0x68, 0x82, 0xac, 0x02, 0x92, 0x00, 0x60, 0x48, 0x68, 0xae, 0xb0, 0x00, 0x60, 0xa5, 0xb0, 0x00, 0x60, 0x20, 0x68, 0x82, 0xac, 0x02, 0x92, 0x00, 0x60, 0xc0, 0x68, 0x8d, 0xb0, 0x98, 0x3f, 0xa6, 0x02, 0x41, 0xa9, 0x00, 0x60, 0xc0, 0xb0, 0x31, 0xb0, 0x04, 0x38, 0x00, 0x60, 0x1b, 0x28, 0x9e, 0x59, 0x9d, 0x04, 0x1b, 0x21, 0x7f, 0x38, 0x26, 0x59, 0x01, 0x28, 0xf3, 0xac, 0x02, 0x90, 0x05, 0x38, 0x40, 0x00, 0xb1, 0xb0, 0x40, 0xb0, 0x80, 0x0f, 
+0xc0, 0x03, 0x18, 0xa8, 0xc0, 0xb0, 0x00, 0x60, 0x05, 0x68, 0x32, 0x61, 0x07, 0x38, 0xca, 0x03, 0x37, 0x38, 0x1a, 0x38, 0x1a, 0x38, 0x1a, 0x38, 0x40, 0xb0, 0x18, 0xaa, 0xc0, 0xb0, 0x41, 0xab, 0x80, 0x60, 0x54, 0x68, 0x82, 0xac, 0x02, 0x92, 0x80, 0x60, 0x4c, 0x68, 0xae, 0xb0, 0x82, 0xac, 0x02, 0x92, 0x04, 0xc4, 0x01, 0x9e, 0x0a, 0xc4, 0x41, 0xa9, 0x31, 0xb0, 0x04, 0x38, 0x00, 0x60, 0x05, 0x38, 0x41, 0x00, 0x9e, 0x59, 0x9d, 0x04, 0x1b, 0x21, 0x7f, 0x38, 0x26, 0x59, 0x01, 0x28, 0xb1, 0xb0, 0x28, 0x60, 0xc0, 0xb0, 0x41, 0xab, 0x30, 0x60, 0x75, 0x68, 0x00, 0x61, 0x19, 0x10, 0x19, 0x48, 0xfd, 0x89, 0x00, 0x60, 0x50, 0x68, 0x82, 0xac, 0x02, 0x92, 0x00, 0x60, 0x48, 0x68, 0xae, 0xb0, 0x00, 0x60, 0xa5, 0xb0, 0x00, 0x60, 0x20, 0x68, 0x82, 0xac, 0x02, 0x92, 0x00, 0x60, 0xc0, 0x68, 0x1c, 0x79, 
+0x00, 0x04, 0x8d, 0xb0, 0xb4, 0xe4, 0x98, 0x3f, 0xa6, 0x02, 0x54, 0xb1, 0x39, 0xac, 0xfd, 0x93, 0x12, 0xa9, 0x1a, 0x38, 0x3a, 0x38, 0xa2, 0xac, 0xfe, 0x93, 0xaa, 0xac, 0xfc, 0x93, 0x12, 0xa9, 0x1a, 0x38, 0x3a, 0x38, 0x1e, 0x58, 0x1e, 0x59, 0x01, 0xb8, 0x41, 0xab, 0x24, 0xb0, 0x20, 0xa8, 0xa4, 0xb0, 0x7d, 0x60, 0xa1, 0x61, 0x01, 0x40, 0xef, 0xb0, 0x81, 0xb8, 0x3e, 0x59, 0x3e, 0x58, 0x3a, 0x38, 0x1e, 0x58, 0x9e, 0x58, 0x88, 0x04, 0xa4, 0xb0, 0x11, 0xc4, 0x3e, 0x58, 0x3a, 0x38, 0x1e, 0x58, 0x28, 0x60, 0x80, 0x68, 0xa4, 0xb0, 0x11, 0xc4, 0x3e, 0x58, 0x3a, 0x38, 0x1e, 0x58, 0x22, 0x60, 0x80, 0x68, 0xa4, 0xb0, 0x11, 0xc4, 0x3e, 0x58, 0x3a, 0x38, 0xe9, 0xac, 0xe8, 0x92, 0x9e, 0x58, 0x6f, 0x04, 0x18, 0x30, 0xeb, 0x8a, 0xb7, 0x61, 0x01, 0x69, 0x9e, 0x5b, 0x0b, 0x04, 0x9e, 0x5c, 0xf7, 0xd8, 
+0x40, 0x04, 0x02, 0x04, 0x64, 0x03, 0x9e, 0x5c, 0x70, 0x04, 0x18, 0x14, 0x03, 0x8a, 0x9e, 0x5c, 0x01, 0x04, 0x64, 0x03, 0x00, 0x67, 0x9e, 0x5a, 0x36, 0x05, 0x5f, 0x48, 0x01, 0x88, 0x64, 0x62, 0x9e, 0x5e, 0x35, 0x05, 0xdf, 0x48, 0x02, 0x88, 0x30, 0x66, 0x75, 0x6e, 0x67, 0x38, 0x5e, 0x04, 0x25, 0x5d, 0xba, 0x48, 0x01, 0x98, 0xba, 0x9e, 0xbe, 0x48, 0x01, 0x96, 0xb7, 0x9e, 0x1a, 0x38, 0xb7, 0x61, 0x01, 0x69, 0x9e, 0x5b, 0x0b, 0x04, 0x1b, 0x64, 0x24, 0x01, 0x67, 0x38, 0x6e, 0x04, 0x25, 0x5d, 0xba, 0x48, 0x01, 0x98, 0xaa, 0x9e, 0xbe, 0x48, 0x01, 0x96, 0xa7, 0x9e, 0x1a, 0x38, 0xee, 0x60, 0x01, 0x68, 0xb7, 0x61, 0x01, 0x69, 0x9e, 0x5a, 0x73, 0x04, 0x00, 0x63, 0xaf, 0x3e, 0x7e, 0x04, 0x05, 0x5c, 0x25, 0x5d, 0x85, 0x14, 0x9a, 0x48, 0x01, 0x96, 0x19, 0x03, 0x1a, 0x38, 0x9e, 0x5a, 0x31, 0x7a, 
+0x80, 0x04, 0x00, 0x04, 0x50, 0x3a, 0x01, 0x04, 0x50, 0x3a, 0x02, 0x04, 0x50, 0x3a, 0x17, 0x04, 0x9e, 0x58, 0x74, 0x04, 0x40, 0x12, 0x7a, 0x48, 0x93, 0x94, 0x9e, 0x58, 0x71, 0x04, 0x00, 0x61, 0x19, 0x48, 0x8e, 0x8a, 0xb7, 0x60, 0x01, 0x68, 0xee, 0x62, 0x01, 0x6a, 0x9e, 0x5f, 0x75, 0x04, 0x9e, 0x5d, 0x0b, 0x04, 0xa7, 0x38, 0xa1, 0x04, 0x45, 0x5c, 0x05, 0x5d, 0x85, 0x14, 0x9f, 0x48, 0x01, 0x96, 0x44, 0x9e, 0x1a, 0x38, 0xd2, 0x60, 0x01, 0x68, 0x09, 0x62, 0x02, 0x6a, 0x9e, 0x5d, 0x0b, 0x04, 0xa7, 0x38, 0xb0, 0x04, 0x45, 0x5c, 0x05, 0x5d, 0x85, 0x14, 0x9f, 0x48, 0x01, 0x96, 0x35, 0x9e, 0x1a, 0x38, 0x9e, 0x59, 0x02, 0x04, 0x18, 0x31, 0x15, 0x8a, 0xb7, 0x61, 0x01, 0x69, 0x30, 0x39, 0x06, 0x04, 0xee, 0x62, 0x01, 0x6a, 0x50, 0x3a, 0x06, 0x04, 0x9e, 0x5f, 0x76, 0x04, 0x9e, 0x5e, 0x65, 0x61, 
+0xc0, 0x04, 0x12, 0x04, 0xc7, 0x38, 0xc9, 0x04, 0x25, 0x5c, 0x45, 0x5d, 0xa4, 0x15, 0xbf, 0x48, 0x01, 0x96, 0x1c, 0x9e, 0x1a, 0x38, 0x9e, 0x58, 0x70, 0x04, 0x00, 0x61, 0x19, 0x48, 0x50, 0x8a, 0xb7, 0x61, 0x01, 0x69, 0x30, 0x39, 0x03, 0x01, 0xee, 0x62, 0x01, 0x6a, 0x50, 0x3a, 0x03, 0x01, 0x9e, 0x5f, 0x78, 0x04, 0x9e, 0x5e, 0x0d, 0x04, 0xc7, 0x38, 0xe3, 0x04, 0x25, 0x5c, 0x45, 0x5d, 0xa4, 0x15, 0xbf, 0x48, 0x01, 0x96, 0x02, 0x9e, 0x1a, 0x38, 0x3a, 0x9e, 0x9e, 0x58, 0xe6, 0x00, 0x19, 0x00, 0xbe, 0x58, 0xe6, 0x00, 0x9e, 0x59, 0x77, 0x04, 0x19, 0x48, 0x38, 0x9a, 0xb7, 0x60, 0x01, 0x68, 0xee, 0x62, 0x01, 0x6a, 0x9e, 0x5d, 0x0b, 0x04, 0x9e, 0x5e, 0x02, 0x04, 0xa6, 0x05, 0x9e, 0x5e, 0x01, 0x04, 0xa6, 0x05, 0xa7, 0x38, 0xfd, 0x04, 0x05, 0x5c, 0x9d, 0x5a, 0xd2, 0x61, 0x01, 0x69, 0x34, 0x09, 
+0x00, 0x05, 0x09, 0x63, 0x02, 0x6b, 0x9e, 0x5d, 0x0b, 0x04, 0xa1, 0x5d, 0xa7, 0x38, 0x08, 0x05, 0x25, 0x5c, 0x9d, 0x5b, 0x15, 0x9e, 0x9e, 0x59, 0xe4, 0x00, 0x19, 0x01, 0xbe, 0x59, 0xe4, 0x00, 0x9e, 0x5a, 0x79, 0x04, 0x3a, 0x48, 0x13, 0x96, 0x99, 0xa8, 0x0a, 0x9e, 0x9e, 0x59, 0xe3, 0x00, 0x19, 0x01, 0xbe, 0x59, 0xe3, 0x00, 0x9e, 0x5a, 0x77, 0x04, 0x3a, 0x48, 0x08, 0x96, 0x99, 0xa8, 0x00, 0x63, 0xbe, 0x5b, 0xe3, 0x00, 0xbe, 0x5b, 0xe6, 0x00, 0xbe, 0x5b, 0xe4, 0x00, 0x3a, 0x38, 0x00, 0x60, 0x0f, 0x68, 0x96, 0xb0, 0x00, 0x60, 0x80, 0xb0, 0x00, 0x60, 0x81, 0xb0, 0x41, 0xa9, 0x32, 0xb0, 0x18, 0xaa, 0xb2, 0xb0, 0x41, 0xab, 0x00, 0x60, 0x82, 0xb0, 0x00, 0x60, 0x83, 0xb0, 0x00, 0x60, 0x9c, 0xb0, 0xc0, 0x60, 0x13, 0x68, 0x9d, 0xb0, 0x00, 0x60, 0xa5, 0xb0, 0x3a, 0x38, 0xff, 0x60, 0x7e, 0xfb, 
+0x40, 0x05, 0xff, 0x68, 0x84, 0xb0, 0x85, 0xb0, 0x86, 0xb0, 0x00, 0x60, 0xb0, 0xb0, 0xb1, 0xb0, 0xb2, 0xb0, 0xff, 0x60, 0xff, 0x68, 0xb3, 0xb0, 0xb4, 0xb0, 0xb5, 0xb0, 0x00, 0x60, 0xb6, 0xb0, 0xb7, 0xb0, 0xb8, 0xb0, 0x00, 0x60, 0xb9, 0xb0, 0xba, 0xb0, 0xbb, 0xb0, 0x16, 0xa9, 0x32, 0xb0, 0x10, 0xa8, 0xb2, 0xb0, 0x35, 0xb0, 0x10, 0xaa, 0xb5, 0xb0, 0x3a, 0x38, 0x00, 0x60, 0xff, 0x61, 0x00, 0x62, 0x04, 0x63, 0x00, 0x64, 0x04, 0x6c, 0x04, 0x65, 0x00, 0x66, 0x08, 0x6e, 0x07, 0x67, 0x37, 0x38, 0x1d, 0x5a, 0x19, 0x13, 0xfc, 0x89, 0x37, 0x38, 0x1d, 0x5c, 0x19, 0x15, 0xfc, 0x89, 0x37, 0x38, 0x1d, 0x5e, 0x19, 0x17, 0xfc, 0x89, 0x3a, 0x38, 0x00, 0x60, 0xff, 0x61, 0x3f, 0x69, 0x00, 0x63, 0x27, 0x38, 0x7b, 0x05, 0x0b, 0x5a, 0x62, 0x03, 0x3a, 0x38, 0x82, 0xaa, 0xca, 0xaa, 0x94, 0xaa, 0x82, 0xd2, 
+0x80, 0x05, 0x90, 0xaa, 0xa2, 0xaa, 0xa1, 0xaa, 0x99, 0xaa, 0x81, 0xaa, 0xb9, 0xaa, 0xba, 0xa8, 0xb8, 0xa8, 0xc0, 0xaa, 0x80, 0xaa, 0x88, 0xaa, 0xa8, 0xa8, 0xb0, 0xa8, 0xda, 0xa8, 0xc3, 0xa8, 0x00, 0x60, 0xbe, 0x58, 0x49, 0x00, 0xbe, 0x58, 0x4a, 0x00, 0x2c, 0x60, 0x01, 0x68, 0x07, 0x78, 0x00, 0x60, 0x06, 0x78, 0xa3, 0xaa, 0x00, 0x60, 0x88, 0xb0, 0x89, 0xb0, 0x78, 0xa9, 0x9e, 0x58, 0x95, 0x04, 0xbe, 0x58, 0x4c, 0x00, 0x9e, 0x58, 0x94, 0x04, 0xbe, 0x58, 0xf6, 0x00, 0x00, 0x60, 0xbe, 0x58, 0xf9, 0x00, 0x9e, 0x58, 0xc2, 0x04, 0x19, 0x30, 0x0b, 0x88, 0x9e, 0x59, 0xc3, 0x04, 0x25, 0x38, 0x00, 0x00, 0x06, 0x8a, 0x22, 0x39, 0xe8, 0x03, 0x03, 0x8a, 0x01, 0x60, 0xbe, 0x58, 0xf9, 0x00, 0x9e, 0x58, 0x55, 0x04, 0xbe, 0x58, 0x23, 0x01, 0xd8, 0xaa, 0xe9, 0xaa, 0x8d, 0xaa, 0x00, 0x60, 0x9b, 0x2d, 
+0xc0, 0x05, 0xbe, 0x58, 0xfc, 0x00, 0xf0, 0xa8, 0xff, 0x60, 0x7f, 0x68, 0xbe, 0x58, 0x38, 0x01, 0xbe, 0x58, 0x39, 0x01, 0x3a, 0x38, 0x41, 0x60, 0xbe, 0x58, 0x62, 0x00, 0xbe, 0x58, 0x67, 0x00, 0x24, 0x60, 0xbe, 0x58, 0x63, 0x00, 0xbe, 0x58, 0x68, 0x00, 0x9e, 0x58, 0x32, 0x04, 0x19, 0x30, 0x29, 0x8a, 0x9e, 0x5a, 0xd2, 0x04, 0x44, 0x3a, 0xff, 0x00, 0x07, 0x8a, 0x40, 0x62, 0x1a, 0x48, 0x04, 0x9c, 0xbe, 0x5a, 0x31, 0x04, 0xe5, 0xc8, 0xf5, 0xc8, 0x9e, 0x58, 0x31, 0x04, 0x02, 0x3d, 0x01, 0x00, 0x9e, 0x5e, 0xd2, 0x04, 0xc4, 0x3e, 0xff, 0x00, 0x03, 0x88, 0xbf, 0x38, 0xa8, 0x5d, 0x02, 0x9e, 0x5f, 0x38, 0xa8, 0x5d, 0x19, 0x05, 0x00, 0x61, 0x1c, 0x5d, 0xbe, 0x5d, 0x0e, 0x01, 0xbe, 0x58, 0x0f, 0x01, 0xa0, 0x40, 0xbe, 0x58, 0x13, 0x01, 0x9e, 0x58, 0x0f, 0x01, 0x01, 0x61, 0x20, 0x01, 0x78, 0xb7, 
+0x00, 0x06, 0x05, 0x9e, 0x9e, 0x58, 0x0f, 0x01, 0x08, 0x58, 0x01, 0x61, 0x20, 0x01, 0x11, 0x61, 0x9e, 0x5a, 0xd2, 0x04, 0x44, 0x3a, 0xff, 0x00, 0x02, 0x8a, 0x03, 0x62, 0x22, 0x29, 0xbe, 0x59, 0x66, 0x00, 0xbe, 0x59, 0x6b, 0x00, 0xbe, 0x58, 0x65, 0x00, 0xbe, 0x58, 0x6a, 0x00, 0x20, 0x60, 0x80, 0x68, 0x9e, 0x59, 0x37, 0x04, 0x01, 0x29, 0xbe, 0x59, 0x52, 0x00, 0x9e, 0x59, 0x38, 0x04, 0x01, 0x29, 0xbe, 0x59, 0x53, 0x00, 0x9e, 0x59, 0x39, 0x04, 0x01, 0x29, 0xbe, 0x59, 0x54, 0x00, 0x9e, 0x59, 0x3a, 0x04, 0x01, 0x29, 0xbe, 0x59, 0x55, 0x00, 0x9e, 0x59, 0x3b, 0x04, 0x01, 0x29, 0xbe, 0x59, 0x64, 0x00, 0xbe, 0x59, 0x69, 0x00, 0xb4, 0xe4, 0x3a, 0x38, 0x04, 0x60, 0x27, 0x78, 0x55, 0x60, 0x28, 0x78, 0x29, 0x78, 0x2a, 0x78, 0x2b, 0x78, 0xa2, 0xa8, 0x93, 0xc6, 0x3a, 0x38, 0x82, 0xac, 0xca, 0x40, 
+0x40, 0x06, 0x1d, 0x92, 0x00, 0x60, 0x48, 0x68, 0xae, 0xb0, 0x35, 0xb2, 0x32, 0xaa, 0x3a, 0xaa, 0xb5, 0xb2, 0x3b, 0xb2, 0x32, 0xa8, 0x3a, 0xa8, 0xbb, 0xb2, 0x20, 0x60, 0xc4, 0x68, 0xd2, 0xb0, 0x9e, 0x58, 0xfb, 0x00, 0xd4, 0xb0, 0x00, 0x60, 0x1b, 0x78, 0x92, 0xaa, 0xca, 0xac, 0x01, 0x90, 0x92, 0xa8, 0xaa, 0xaa, 0xf9, 0xab, 0xf1, 0xab, 0xfd, 0xa9, 0xf5, 0xa9, 0x1c, 0x9e, 0x00, 0x60, 0x50, 0x68, 0xae, 0xb0, 0x35, 0xb2, 0x42, 0x3a, 0x30, 0x01, 0xb5, 0xb2, 0x3b, 0xb2, 0x50, 0x3a, 0x30, 0x01, 0xbb, 0xb2, 0x80, 0x60, 0xe9, 0x68, 0xf8, 0xb0, 0x00, 0x60, 0x1b, 0x78, 0x28, 0x70, 0xf9, 0xb0, 0x92, 0xaa, 0xca, 0xac, 0x01, 0x90, 0x92, 0xa8, 0xaa, 0xaa, 0x00, 0x60, 0x20, 0x68, 0x99, 0xb0, 0xe9, 0xab, 0xed, 0xa9, 0xca, 0xac, 0x01, 0x92, 0xa8, 0xc6, 0x3a, 0x38, 0x9e, 0x58, 0x62, 0x00, 0x1c, 0x2e, 
+0x80, 0x06, 0xbe, 0x58, 0x67, 0x00, 0x9e, 0x58, 0x63, 0x00, 0xbe, 0x58, 0x68, 0x00, 0x9e, 0x58, 0x64, 0x00, 0xbe, 0x58, 0x69, 0x00, 0x9e, 0x58, 0x66, 0x00, 0xbe, 0x58, 0x6b, 0x00, 0x9e, 0x58, 0x65, 0x00, 0xbe, 0x58, 0x6a, 0x00, 0x3a, 0x38, 0x16, 0xab, 0x3a, 0x38, 0x16, 0xa9, 0x3a, 0x38, 0x05, 0xa9, 0x34, 0xb1, 0x01, 0xaa, 0xb4, 0xb1, 0x31, 0xb1, 0x01, 0xa8, 0xb1, 0xb1, 0x1a, 0x38, 0x24, 0xb0, 0x20, 0xa8, 0xa4, 0xb0, 0x05, 0xad, 0x02, 0x92, 0x05, 0xa9, 0xf8, 0x9f, 0x05, 0xab, 0xf6, 0x9f, 0x41, 0xa9, 0x31, 0xb1, 0x9e, 0x58, 0x9c, 0x04, 0x18, 0x30, 0x02, 0x8a, 0x69, 0xa8, 0x01, 0x9e, 0x69, 0xaa, 0xb1, 0xb1, 0x41, 0xab, 0x3a, 0x38, 0x00, 0x60, 0x3e, 0x68, 0x00, 0x61, 0x04, 0x69, 0xff, 0x62, 0x01, 0x6a, 0x47, 0x38, 0xc1, 0x06, 0x0b, 0x5c, 0x86, 0x3b, 0xff, 0xff, 0x01, 0x88, 0x99, 0xaf, 
+0xc0, 0x06, 0x00, 0x64, 0x9d, 0x59, 0xc0, 0x60, 0x3c, 0x68, 0x09, 0x58, 0xff, 0x61, 0xff, 0x69, 0x01, 0x5a, 0xfe, 0x5a, 0x02, 0x32, 0x59, 0x48, 0x05, 0x88, 0x04, 0x38, 0x7f, 0x00, 0xbe, 0x58, 0xfb, 0x00, 0x03, 0x9e, 0x15, 0x60, 0xbe, 0x58, 0xfb, 0x00, 0xd6, 0xc6, 0x3a, 0x38, 0x9e, 0x58, 0x09, 0x04, 0xbe, 0x58, 0x03, 0x01, 0x9e, 0x58, 0x01, 0x04, 0x18, 0x30, 0x02, 0x88, 0xbe, 0x58, 0x0d, 0x04, 0x9e, 0x58, 0x02, 0x04, 0x18, 0x30, 0x02, 0x88, 0xbe, 0x58, 0x12, 0x04, 0x00, 0x60, 0x16, 0x38, 0xa3, 0x04, 0x04, 0x88, 0x10, 0x60, 0x27, 0x68, 0xbe, 0x58, 0xa3, 0x04, 0x00, 0x60, 0x16, 0x38, 0xa4, 0x04, 0x04, 0x88, 0x10, 0x60, 0x27, 0x68, 0xbe, 0x58, 0xa4, 0x04, 0x00, 0x60, 0x16, 0x38, 0xb0, 0x04, 0x04, 0x88, 0x90, 0x60, 0x01, 0x68, 0xbe, 0x58, 0xb0, 0x04, 0x00, 0x60, 0x16, 0x38, 0xdd, 0x62, 
+0x00, 0x07, 0xc4, 0x04, 0x04, 0x88, 0x9e, 0x58, 0x91, 0x04, 0xbe, 0x58, 0xc4, 0x04, 0x00, 0x60, 0x16, 0x38, 0xd9, 0x04, 0x04, 0x88, 0x9e, 0x58, 0x05, 0x04, 0xbe, 0x58, 0xd9, 0x04, 0x00, 0x60, 0x16, 0x38, 0xda, 0x04, 0x04, 0x88, 0x9e, 0x58, 0x04, 0x04, 0xbe, 0x58, 0xda, 0x04, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x9e, 0x58, 0x33, 0x01, 0x08, 0xac, 0x5e, 0x90, 0x27, 0xc4, 0x9e, 0x59, 0x34, 0x01, 0x9e, 0x5a, 0x35, 0x01, 0x50, 0x63, 0x0b, 0x6b, 0xb7, 0x64, 0x01, 0x6c, 0x20, 0x3d, 0x30, 0x0b, 0x18, 0x12, 0x17, 0x88, 0x00, 0x66, 0xdb, 0x5d, 0x40, 0xac, 0x07, 0x90, 0x48, 0xac, 0x02, 0x90, 0x7c, 0xc7, 0x08, 0x9e, 0xbe, 0x59, 0xd2, 0x04, 0x05, 0x9e, 0x20, 0x3e, 0x08, 0x00, 0xfe, 0x5e, 0xbe, 0x5e, 0x3b, 0x04, 0xe5, 0xc8, 0xf5, 0xc8, 0xca, 0xc5, 0x01, 0x62, 0xbe, 0x5a, 0x35, 0x01, 0x53, 0xfc, 
+0x40, 0x07, 0x3a, 0x9e, 0x05, 0x66, 0x5e, 0x48, 0x11, 0x9c, 0x00, 0x66, 0x35, 0x67, 0xe7, 0x38, 0x4e, 0x07, 0x63, 0x5f, 0x97, 0x17, 0x01, 0x8c, 0xe2, 0x5f, 0xc7, 0x06, 0x19, 0x03, 0x19, 0x04, 0xa3, 0x5f, 0xe6, 0x07, 0x02, 0x80, 0xff, 0x67, 0xff, 0x6f, 0xfb, 0x5d, 0x35, 0x67, 0x50, 0x63, 0x0b, 0x6b, 0xb7, 0x64, 0x01, 0x6c, 0xe7, 0x38, 0x5d, 0x07, 0x85, 0x5e, 0xdd, 0x5b, 0x19, 0x02, 0xbe, 0x5a, 0x35, 0x01, 0x69, 0x67, 0x5f, 0x48, 0x17, 0x9c, 0x19, 0x01, 0x19, 0x05, 0xbe, 0x59, 0x34, 0x01, 0x40, 0xac, 0x07, 0x90, 0x48, 0xac, 0x02, 0x90, 0x05, 0x67, 0x05, 0x9e, 0x9e, 0x5f, 0x36, 0x01, 0x02, 0x9e, 0x9e, 0x5f, 0x36, 0x01, 0x3f, 0x48, 0xb5, 0x81, 0x00, 0x61, 0x30, 0x65, 0x0b, 0x6d, 0xbe, 0x59, 0x34, 0x01, 0xaf, 0x9f, 0x3a, 0x38, 0x00, 0x66, 0x3e, 0x48, 0x0c, 0x8a, 0x01, 0x66, 0x49, 0x43, 
+0x80, 0x07, 0x3e, 0x48, 0x19, 0x8a, 0x02, 0x66, 0x3e, 0x48, 0x26, 0x8a, 0x03, 0x66, 0x3e, 0x48, 0x33, 0x8a, 0x04, 0x66, 0x3e, 0x48, 0x40, 0x8a, 0x04, 0x66, 0xbe, 0x5e, 0x30, 0x04, 0x40, 0x66, 0xbe, 0x5e, 0x31, 0x04, 0x02, 0x66, 0xbe, 0x5e, 0xd2, 0x04, 0x04, 0x66, 0xbe, 0x5e, 0xd3, 0x04, 0x01, 0x66, 0xbe, 0x5e, 0xd4, 0x04, 0x3f, 0x9e, 0x04, 0x66, 0xbe, 0x5e, 0x30, 0x04, 0x40, 0x66, 0xbe, 0x5e, 0x31, 0x04, 0x02, 0x66, 0xbe, 0x5e, 0xd2, 0x04, 0x04, 0x66, 0xbe, 0x5e, 0xd3, 0x04, 0x02, 0x66, 0xbe, 0x5e, 0xd4, 0x04, 0x2f, 0x9e, 0x04, 0x66, 0xbe, 0x5e, 0x30, 0x04, 0x40, 0x66, 0xbe, 0x5e, 0x31, 0x04, 0x0a, 0x66, 0xbe, 0x5e, 0xd2, 0x04, 0x04, 0x66, 0xbe, 0x5e, 0xd3, 0x04, 0x01, 0x66, 0xbe, 0x5e, 0xd4, 0x04, 0x1f, 0x9e, 0x04, 0x66, 0xbe, 0x5e, 0x30, 0x04, 0x40, 0x66, 0xbe, 0x5e, 0x4a, 0xb8, 
+0xc0, 0x07, 0x31, 0x04, 0x0b, 0x66, 0xbe, 0x5e, 0xd2, 0x04, 0x04, 0x66, 0xbe, 0x5e, 0xd3, 0x04, 0x01, 0x66, 0xbe, 0x5e, 0xd4, 0x04, 0x0f, 0x9e, 0x04, 0x66, 0xbe, 0x5e, 0x30, 0x04, 0x40, 0x66, 0xbe, 0x5e, 0x31, 0x04, 0x00, 0x66, 0xbe, 0x5e, 0xd2, 0x04, 0x04, 0x66, 0xbe, 0x5e, 0xd3, 0x04, 0x02, 0x66, 0xbe, 0x5e, 0xd4, 0x04, 0x3a, 0x38, 0x35, 0xb1, 0x29, 0xaa, 0xb5, 0xb1, 0x38, 0xb1, 0x29, 0xa8, 0xb8, 0xb1, 0x46, 0xad, 0x01, 0x90, 0x3a, 0x38, 0x00, 0x67, 0x00, 0x66, 0x73, 0xc8, 0xbe, 0x5e, 0x40, 0x01, 0x00, 0x67, 0x00, 0x66, 0x73, 0xc8, 0xbe, 0x5e, 0x41, 0x01, 0x9e, 0x5e, 0x40, 0x01, 0x7e, 0xac, 0x48, 0x90, 0x32, 0xb1, 0x29, 0xa8, 0xb2, 0xb1, 0x9e, 0x5e, 0x40, 0x01, 0x66, 0xac, 0x12, 0x92, 0x5e, 0xac, 0x01, 0x90, 0x0d, 0xc8, 0xff, 0x61, 0x03, 0x69, 0x9e, 0x5a, 0x40, 0x01, 0xba, 0x17, 
+0x00, 0x08, 0x22, 0x21, 0x19, 0x11, 0x9e, 0x5b, 0x41, 0x01, 0x27, 0x38, 0x09, 0x08, 0x00, 0x67, 0x63, 0x5e, 0x83, 0xc8, 0x19, 0x03, 0x3a, 0x38, 0x0d, 0xc8, 0x3a, 0x38, 0x9e, 0x59, 0x2f, 0x00, 0x1b, 0x21, 0x24, 0x38, 0x01, 0x00, 0x24, 0x3a, 0x02, 0x00, 0x48, 0x5a, 0x02, 0x00, 0x26, 0x59, 0x26, 0x59, 0x26, 0x59, 0x78, 0x21, 0x20, 0x29, 0xfe, 0x59, 0x9e, 0x5e, 0x29, 0x00, 0x26, 0x2e, 0x00, 0x67, 0x83, 0xc8, 0x9e, 0x59, 0x2a, 0x00, 0xfe, 0x59, 0x9e, 0x5e, 0x2b, 0x00, 0x26, 0x2e, 0x00, 0x67, 0x83, 0xc8, 0x9e, 0x59, 0x2c, 0x00, 0xfe, 0x59, 0x9e, 0x5e, 0x2d, 0x00, 0x26, 0x2e, 0x00, 0x67, 0x83, 0xc8, 0x9e, 0x59, 0x2e, 0x00, 0xfe, 0x59, 0x00, 0x66, 0xff, 0x6e, 0x26, 0x2e, 0x00, 0x67, 0x83, 0xc8, 0x3a, 0x38, 0xfa, 0xa8, 0x9e, 0x5e, 0x40, 0x01, 0x00, 0x61, 0x60, 0x69, 0x26, 0x26, 0x3d, 0x4d, 
+0x40, 0x08, 0x3e, 0x48, 0x0f, 0x8a, 0x9e, 0x59, 0x40, 0x01, 0xff, 0x62, 0x03, 0x6a, 0x22, 0x22, 0x19, 0x12, 0x9e, 0x5b, 0x41, 0x01, 0x47, 0x38, 0x4f, 0x08, 0x00, 0x67, 0x00, 0x66, 0x73, 0xc8, 0xdd, 0x5b, 0x3a, 0x38, 0x9e, 0x5b, 0x41, 0x01, 0x36, 0x65, 0x21, 0x6d, 0x7d, 0x48, 0x40, 0x8a, 0x02, 0x65, 0xff, 0x6d, 0x7d, 0x48, 0x6e, 0x8a, 0x00, 0x67, 0x00, 0x66, 0x73, 0xc8, 0xdb, 0x5b, 0x9e, 0x59, 0x40, 0x01, 0xff, 0x62, 0x03, 0x6a, 0x22, 0x22, 0x01, 0x67, 0x5f, 0x48, 0x0b, 0x8a, 0x1a, 0x12, 0x47, 0x38, 0x71, 0x08, 0x00, 0x67, 0x00, 0x66, 0x73, 0xc8, 0xc1, 0x5b, 0x00, 0x67, 0x00, 0x66, 0x73, 0xc8, 0xdb, 0x5b, 0x3a, 0x38, 0x46, 0xad, 0xfe, 0x91, 0x19, 0x07, 0x46, 0xad, 0xfe, 0x93, 0x2e, 0xad, 0x03, 0x92, 0x00, 0xab, 0xca, 0x5e, 0x02, 0x9e, 0x00, 0xa9, 0xca, 0x5e, 0x10, 0x65, 0x47, 0x63, 
+0x80, 0x08, 0xfd, 0x48, 0xf1, 0x89, 0x3a, 0x38, 0x32, 0xb1, 0x29, 0xa8, 0xb2, 0xb1, 0x46, 0xad, 0xfe, 0x91, 0x19, 0x07, 0x7e, 0xac, 0x02, 0x92, 0x2e, 0xab, 0x01, 0x9e, 0x2e, 0xa9, 0x46, 0xad, 0xfe, 0x93, 0xca, 0x5e, 0x10, 0x65, 0xfd, 0x48, 0xf2, 0x89, 0x46, 0xad, 0xfe, 0x91, 0x3a, 0x38, 0x00, 0x67, 0x00, 0x66, 0x73, 0xc8, 0x88, 0x65, 0x88, 0x6d, 0xbe, 0x48, 0x10, 0x88, 0x5a, 0x62, 0xe1, 0x6a, 0xac, 0xb2, 0x40, 0x61, 0x0a, 0x69, 0x40, 0x60, 0x3d, 0x68, 0xff, 0x3f, 0x7a, 0x38, 0xff, 0x3f, 0x7a, 0x38, 0xff, 0x3f, 0x7a, 0x38, 0x00, 0x62, 0xac, 0xb2, 0x1a, 0x9e, 0x77, 0x65, 0x77, 0x6d, 0xbe, 0x48, 0x16, 0x88, 0x5a, 0x62, 0xe1, 0x6a, 0xac, 0xb2, 0x40, 0x61, 0x0a, 0x69, 0x00, 0x60, 0x3e, 0x68, 0xff, 0x3f, 0x7a, 0x38, 0xff, 0x3f, 0x7a, 0x38, 0xff, 0x3f, 0x7a, 0x38, 0xff, 0x3f, 0x45, 0xad, 
+0xc0, 0x08, 0x7a, 0x38, 0xff, 0x3f, 0x7a, 0x38, 0xff, 0x3f, 0x7a, 0x38, 0x00, 0x62, 0xac, 0xb2, 0xa1, 0xa8, 0x3a, 0x38, 0x40, 0x61, 0x0a, 0x69, 0x40, 0x60, 0x3d, 0x68, 0xff, 0x3f, 0x0f, 0x59, 0xff, 0x3f, 0x0f, 0x59, 0xff, 0x3f, 0x0f, 0x59, 0x3a, 0x38, 0x00, 0x61, 0x0b, 0x69, 0x00, 0x60, 0x3e, 0x68, 0xff, 0x3f, 0x0f, 0x59, 0xff, 0x3f, 0x0f, 0x59, 0xff, 0x3f, 0x0f, 0x59, 0xff, 0x3f, 0x0f, 0x59, 0xff, 0x3f, 0x0f, 0x59, 0xff, 0x3f, 0x0f, 0x59, 0x3a, 0x38, 0x00, 0x60, 0x00, 0x61, 0xff, 0x65, 0x01, 0x6d, 0x00, 0x66, 0x04, 0x6e, 0xa7, 0x38, 0xef, 0x08, 0xc5, 0x5b, 0x03, 0x00, 0x18, 0x09, 0xbe, 0x58, 0x2f, 0x01, 0xbe, 0x59, 0x30, 0x01, 0x3a, 0x38, 0x9e, 0x58, 0x2f, 0x01, 0xbe, 0x58, 0x31, 0x01, 0x9e, 0x58, 0x30, 0x01, 0xbe, 0x58, 0x32, 0x01, 0x3a, 0x38, 0x9e, 0x58, 0x2f, 0x01, 0xc5, 0x13, 
+0x00, 0x09, 0x16, 0x38, 0x31, 0x01, 0x0b, 0x88, 0x9e, 0x58, 0x30, 0x01, 0x16, 0x38, 0x32, 0x01, 0x06, 0x88, 0x41, 0xa9, 0x50, 0xb0, 0x00, 0xac, 0x03, 0x90, 0x00, 0xaa, 0xd0, 0xb0, 0x83, 0xa8, 0x41, 0xab, 0x3a, 0x38, 0x00, 0x60, 0xbe, 0x58, 0x3d, 0x05, 0xbe, 0x58, 0x20, 0x05, 0xbe, 0x58, 0x50, 0x05, 0xbe, 0x58, 0x38, 0x05, 0xbe, 0x58, 0xa5, 0x04, 0xbe, 0x58, 0x1f, 0x05, 0x3a, 0x38, 0x01, 0x60, 0xbe, 0x58, 0xb1, 0x04, 0x00, 0x60, 0xbe, 0x58, 0xd2, 0x04, 0xbe, 0x58, 0xd4, 0x04, 0x3a, 0x38, 0x5a, 0x38, 0x5a, 0x38, 0x01, 0xb8, 0x00, 0xb8, 0x1e, 0x58, 0x1e, 0x59, 0x1e, 0x5a, 0x1e, 0x5b, 0x1e, 0x5c, 0x1e, 0x5d, 0x1e, 0x5e, 0x1e, 0x5f, 0x01, 0xb8, 0x41, 0xab, 0x13, 0xb8, 0x14, 0xb8, 0x15, 0xb8, 0x41, 0xa9, 0x46, 0xb0, 0x00, 0xaa, 0xc6, 0xb0, 0x45, 0xb0, 0x03, 0x61, 0x01, 0x20, 0xac, 0x6c, 
+0x40, 0x09, 0x19, 0x48, 0x43, 0x8a, 0x47, 0xb0, 0x0e, 0x78, 0x48, 0xb0, 0x0f, 0x78, 0x9e, 0x58, 0x0d, 0x01, 0x18, 0x00, 0x08, 0x88, 0xbe, 0x58, 0x0a, 0x01, 0xbe, 0x58, 0x0b, 0x01, 0xbe, 0x58, 0x0c, 0x01, 0xbe, 0x58, 0x09, 0x01, 0x9e, 0x5f, 0x09, 0x01, 0x00, 0x62, 0x01, 0x66, 0xe6, 0x23, 0x09, 0x88, 0x40, 0x3b, 0x0e, 0x00, 0x40, 0x38, 0x0a, 0x01, 0x63, 0x59, 0x11, 0x01, 0x3b, 0x58, 0x01, 0x80, 0xe6, 0x2f, 0xbe, 0x5f, 0x09, 0x01, 0xc6, 0x5e, 0x19, 0x02, 0x42, 0x3b, 0x02, 0x00, 0xee, 0x81, 0xc9, 0xc9, 0x9e, 0x59, 0x0e, 0x01, 0x9e, 0x58, 0x0d, 0x01, 0x19, 0x00, 0xbe, 0x58, 0x0d, 0x01, 0x19, 0x48, 0x37, 0x80, 0x00, 0x62, 0x01, 0x66, 0xff, 0x60, 0xff, 0x68, 0x40, 0x3b, 0x0e, 0x00, 0x40, 0x3d, 0x0a, 0x01, 0xe6, 0x21, 0x01, 0x88, 0xa3, 0x58, 0x1b, 0x5b, 0xc6, 0x5e, 0x19, 0x02, 0x41, 0x0a, 
+0x80, 0x09, 0x42, 0x3b, 0x02, 0x00, 0xf1, 0x81, 0xbf, 0xc9, 0x26, 0x9e, 0x9e, 0x5a, 0x0f, 0x01, 0x9e, 0x5b, 0x0d, 0x01, 0x43, 0x40, 0x10, 0x3c, 0x10, 0x01, 0x9e, 0x5d, 0x13, 0x01, 0x19, 0x12, 0x81, 0x59, 0x47, 0x38, 0x95, 0x09, 0x47, 0xb0, 0x1b, 0x59, 0x19, 0x01, 0x1a, 0x38, 0x85, 0x01, 0x47, 0x38, 0x9c, 0x09, 0x48, 0xb0, 0x1b, 0x59, 0x19, 0x01, 0x1a, 0x38, 0xc9, 0xc9, 0x9e, 0x59, 0x0e, 0x01, 0x9e, 0x58, 0x0d, 0x01, 0x19, 0x00, 0xbe, 0x58, 0x0d, 0x01, 0x19, 0x48, 0x02, 0x80, 0xbf, 0xc9, 0x02, 0x9e, 0x01, 0x60, 0xc6, 0xb0, 0x41, 0xab, 0x90, 0xab, 0x98, 0xab, 0xa0, 0xab, 0x41, 0xab, 0x95, 0xb8, 0x94, 0xb8, 0x93, 0xb8, 0x81, 0xb8, 0x3e, 0x5f, 0x3e, 0x5e, 0x3e, 0x5d, 0x3e, 0x5c, 0x3e, 0x5b, 0x3e, 0x5a, 0x3e, 0x59, 0x3e, 0x58, 0x80, 0xb8, 0x81, 0xb8, 0x5a, 0x38, 0x00, 0x60, 0x88, 0x74, 
+0xc0, 0x09, 0xbe, 0x58, 0x0d, 0x01, 0x9e, 0x58, 0x11, 0x01, 0x19, 0x00, 0x78, 0xaa, 0xbe, 0x58, 0x11, 0x01, 0x3a, 0x38, 0xcc, 0x60, 0x0c, 0x68, 0xc6, 0xb0, 0x00, 0x60, 0xc6, 0xb0, 0x40, 0xb0, 0x10, 0xa8, 0xc0, 0xb0, 0x10, 0xaa, 0xc0, 0xb0, 0x3a, 0x38, 0x55, 0x9f, 0x54, 0x9f, 0x5a, 0x38, 0x5a, 0x38, 0x5a, 0x38, 0x5a, 0x38, 0x5a, 0x38, 0x5a, 0x38, 0x5a, 0x38, 0x5a, 0x38, 0x5a, 0x38, 0x5a, 0x38, 0x5a, 0x38, 0x5a, 0x38, 0x5a, 0x38, 0x5a, 0x38, 0x99, 0xab, 0x5a, 0x38, 0xa1, 0xab, 0x5a, 0x38, 0x5a, 0x38, 0x5a, 0x38, 0x5a, 0x38, 0xc1, 0xab, 0x5a, 0x38, 0xc9, 0xab, 0x5a, 0x38, 0xd3, 0xac, 0x1a, 0x92, 0xcb, 0xac, 0x02, 0x92, 0xcb, 0xa8, 0x16, 0x9e, 0x01, 0xb8, 0x00, 0xb8, 0x1e, 0x58, 0x1e, 0x59, 0x1e, 0x5a, 0x1e, 0x5b, 0x1e, 0x5c, 0x1e, 0x5d, 0x1e, 0x5e, 0x1e, 0x5f, 0xcb, 0xaa, 0x78, 0x69, 
+0x00, 0x0a, 0xd3, 0xa8, 0x3e, 0x5f, 0x3e, 0x5e, 0x3e, 0x5d, 0x3e, 0x5c, 0x3e, 0x5b, 0x3e, 0x5a, 0x3e, 0x59, 0x3e, 0x58, 0x80, 0xb8, 0x81, 0xb8, 0xd1, 0xab, 0x5a, 0x38, 0x5a, 0x38, 0x5a, 0x38, 0x01, 0xb8, 0x00, 0xb8, 0x1e, 0x58, 0x1e, 0x59, 0x1e, 0x5a, 0x1e, 0x5b, 0x1e, 0x5c, 0x1e, 0x5d, 0x1e, 0x5e, 0x1e, 0x5f, 0x41, 0xab, 0xa2, 0xac, 0x74, 0x92, 0x16, 0xa9, 0x16, 0xab, 0x1b, 0x70, 0x00, 0x3a, 0x1c, 0x00, 0x7a, 0xb1, 0x24, 0x39, 0xff, 0x00, 0x3b, 0x5a, 0x19, 0x00, 0x1b, 0x78, 0x06, 0x39, 0x01, 0x00, 0x38, 0x8a, 0x06, 0x39, 0x02, 0x00, 0x08, 0x88, 0x1d, 0x71, 0x24, 0x39, 0xf0, 0x00, 0x26, 0x39, 0x90, 0x00, 0x02, 0x88, 0x06, 0x63, 0x3c, 0x7b, 0x16, 0x39, 0x3c, 0x00, 0x10, 0x8a, 0xaa, 0xa8, 0xe9, 0xab, 0xff, 0x60, 0xf9, 0xb0, 0x3e, 0x5f, 0x3e, 0x5e, 0x3e, 0x5d, 0x3e, 0x5c, 0xb9, 0xba, 
+0x40, 0x0a, 0x3e, 0x5b, 0x3e, 0x5a, 0x3e, 0x59, 0x3e, 0x58, 0x80, 0xb8, 0x81, 0xb8, 0x16, 0xa9, 0x5a, 0x38, 0xea, 0xf1, 0xa2, 0xac, 0x98, 0x3c, 0x01, 0x3a, 0xa2, 0xaa, 0xaa, 0xaa, 0x00, 0x60, 0x1b, 0x78, 0xe9, 0xab, 0x39, 0x60, 0x0c, 0x68, 0x19, 0x00, 0x09, 0x58, 0xf9, 0xb0, 0x3e, 0x5f, 0x3e, 0x5e, 0x3e, 0x5d, 0x3e, 0x5c, 0x3e, 0x5b, 0x3e, 0x5a, 0x3e, 0x59, 0x3e, 0x58, 0x80, 0xb8, 0x81, 0xb8, 0x16, 0xa9, 0x5a, 0x38, 0x04, 0x60, 0x1c, 0x71, 0xba, 0xac, 0x0f, 0x90, 0x26, 0x3b, 0x96, 0x00, 0x02, 0x88, 0x06, 0x60, 0x14, 0x9e, 0x26, 0x3b, 0x97, 0x00, 0x02, 0x88, 0x06, 0x60, 0x0f, 0x9e, 0x26, 0x3b, 0x98, 0x00, 0x0c, 0x88, 0x06, 0x60, 0x0a, 0x9e, 0x26, 0x3b, 0x59, 0x00, 0x04, 0x88, 0x01, 0x60, 0x1b, 0x78, 0x0b, 0x60, 0x03, 0x9e, 0x00, 0x60, 0x1b, 0x78, 0x04, 0x60, 0x3c, 0x78, 0x56, 0x51, 
+0x80, 0x0a, 0xaa, 0xa8, 0xe9, 0xab, 0xff, 0x60, 0xf9, 0xb0, 0x3e, 0x5f, 0x3e, 0x5e, 0x3e, 0x5d, 0x3e, 0x5c, 0x3e, 0x5b, 0x3e, 0x5a, 0x3e, 0x59, 0x3e, 0x58, 0x80, 0xb8, 0x81, 0xb8, 0x16, 0xa9, 0x5a, 0x38, 0x7b, 0xb0, 0x00, 0xac, 0xfd, 0x93, 0x7b, 0xb0, 0x10, 0xac, 0xfd, 0x93, 0x1b, 0x70, 0x27, 0x71, 0x19, 0x11, 0x01, 0x31, 0x5c, 0x8a, 0x81, 0xac, 0x04, 0x92, 0x00, 0x3a, 0x29, 0x00, 0x43, 0x59, 0x47, 0x9e, 0x06, 0x3a, 0x00, 0x00, 0x17, 0x8a, 0x06, 0x3a, 0x01, 0x00, 0x16, 0x8a, 0x3e, 0x72, 0x18, 0x32, 0x15, 0x88, 0x02, 0x3b, 0x02, 0x00, 0x9b, 0xac, 0x01, 0x90, 0x68, 0x5b, 0x70, 0x3a, 0x1a, 0x00, 0x43, 0x5b, 0x64, 0x39, 0xff, 0x00, 0x00, 0xac, 0x01, 0x90, 0x31, 0x9e, 0xfe, 0x5b, 0x64, 0x39, 0xff, 0x00, 0x2d, 0x9e, 0x28, 0x71, 0x2b, 0x9e, 0x29, 0x71, 0x29, 0x9e, 0x02, 0x3b, 0xa0, 0x60, 
+0xc0, 0x0a, 0x02, 0x00, 0x19, 0x8a, 0x19, 0x13, 0x9b, 0xac, 0x01, 0x90, 0x68, 0x5b, 0xa0, 0xac, 0x02, 0x90, 0x1a, 0x72, 0x02, 0x9e, 0x70, 0x3a, 0x1a, 0x00, 0x43, 0x5b, 0x64, 0x39, 0xff, 0x00, 0x00, 0xac, 0x06, 0x92, 0xa0, 0xac, 0x03, 0x90, 0x1a, 0x72, 0x7b, 0x02, 0x1a, 0x7a, 0x11, 0x9e, 0xfe, 0x5b, 0x64, 0x39, 0xff, 0x00, 0x0d, 0x9e, 0x2a, 0x71, 0xa0, 0xac, 0x0a, 0x90, 0x2a, 0x72, 0x19, 0x02, 0x56, 0x3a, 0x3e, 0x00, 0x04, 0x8a, 0x48, 0x77, 0x19, 0x07, 0x48, 0x7f, 0x01, 0x9e, 0x48, 0x7e, 0xf9, 0xb1, 0x19, 0x00, 0x1b, 0x78, 0xe9, 0xab, 0x3e, 0x5f, 0x3e, 0x5e, 0x3e, 0x5d, 0x3e, 0x5c, 0x3e, 0x5b, 0x3e, 0x5a, 0x3e, 0x59, 0x3e, 0x58, 0x80, 0xb8, 0x81, 0xb8, 0x5a, 0x38, 0xb2, 0xaa, 0x92, 0xa8, 0xa2, 0xaa, 0x00, 0x60, 0x1b, 0x78, 0x39, 0x60, 0x0c, 0x68, 0x19, 0x00, 0x09, 0x58, 0x27, 0xed, 
+0x00, 0x0b, 0xf9, 0xb0, 0xe9, 0xab, 0x95, 0xc6, 0x3e, 0x5f, 0x3e, 0x5e, 0x3e, 0x5d, 0x3e, 0x5c, 0x3e, 0x5b, 0x3e, 0x5a, 0x3e, 0x59, 0x3e, 0x58, 0x80, 0xb8, 0x81, 0xb8, 0x5a, 0x38, 0x01, 0xb8, 0x00, 0xb8, 0x1e, 0x58, 0x1e, 0x59, 0x1e, 0x5a, 0x1e, 0x5b, 0x1e, 0x5c, 0x1e, 0x5d, 0x1e, 0x5e, 0x1e, 0x5f, 0x41, 0xab, 0xa2, 0xac, 0x03, 0x90, 0xff, 0x65, 0xff, 0x6d, 0x01, 0x9e, 0x00, 0x65, 0x1b, 0x70, 0x16, 0x39, 0x27, 0x00, 0x53, 0x8a, 0x1b, 0x70, 0x81, 0xac, 0x04, 0x92, 0x00, 0x3a, 0x28, 0x00, 0x43, 0x59, 0x4e, 0x9e, 0x06, 0x3a, 0x00, 0x00, 0x17, 0x8a, 0x06, 0x3a, 0x01, 0x00, 0x16, 0x8a, 0x3e, 0x72, 0x18, 0x32, 0x15, 0x88, 0x02, 0x3b, 0x02, 0x00, 0x9b, 0xac, 0x01, 0x90, 0x68, 0x5b, 0x70, 0x3a, 0x1a, 0x00, 0x43, 0x5b, 0x64, 0x39, 0xff, 0x00, 0x00, 0xac, 0x01, 0x90, 0x38, 0x9e, 0xb2, 0x07, 
+0x40, 0x0b, 0xfe, 0x5b, 0x64, 0x39, 0xff, 0x00, 0x34, 0x9e, 0x28, 0x71, 0x32, 0x9e, 0x29, 0x71, 0x30, 0x9e, 0x02, 0x3b, 0x02, 0x00, 0x1d, 0x8a, 0x19, 0x13, 0x9b, 0xac, 0x01, 0x90, 0x68, 0x5b, 0xa0, 0xac, 0x02, 0x90, 0x1a, 0x72, 0x05, 0x9e, 0x1a, 0x72, 0x61, 0x58, 0x1b, 0x61, 0x01, 0x40, 0x40, 0x02, 0x43, 0x5b, 0x64, 0x39, 0xff, 0x00, 0x1b, 0x70, 0x00, 0xac, 0x06, 0x92, 0xa0, 0xac, 0x03, 0x90, 0x1a, 0x72, 0x19, 0x02, 0x1a, 0x7a, 0x14, 0x9e, 0xfe, 0x5b, 0x64, 0x39, 0xff, 0x00, 0x10, 0x9e, 0x2a, 0x71, 0xa0, 0xac, 0x0a, 0x90, 0x2a, 0x72, 0x19, 0x02, 0x56, 0x3a, 0x3e, 0x00, 0x04, 0x8a, 0x48, 0x77, 0x19, 0x07, 0x48, 0x7f, 0x01, 0x9e, 0x48, 0x7e, 0x02, 0x9e, 0xff, 0x61, 0x19, 0x10, 0x25, 0x21, 0xd5, 0xb1, 0x19, 0x00, 0x1b, 0x78, 0x52, 0xb2, 0x3a, 0xaa, 0xd2, 0xb2, 0xf1, 0xab, 0xd2, 0xe1, 
+0x80, 0x0b, 0x52, 0xb2, 0x02, 0xac, 0xfd, 0x91, 0x52, 0xb2, 0x12, 0xac, 0x01, 0x90, 0x98, 0x9f, 0xb2, 0xaa, 0x92, 0xa8, 0x00, 0x60, 0x1b, 0x78, 0x52, 0xb2, 0x3a, 0xaa, 0xd2, 0xb2, 0xf1, 0xab, 0xa2, 0xaa, 0x95, 0xc6, 0x54, 0xb1, 0x39, 0xac, 0xfd, 0x93, 0x80, 0x64, 0xd5, 0xb4, 0x3e, 0x5f, 0x3e, 0x5e, 0x3e, 0x5d, 0x3e, 0x5c, 0x3e, 0x5b, 0x3e, 0x5a, 0x3e, 0x59, 0x3e, 0x58, 0x80, 0xb8, 0x81, 0xb8, 0x5a, 0x38, 0x01, 0xb8, 0x00, 0xb8, 0x1e, 0x58, 0x1e, 0x59, 0x1e, 0x5a, 0x1e, 0x5b, 0x1e, 0x5c, 0x1e, 0x5d, 0x1e, 0x5e, 0x1e, 0x5f, 0x41, 0xab, 0x55, 0xb0, 0x9e, 0x59, 0xfb, 0x00, 0x26, 0x59, 0x01, 0x30, 0x0f, 0x88, 0x52, 0xb2, 0x3a, 0xaa, 0xd2, 0xb2, 0xf9, 0xab, 0x3e, 0x5f, 0x3e, 0x5e, 0x3e, 0x5d, 0x3e, 0x5c, 0x3e, 0x5b, 0x3e, 0x5a, 0x3e, 0x59, 0x3e, 0x58, 0x80, 0xb8, 0x81, 0xb8, 0x7b, 0x92, 
+0xc0, 0x0b, 0x5a, 0x38, 0x52, 0xb2, 0x3a, 0xac, 0xfd, 0x91, 0x1b, 0x70, 0x00, 0x3a, 0x1c, 0x00, 0x55, 0xb1, 0x3b, 0x5a, 0x19, 0x00, 0x1b, 0x78, 0x06, 0x39, 0x01, 0x00, 0x4e, 0x8a, 0x06, 0x39, 0x02, 0x00, 0x08, 0x88, 0x1d, 0x71, 0x24, 0x39, 0xf0, 0x00, 0x26, 0x39, 0x90, 0x00, 0x02, 0x88, 0x06, 0x63, 0x3c, 0x7b, 0x16, 0x39, 0x3c, 0x00, 0x06, 0x8a, 0xaa, 0xa8, 0x52, 0xb2, 0x3a, 0xaa, 0xd2, 0xb2, 0xf9, 0xab, 0xdf, 0x9f, 0x52, 0xb2, 0x3a, 0xaa, 0xd2, 0xb2, 0xea, 0xf1, 0x9e, 0x5c, 0x1c, 0x00, 0x86, 0x3c, 0x53, 0x00, 0x98, 0x3a, 0x01, 0x3a, 0x9e, 0x5c, 0x1c, 0x00, 0x86, 0x3c, 0x96, 0x00, 0x98, 0x3a, 0x01, 0x3a, 0x9e, 0x5c, 0x1c, 0x00, 0x86, 0x3c, 0x98, 0x00, 0x98, 0x3a, 0x01, 0x3a, 0x9e, 0x58, 0x3c, 0x05, 0x18, 0x30, 0x0b, 0x8a, 0x9e, 0x5c, 0x1c, 0x00, 0x9e, 0x58, 0x1d, 0x00, 0x2c, 0xf3, 
+0x00, 0x0c, 0x86, 0x3c, 0x54, 0x00, 0x04, 0x88, 0x06, 0x38, 0xc0, 0x00, 0x98, 0x3a, 0x01, 0x3a, 0xa2, 0xaa, 0xaa, 0xaa, 0x00, 0x60, 0x1b, 0x78, 0x54, 0xb1, 0x39, 0xac, 0xfd, 0x93, 0xf9, 0xab, 0x80, 0x64, 0xd5, 0xb4, 0x3e, 0x5f, 0x3e, 0x5e, 0x3e, 0x5d, 0x3e, 0x5c, 0x3e, 0x5b, 0x3e, 0x5a, 0x3e, 0x59, 0x3e, 0x58, 0x80, 0xb8, 0x81, 0xb8, 0x5a, 0x38, 0x04, 0x60, 0x1c, 0x71, 0x26, 0x3a, 0x96, 0x00, 0x02, 0x88, 0x06, 0x60, 0x0e, 0x9e, 0x26, 0x3a, 0x97, 0x00, 0x02, 0x88, 0x06, 0x60, 0x09, 0x9e, 0x26, 0x3a, 0x98, 0x00, 0x02, 0x88, 0x06, 0x60, 0x04, 0x9e, 0x26, 0x3a, 0x59, 0x00, 0x01, 0x88, 0x0b, 0x60, 0x3c, 0x78, 0xaa, 0xa8, 0x52, 0xb2, 0x3a, 0xaa, 0xd2, 0xb2, 0x8a, 0x9f, 0x5a, 0x38, 0x5a, 0x38, 0x51, 0x00, 0x5a, 0x00, 0x5b, 0x00, 0x5c, 0x00, 0x5d, 0x00, 0x5e, 0x00, 0x5f, 0x00, 0xda, 0x62, 
+0x40, 0x0c, 0x60, 0x00, 0x61, 0x00, 0x62, 0x00, 0xda, 0xcc, 0xe1, 0xdf, 0x2b, 0xdf, 0x9e, 0x58, 0x43, 0x01, 0x00, 0x61, 0x19, 0x48, 0x08, 0x8a, 0x9e, 0x58, 0x4f, 0x05, 0xbe, 0x58, 0x23, 0x01, 0x02, 0x38, 0x64, 0x00, 0xbe, 0x58, 0x25, 0x01, 0x98, 0xe1, 0x3c, 0xcf, 0x9e, 0x58, 0xc0, 0x00, 0x00, 0xac, 0x23, 0x90, 0x59, 0xdc, 0xc0, 0xdb, 0x9e, 0x58, 0xc0, 0x00, 0x00, 0xac, 0x1d, 0x90, 0x9e, 0x58, 0xb1, 0x00, 0x02, 0x61, 0x19, 0x48, 0x02, 0x9a, 0xbe, 0x59, 0xb1, 0x00, 0xf8, 0xce, 0x27, 0xe0, 0x9c, 0xda, 0x8d, 0xda, 0x85, 0xde, 0x9e, 0x58, 0xdc, 0x00, 0x00, 0xac, 0x3c, 0x92, 0x6d, 0xd5, 0x9e, 0x58, 0xb1, 0x00, 0x18, 0x10, 0x08, 0x8a, 0x86, 0xce, 0x06, 0xac, 0x31, 0x90, 0x9e, 0x58, 0xc0, 0x00, 0x10, 0xac, 0x2d, 0x92, 0x2f, 0x9e, 0x00, 0x60, 0xbe, 0x58, 0xb1, 0x00, 0xbe, 0x58, 0x39, 0xf1, 
+0x80, 0x0c, 0x7e, 0x00, 0xbe, 0x58, 0x9a, 0x00, 0xbe, 0x58, 0x8c, 0x00, 0xbe, 0x58, 0xa8, 0x00, 0xbe, 0x58, 0x79, 0x00, 0xbe, 0x58, 0x87, 0x00, 0xbe, 0x58, 0x95, 0x00, 0xbe, 0x58, 0xa3, 0x00, 0xbe, 0x58, 0xc3, 0x00, 0xbe, 0x58, 0xc4, 0x00, 0xbe, 0x58, 0xc5, 0x00, 0xbe, 0x58, 0xc6, 0x00, 0xbe, 0x58, 0xbc, 0x00, 0xbe, 0x58, 0xbd, 0x00, 0x9e, 0x58, 0xc8, 0x00, 0x10, 0x38, 0xca, 0x00, 0x10, 0x38, 0xcc, 0x00, 0x10, 0x38, 0xce, 0x00, 0x18, 0x10, 0x01, 0x88, 0xd2, 0xce, 0xf8, 0xce, 0xcb, 0xcc, 0x59, 0xd2, 0x1a, 0x38, 0x1a, 0x38, 0xe1, 0xce, 0x9e, 0x58, 0xac, 0x04, 0x18, 0x30, 0x1a, 0x8a, 0xba, 0xac, 0x18, 0x90, 0x9e, 0x58, 0xfa, 0x00, 0x19, 0x00, 0x9e, 0x59, 0xac, 0x04, 0x19, 0x48, 0x0f, 0x96, 0x78, 0x60, 0x28, 0x78, 0x29, 0x78, 0x2a, 0x78, 0x2b, 0x78, 0xff, 0x60, 0x2c, 0x78, 0x05, 0xb4, 
+0xc0, 0x0c, 0x2d, 0x78, 0x2e, 0x78, 0x2f, 0x78, 0x30, 0x78, 0xa2, 0xa8, 0x93, 0xc6, 0x60, 0xd1, 0x00, 0x60, 0xbe, 0x58, 0xfa, 0x00, 0x3a, 0x38, 0x9e, 0x58, 0x37, 0x01, 0x19, 0x10, 0x06, 0x39, 0x00, 0x00, 0x01, 0x98, 0x00, 0x60, 0xbe, 0x58, 0x37, 0x01, 0x3a, 0x38, 0x9e, 0x58, 0x29, 0x05, 0xbe, 0x58, 0x37, 0x01, 0x3a, 0x38, 0x9e, 0x58, 0x1b, 0x05, 0x06, 0x39, 0x00, 0x00, 0xe6, 0x88, 0x00, 0x60, 0xbe, 0x58, 0xc6, 0x03, 0x01, 0x67, 0x9e, 0x58, 0x02, 0x04, 0x18, 0x30, 0xb7, 0x8a, 0x9e, 0x58, 0x12, 0x04, 0x07, 0x38, 0x20, 0x0d, 0x9f, 0xcd, 0x9e, 0x58, 0xc5, 0x03, 0x9e, 0x59, 0xc0, 0x03, 0x19, 0x48, 0x11, 0x9c, 0x9e, 0x58, 0xc4, 0x03, 0x19, 0x00, 0xbe, 0x58, 0xc4, 0x03, 0x9e, 0x59, 0xc2, 0x03, 0x19, 0x48, 0x19, 0x96, 0xbe, 0x59, 0xc4, 0x03, 0x9e, 0x58, 0xd1, 0x00, 0x07, 0x28, 0x9c, 0x78, 
+0x00, 0x0d, 0xbe, 0x58, 0xd1, 0x00, 0x11, 0x9e, 0x9e, 0x58, 0xc5, 0x03, 0x9e, 0x59, 0xc1, 0x03, 0x19, 0x48, 0x0b, 0x82, 0x00, 0x61, 0xbe, 0x59, 0xc4, 0x03, 0x9e, 0x58, 0xd1, 0x00, 0xe0, 0x5f, 0x07, 0x20, 0xbe, 0x58, 0xd1, 0x00, 0xe0, 0x5f, 0x00, 0x9e, 0x9e, 0x58, 0xc6, 0x03, 0x00, 0x38, 0xd4, 0x00, 0x9e, 0x59, 0xc4, 0x03, 0x3b, 0x58, 0x9e, 0x58, 0xc6, 0x03, 0x19, 0x00, 0xbe, 0x58, 0xc6, 0x03, 0xe6, 0x5f, 0x9e, 0x58, 0xd1, 0x00, 0x9e, 0x59, 0x4a, 0x01, 0x19, 0x11, 0x12, 0x88, 0x06, 0x39, 0x00, 0x00, 0x0f, 0x8a, 0x06, 0x39, 0x01, 0x00, 0x0c, 0x8a, 0x06, 0x39, 0x02, 0x00, 0x09, 0x8a, 0x06, 0x39, 0x04, 0x00, 0x06, 0x8a, 0x06, 0x39, 0x08, 0x00, 0x03, 0x8a, 0x00, 0x60, 0xbe, 0x58, 0xd1, 0x00, 0x9e, 0x58, 0xd2, 0x00, 0x18, 0x30, 0x11, 0x8a, 0x9e, 0x58, 0xd1, 0x00, 0x9e, 0x59, 0x9a, 0x78, 
+0x40, 0x0d, 0xd2, 0x00, 0x01, 0xac, 0x03, 0x92, 0x08, 0x58, 0x28, 0x59, 0xfb, 0x9f, 0x00, 0xac, 0x01, 0x92, 0x05, 0x9e, 0x9e, 0x58, 0xd2, 0x00, 0xbe, 0x58, 0xd1, 0x00, 0x1e, 0x9e, 0x9e, 0x58, 0xd1, 0x00, 0x18, 0x30, 0x1a, 0x8a, 0x9e, 0x58, 0xd1, 0x00, 0x00, 0x61, 0x01, 0x62, 0x00, 0x63, 0x00, 0xac, 0x0b, 0x90, 0x25, 0x64, 0x02, 0x6c, 0x90, 0x3c, 0x06, 0x04, 0x81, 0x04, 0x83, 0x5c, 0x9b, 0x48, 0x03, 0x80, 0x81, 0x5b, 0xbe, 0x5a, 0xd1, 0x00, 0x46, 0x5a, 0x08, 0x58, 0x19, 0x01, 0x9e, 0x5c, 0x12, 0x04, 0x3c, 0x48, 0x01, 0x98, 0xeb, 0x9f, 0x9e, 0x5a, 0xc0, 0x00, 0x9e, 0x58, 0xd1, 0x00, 0x9e, 0x59, 0xd2, 0x00, 0x19, 0x48, 0x02, 0x88, 0x12, 0xaa, 0x01, 0x9e, 0x12, 0xa8, 0xbe, 0x5a, 0xc0, 0x00, 0x9e, 0x58, 0xd1, 0x00, 0xbe, 0x58, 0xd3, 0x00, 0x18, 0x30, 0x0a, 0x8a, 0x9e, 0x58, 0xe9, 0x0f, 
+0x80, 0x0d, 0x37, 0x01, 0x18, 0x30, 0x0f, 0x8a, 0x9e, 0x58, 0xc0, 0x00, 0x18, 0xa8, 0xbe, 0x58, 0xc0, 0x00, 0x09, 0x9e, 0x9e, 0x58, 0x42, 0x01, 0x18, 0x10, 0x05, 0x88, 0x9e, 0x58, 0xc0, 0x00, 0x18, 0xaa, 0xbe, 0x58, 0xc0, 0x00, 0x9e, 0x58, 0xc0, 0x00, 0x18, 0xac, 0x08, 0x90, 0x10, 0xaa, 0xbe, 0x58, 0xc0, 0x00, 0x00, 0x60, 0xbe, 0x58, 0xd1, 0x00, 0xbe, 0x58, 0xd2, 0x00, 0x3a, 0x38, 0x9e, 0x58, 0xc6, 0x03, 0x00, 0x38, 0x25, 0x02, 0x10, 0x38, 0x06, 0x04, 0x03, 0x58, 0xbe, 0x58, 0xc5, 0x03, 0x9e, 0x58, 0xc6, 0x03, 0x00, 0x38, 0x58, 0x04, 0x03, 0x58, 0xbe, 0x58, 0xc0, 0x03, 0x9e, 0x58, 0xc6, 0x03, 0x00, 0x38, 0x5e, 0x04, 0x03, 0x58, 0xbe, 0x58, 0xc1, 0x03, 0x9e, 0x58, 0xc6, 0x03, 0x00, 0x38, 0x64, 0x04, 0x03, 0x58, 0xbe, 0x58, 0xc2, 0x03, 0x9e, 0x58, 0xc6, 0x03, 0x00, 0x38, 0x86, 0xf8, 
+0xc0, 0x0d, 0xd4, 0x00, 0x03, 0x58, 0xbe, 0x58, 0xc4, 0x03, 0x3a, 0x38, 0x01, 0x61, 0x19, 0x48, 0x01, 0x8a, 0x3a, 0x38, 0x25, 0x60, 0x02, 0x68, 0x10, 0x38, 0x06, 0x04, 0x05, 0x5d, 0x03, 0x5e, 0x64, 0x60, 0xc0, 0x40, 0xc5, 0x04, 0x1c, 0x5c, 0x00, 0x62, 0x9e, 0x59, 0x1c, 0x05, 0x19, 0x48, 0x0f, 0x9c, 0x19, 0x02, 0x9e, 0x59, 0x1d, 0x05, 0x19, 0x48, 0x0a, 0x9c, 0x19, 0x02, 0x9e, 0x59, 0x1e, 0x05, 0x19, 0x48, 0x05, 0x9c, 0x19, 0x02, 0x64, 0x61, 0x19, 0x48, 0x01, 0x9c, 0x40, 0x9e, 0x00, 0x60, 0x58, 0x48, 0x07, 0x8a, 0x01, 0x60, 0x58, 0x48, 0x10, 0x8a, 0x02, 0x60, 0x58, 0x48, 0x1b, 0x8a, 0x28, 0x9e, 0x9e, 0x5b, 0x58, 0x04, 0x9b, 0x48, 0x32, 0x80, 0xd4, 0x70, 0x19, 0x00, 0xd4, 0x78, 0x00, 0x60, 0xd5, 0x78, 0xd6, 0x78, 0xd7, 0x78, 0x2f, 0x9e, 0x9e, 0x5b, 0x59, 0x04, 0x9b, 0x48, 0xc1, 0x95, 
+0x00, 0x0e, 0x26, 0x80, 0x9e, 0x58, 0xd5, 0x00, 0x19, 0x00, 0xbe, 0x58, 0xd5, 0x00, 0x00, 0x60, 0xd4, 0x78, 0xd6, 0x78, 0xd7, 0x78, 0x21, 0x9e, 0x9e, 0x5b, 0x5a, 0x04, 0x9b, 0x48, 0x18, 0x80, 0x9e, 0x58, 0xd6, 0x00, 0x19, 0x00, 0xbe, 0x58, 0xd6, 0x00, 0x00, 0x60, 0xd4, 0x78, 0xd5, 0x78, 0xd7, 0x78, 0x13, 0x9e, 0x9e, 0x5b, 0x5b, 0x04, 0x9b, 0x48, 0x0a, 0x80, 0x9e, 0x58, 0xd7, 0x00, 0x19, 0x00, 0xbe, 0x58, 0xd7, 0x00, 0x00, 0x60, 0xd4, 0x78, 0xd5, 0x78, 0xd6, 0x78, 0x05, 0x9e, 0x00, 0x60, 0xd4, 0x78, 0xd5, 0x78, 0xd6, 0x78, 0xd7, 0x78, 0x00, 0x60, 0xbe, 0x58, 0xc6, 0x03, 0x01, 0x67, 0x6f, 0x38, 0x57, 0x0e, 0xb6, 0xcd, 0x00, 0x61, 0x19, 0x48, 0x0a, 0x98, 0xbe, 0x59, 0xc4, 0x03, 0x9e, 0x58, 0xd1, 0x00, 0xe0, 0x5f, 0x07, 0x20, 0xbe, 0x58, 0xd1, 0x00, 0xe0, 0x5f, 0x0b, 0x9e, 0x57, 0x7d, 
+0x40, 0x0e, 0x9e, 0x59, 0xc2, 0x03, 0x19, 0x48, 0x07, 0x96, 0xbe, 0x59, 0xc4, 0x03, 0x9e, 0x58, 0xd1, 0x00, 0x07, 0x28, 0xbe, 0x58, 0xd1, 0x00, 0x9e, 0x58, 0xc6, 0x03, 0x00, 0x38, 0xd4, 0x00, 0x9e, 0x59, 0xc4, 0x03, 0x3b, 0x58, 0x9e, 0x58, 0xc6, 0x03, 0x19, 0x00, 0xbe, 0x58, 0xc6, 0x03, 0xe6, 0x5f, 0x98, 0x3f, 0x21, 0x0d, 0x9e, 0x58, 0x7e, 0x00, 0x9e, 0x59, 0x8c, 0x00, 0x9e, 0x5b, 0x9a, 0x00, 0x9e, 0x5c, 0xa8, 0x00, 0x01, 0x02, 0x19, 0x12, 0x0e, 0x80, 0x32, 0x62, 0x1a, 0x48, 0x1c, 0x9c, 0xb6, 0x62, 0x03, 0x6a, 0x1a, 0x48, 0x18, 0x82, 0x2c, 0x62, 0x3a, 0x48, 0x15, 0x9c, 0xd0, 0x62, 0x07, 0x6a, 0x3a, 0x48, 0x11, 0x82, 0x64, 0x02, 0x19, 0x12, 0x0f, 0x80, 0x32, 0x62, 0x7a, 0x48, 0x0b, 0x9c, 0xb6, 0x62, 0x03, 0x6a, 0x7a, 0x48, 0x07, 0x82, 0x2c, 0x62, 0x9a, 0x48, 0x04, 0x9c, 0xdf, 0xa7, 
+0x80, 0x0e, 0xd0, 0x62, 0x07, 0x6a, 0x9a, 0x48, 0x00, 0x82, 0xa1, 0xaa, 0x3a, 0x38, 0x00, 0x66, 0x9e, 0x58, 0x7e, 0x00, 0x9e, 0x5a, 0xc7, 0x00, 0x9e, 0x59, 0x8c, 0x00, 0x9e, 0x5b, 0xcb, 0x00, 0xb3, 0xd6, 0x9e, 0x5d, 0x6a, 0x04, 0x9d, 0x48, 0x19, 0x80, 0xc6, 0xce, 0x9e, 0x58, 0x9a, 0x00, 0x9e, 0x5a, 0xc9, 0x00, 0x9e, 0x59, 0xa8, 0x00, 0x9e, 0x5b, 0xcd, 0x00, 0xb3, 0xd6, 0x9e, 0x5d, 0x6a, 0x04, 0x9d, 0x48, 0x02, 0x80, 0xcc, 0xce, 0x21, 0x9e, 0x9e, 0x58, 0xc9, 0x00, 0xbe, 0x58, 0x9a, 0x00, 0x9e, 0x59, 0xcd, 0x00, 0xbe, 0x59, 0xa8, 0x00, 0x18, 0x9e, 0x9e, 0x58, 0x9a, 0x00, 0x9e, 0x5a, 0xc9, 0x00, 0x9e, 0x59, 0xa8, 0x00, 0x9e, 0x5b, 0xcd, 0x00, 0xb3, 0xd6, 0x9e, 0x5d, 0x6a, 0x04, 0x9d, 0x48, 0x0a, 0x80, 0xcc, 0xce, 0x9e, 0x58, 0xc7, 0x00, 0xbe, 0x58, 0x7e, 0x00, 0x9e, 0x59, 0x13, 0x51, 
+0xc0, 0x0e, 0xcb, 0x00, 0xbe, 0x59, 0x8c, 0x00, 0x01, 0x9e, 0x06, 0xa8, 0x3a, 0x38, 0x9e, 0x58, 0xcf, 0x00, 0x19, 0x00, 0xbe, 0x58, 0xcf, 0x00, 0x3a, 0x38, 0x9e, 0x58, 0xd0, 0x00, 0x19, 0x00, 0xbe, 0x58, 0xd0, 0x00, 0x3a, 0x38, 0x7a, 0x60, 0xdb, 0xce, 0x88, 0x60, 0xdb, 0xce, 0x96, 0x60, 0xdb, 0xce, 0xa4, 0x60, 0xdb, 0xce, 0x3a, 0x38, 0x00, 0x61, 0x6f, 0x38, 0xdf, 0x0e, 0x3d, 0x58, 0x1a, 0x38, 0x3a, 0x38, 0x79, 0x60, 0xf0, 0xce, 0x87, 0x60, 0xf0, 0xce, 0x95, 0x60, 0xf0, 0xce, 0xa3, 0x60, 0xf0, 0xce, 0xb1, 0x60, 0xf0, 0xce, 0x9e, 0x58, 0xd1, 0x00, 0xbe, 0x58, 0xd2, 0x00, 0x3a, 0x38, 0x1c, 0x00, 0x6f, 0x38, 0xf6, 0x0e, 0x02, 0x39, 0x01, 0x00, 0x23, 0x5a, 0x5f, 0x58, 0x3a, 0x38, 0x9e, 0x58, 0xb1, 0x00, 0x9e, 0x59, 0xb2, 0x00, 0x00, 0x62, 0x00, 0x63, 0x1a, 0x48, 0x04, 0x88, 0x42, 0xb2, 
+0x00, 0x0f, 0x3b, 0x48, 0x02, 0x88, 0x00, 0x64, 0x35, 0x9e, 0x01, 0x62, 0x01, 0x63, 0x1a, 0x48, 0x04, 0x88, 0x3b, 0x48, 0x02, 0x88, 0x01, 0x64, 0x2d, 0x9e, 0x02, 0x62, 0x02, 0x63, 0x1a, 0x48, 0x04, 0x88, 0x3b, 0x48, 0x02, 0x88, 0x02, 0x64, 0x25, 0x9e, 0x01, 0x62, 0x00, 0x63, 0x1a, 0x48, 0x04, 0x80, 0x3b, 0x48, 0x02, 0x88, 0x03, 0x64, 0x1d, 0x9e, 0x00, 0x62, 0x01, 0x63, 0x1a, 0x48, 0x09, 0x88, 0x3b, 0x48, 0x02, 0x88, 0x04, 0x64, 0x15, 0x9e, 0x02, 0x63, 0x3b, 0x48, 0x02, 0x88, 0x04, 0x64, 0x10, 0x9e, 0x02, 0x62, 0x01, 0x63, 0x1a, 0x48, 0x04, 0x88, 0x3b, 0x48, 0x02, 0x88, 0x05, 0x64, 0x08, 0x9e, 0x01, 0x62, 0x02, 0x63, 0x1a, 0x48, 0x06, 0x88, 0x3b, 0x48, 0x04, 0x88, 0x06, 0x64, 0x00, 0x9e, 0xbe, 0x5c, 0xc1, 0x00, 0x3a, 0x38, 0x9e, 0x59, 0xc0, 0x00, 0x39, 0xac, 0x16, 0x92, 0x05, 0xaa, 
+0x40, 0x0f, 0x01, 0xac, 0x07, 0x92, 0x9e, 0x59, 0x23, 0x01, 0x9e, 0x58, 0x40, 0x01, 0x19, 0x48, 0x08, 0x98, 0x3d, 0x9e, 0x9e, 0x59, 0x25, 0x01, 0x9e, 0x58, 0x40, 0x01, 0x19, 0x48, 0x37, 0x98, 0x06, 0x9e, 0x9e, 0x58, 0xc0, 0x00, 0x00, 0xa8, 0xbe, 0x58, 0xc0, 0x00, 0x30, 0x9e, 0x9e, 0x58, 0xc0, 0x00, 0x00, 0xaa, 0xbe, 0x58, 0xc0, 0x00, 0xff, 0x60, 0x7f, 0x68, 0xbe, 0x58, 0x38, 0x01, 0xbe, 0x58, 0x39, 0x01, 0x00, 0x60, 0xbe, 0x58, 0x43, 0x01, 0xbe, 0x58, 0x44, 0x01, 0x9e, 0x58, 0x40, 0x01, 0x9e, 0x59, 0x25, 0x01, 0x19, 0x48, 0x1a, 0x98, 0x9e, 0x58, 0xd3, 0x00, 0x18, 0x10, 0x16, 0x88, 0x9e, 0x58, 0x42, 0x01, 0x01, 0x61, 0x19, 0x48, 0x04, 0x8a, 0x02, 0x61, 0x19, 0x48, 0x01, 0x8a, 0x04, 0x9e, 0x9e, 0x58, 0x27, 0x05, 0xbe, 0x58, 0x37, 0x01, 0x00, 0x60, 0xbe, 0x58, 0x42, 0x01, 0xdd, 0xf0, 
+0x80, 0x0f, 0x9e, 0x58, 0xc0, 0x00, 0x38, 0xaa, 0xbe, 0x58, 0xc0, 0x00, 0x85, 0xaa, 0x3a, 0x38, 0x9e, 0x58, 0x7e, 0x00, 0x9e, 0x59, 0x8c, 0x00, 0x9e, 0x5e, 0x9a, 0x00, 0x9e, 0x5f, 0xa8, 0x00, 0x9e, 0x5a, 0x7e, 0x00, 0xbe, 0x5a, 0xc7, 0x00, 0x9e, 0x5a, 0x8c, 0x00, 0xbe, 0x5a, 0xcb, 0x00, 0x9e, 0x5a, 0x9a, 0x00, 0xbe, 0x5a, 0xc9, 0x00, 0x9e, 0x5a, 0xa8, 0x00, 0xbe, 0x5a, 0xcd, 0x00, 0xa0, 0xd0, 0x5e, 0xd0, 0x7a, 0xd1, 0x3a, 0x38, 0x9e, 0x58, 0xbd, 0x00, 0x9e, 0x59, 0x4b, 0x04, 0x19, 0x48, 0x0d, 0x80, 0x9e, 0x5e, 0x9a, 0x00, 0x9e, 0x5f, 0xa8, 0x00, 0x9e, 0x5a, 0x9a, 0x00, 0xbe, 0x5a, 0xc9, 0x00, 0x9e, 0x5a, 0xa8, 0x00, 0xbe, 0x5a, 0xcd, 0x00, 0x08, 0x9e, 0x00, 0x66, 0x00, 0x67, 0x00, 0x62, 0xbe, 0x5a, 0xc9, 0x00, 0x00, 0x62, 0xbe, 0x5a, 0xcd, 0x00, 0x00, 0x60, 0x00, 0x61, 0x3f, 0x9b, 
+0xc0, 0x0f, 0x00, 0x62, 0xbe, 0x5a, 0xc7, 0x00, 0x00, 0x62, 0xbe, 0x5a, 0xcb, 0x00, 0x00, 0x62, 0xbe, 0x5a, 0xcf, 0x00, 0xa0, 0xd0, 0x5e, 0xd0, 0x7a, 0xd1, 0x3a, 0x38, 0x9e, 0x58, 0xbc, 0x00, 0x9e, 0x59, 0x4b, 0x04, 0x19, 0x48, 0x0d, 0x80, 0x9e, 0x58, 0x7e, 0x00, 0x9e, 0x59, 0x8c, 0x00, 0x9e, 0x5a, 0x7e, 0x00, 0xbe, 0x5a, 0xc7, 0x00, 0x9e, 0x5a, 0x8c, 0x00, 0xbe, 0x5a, 0xcb, 0x00, 0x08, 0x9e, 0x00, 0x60, 0x00, 0x61, 0x00, 0x62, 0xbe, 0x5a, 0xc7, 0x00, 0x00, 0x62, 0xbe, 0x5a, 0xcb, 0x00, 0x00, 0x66, 0x00, 0x67, 0x00, 0x62, 0xbe, 0x5a, 0xc9, 0x00, 0x00, 0x62, 0xbe, 0x5a, 0xcd, 0x00, 0x00, 0x62, 0xbe, 0x5a, 0xd0, 0x00, 0xa0, 0xd0, 0x5e, 0xd0, 0x7a, 0xd1, 0x3a, 0x38, 0x00, 0x60, 0x00, 0x61, 0x00, 0x66, 0x00, 0x67, 0x00, 0x62, 0xbe, 0x5a, 0xc7, 0x00, 0x00, 0x62, 0xbe, 0x5a, 0xbb, 0x25, 
+0x00, 0x10, 0xcb, 0x00, 0x00, 0x62, 0xbe, 0x5a, 0xc9, 0x00, 0x00, 0x62, 0xbe, 0x5a, 0xcd, 0x00, 0xbe, 0x5a, 0xcf, 0x00, 0xbe, 0x5a, 0xd0, 0x00, 0xa0, 0xd0, 0x5e, 0xd0, 0x7a, 0xd1, 0x3a, 0x38, 0x9e, 0x58, 0x7e, 0x00, 0x9e, 0x59, 0x8c, 0x00, 0x9e, 0x5e, 0xa1, 0x00, 0x9e, 0x5f, 0xaf, 0x00, 0xbe, 0x58, 0xc7, 0x00, 0xbe, 0x59, 0xcb, 0x00, 0xbe, 0x5e, 0xc9, 0x00, 0xbe, 0x5f, 0xcd, 0x00, 0xa0, 0xd0, 0x5e, 0xd0, 0x7a, 0xd1, 0x3a, 0x38, 0x9e, 0x58, 0x85, 0x00, 0x9e, 0x59, 0x93, 0x00, 0xc9, 0x76, 0xcd, 0x77, 0x9e, 0x5a, 0x85, 0x00, 0xbe, 0x5a, 0xc7, 0x00, 0x9e, 0x5a, 0x93, 0x00, 0xbe, 0x5a, 0xcb, 0x00, 0xc9, 0x72, 0xbe, 0x5a, 0xc9, 0x00, 0xcd, 0x72, 0xbe, 0x5a, 0xcd, 0x00, 0xa0, 0xd0, 0x5e, 0xd0, 0x7a, 0xd1, 0x3a, 0x38, 0x9e, 0x58, 0xc7, 0x00, 0x9e, 0x59, 0xcb, 0x00, 0x9e, 0x5e, 0x60, 0xe8, 
+0x40, 0x10, 0xc9, 0x00, 0x9e, 0x5f, 0xcd, 0x00, 0x9e, 0x5a, 0x85, 0x00, 0xbe, 0x5a, 0xc7, 0x00, 0x9e, 0x5a, 0x93, 0x00, 0xbe, 0x5a, 0xcb, 0x00, 0x9e, 0x5a, 0xa1, 0x00, 0xbe, 0x5a, 0xc9, 0x00, 0x9e, 0x5a, 0xaf, 0x00, 0xbe, 0x5a, 0xcd, 0x00, 0xa0, 0xd0, 0x5e, 0xd0, 0x7a, 0xd1, 0x3a, 0x38, 0x00, 0x60, 0x00, 0x61, 0x00, 0x66, 0x00, 0x67, 0xa0, 0xd0, 0x7a, 0xd1, 0x3a, 0x38, 0x1e, 0x58, 0x1e, 0x59, 0x1e, 0x5e, 0x1e, 0x5f, 0x9e, 0x5a, 0x2f, 0x05, 0x18, 0x12, 0x2d, 0x8a, 0x43, 0xd2, 0x9e, 0x5a, 0xc0, 0x03, 0x18, 0x12, 0x28, 0x8a, 0x9e, 0x5b, 0x3b, 0x01, 0x18, 0x13, 0x24, 0x8a, 0x43, 0x34, 0x1b, 0x14, 0x21, 0x88, 0x19, 0x12, 0x0d, 0x88, 0x9e, 0x58, 0xc7, 0x00, 0x9e, 0x59, 0xcb, 0x00, 0x9e, 0x5e, 0xca, 0x00, 0x9e, 0x5f, 0xce, 0x00, 0xbe, 0x5e, 0xc9, 0x00, 0xbe, 0x5f, 0xcd, 0x00, 0x53, 0x2f, 
+0x80, 0x10, 0x0c, 0x9e, 0x9e, 0x58, 0xc8, 0x00, 0x9e, 0x59, 0xcc, 0x00, 0x9e, 0x5e, 0xc9, 0x00, 0x9e, 0x5f, 0xcd, 0x00, 0xbe, 0x58, 0xc7, 0x00, 0xbe, 0x59, 0xcb, 0x00, 0x7a, 0xd1, 0xf4, 0x60, 0x01, 0x68, 0x9e, 0x59, 0x32, 0x05, 0x5e, 0xd5, 0x3e, 0x5f, 0x3e, 0x5e, 0x3e, 0x59, 0x3e, 0x58, 0xbe, 0x58, 0xc7, 0x00, 0xbe, 0x59, 0xcb, 0x00, 0xbe, 0x5e, 0xc9, 0x00, 0xbe, 0x5f, 0xcd, 0x00, 0x3a, 0x38, 0x1e, 0x58, 0x1e, 0x59, 0x1e, 0x5e, 0x1e, 0x5f, 0x00, 0x65, 0x9e, 0x5a, 0x2e, 0x05, 0x18, 0x12, 0x75, 0x8a, 0x9e, 0x5a, 0xc0, 0x00, 0x2a, 0xaa, 0xbe, 0x5a, 0xc0, 0x00, 0x9e, 0x5a, 0xd1, 0x00, 0x18, 0x12, 0x01, 0x8a, 0x05, 0xa8, 0x1e, 0x5d, 0x43, 0xd2, 0x3e, 0x5d, 0x9e, 0x5a, 0xc0, 0x03, 0x18, 0x12, 0x01, 0x8a, 0x0d, 0xa8, 0xa2, 0x3c, 0x00, 0x00, 0x60, 0x8a, 0x9e, 0x5a, 0x2e, 0x05, 0x80, 0xe6, 
+0xc0, 0x10, 0x01, 0x63, 0x5b, 0x48, 0x04, 0x8a, 0x02, 0x63, 0x5b, 0x48, 0x05, 0x8a, 0x57, 0x9e, 0xa2, 0x3c, 0x02, 0x00, 0x0e, 0x8a, 0x2c, 0x9e, 0xa2, 0x3c, 0x01, 0x00, 0x29, 0x8a, 0x00, 0x9e, 0x9e, 0x5a, 0xc0, 0x00, 0x2a, 0xaa, 0xbe, 0x5a, 0xc0, 0x00, 0x00, 0x62, 0xbe, 0x5a, 0xd1, 0x00, 0x46, 0x9e, 0x9e, 0x5a, 0xc0, 0x00, 0x2a, 0xaa, 0xbe, 0x5a, 0xc0, 0x00, 0x00, 0x62, 0xbe, 0x5a, 0xd1, 0x00, 0x9e, 0x5a, 0xd2, 0x00, 0x18, 0x12, 0x3a, 0x8a, 0x00, 0x60, 0x00, 0x61, 0x00, 0x66, 0x00, 0x67, 0xbe, 0x58, 0xc7, 0x00, 0xbe, 0x59, 0xcb, 0x00, 0xbe, 0x5e, 0xc9, 0x00, 0xbe, 0x5f, 0xcd, 0x00, 0x7a, 0xd1, 0xf4, 0x60, 0x01, 0x68, 0x9e, 0x59, 0x32, 0x05, 0x5e, 0xd5, 0x27, 0x9e, 0x9e, 0x5a, 0xc0, 0x00, 0x2a, 0xa8, 0xbe, 0x5a, 0xc0, 0x00, 0x9e, 0x5a, 0x3b, 0x01, 0x18, 0x12, 0x2b, 0x8a, 0xbb, 0x7c, 
+0x00, 0x11, 0x9e, 0x5a, 0xd1, 0x00, 0xbe, 0x5a, 0xca, 0x03, 0x00, 0x62, 0xbe, 0x5a, 0xd1, 0x00, 0x00, 0x60, 0x00, 0x61, 0x00, 0x66, 0x00, 0x67, 0xbe, 0x58, 0xc7, 0x00, 0xbe, 0x59, 0xcb, 0x00, 0xbe, 0x5e, 0xc9, 0x00, 0xbe, 0x5f, 0xcd, 0x00, 0x7a, 0xd1, 0xf4, 0x60, 0x01, 0x68, 0x9e, 0x59, 0x32, 0x05, 0x5e, 0xd5, 0x9e, 0x5a, 0xca, 0x03, 0xbe, 0x5a, 0xd1, 0x00, 0x0d, 0x9e, 0x3e, 0x5f, 0x3e, 0x5e, 0x3e, 0x59, 0x3e, 0x58, 0xbe, 0x58, 0xc7, 0x00, 0xbe, 0x59, 0xcb, 0x00, 0xbe, 0x5e, 0xc9, 0x00, 0xbe, 0x5f, 0xcd, 0x00, 0x10, 0x9e, 0x3e, 0x5f, 0x3e, 0x5e, 0x3e, 0x59, 0x3e, 0x58, 0x00, 0x60, 0x00, 0x61, 0x00, 0x66, 0x00, 0x67, 0xbe, 0x58, 0xc7, 0x00, 0xbe, 0x59, 0xcb, 0x00, 0xbe, 0x5e, 0xc9, 0x00, 0xbe, 0x5f, 0xcd, 0x00, 0x3a, 0x38, 0x9e, 0x5f, 0x9e, 0x04, 0x1e, 0x58, 0x9e, 0x58, 0xb9, 0xf0, 
+0x40, 0x11, 0x3b, 0x05, 0x18, 0x30, 0x1b, 0x8a, 0x28, 0x70, 0x06, 0x38, 0x5a, 0x00, 0x17, 0x88, 0x29, 0x70, 0x18, 0x30, 0x14, 0x88, 0x2a, 0x70, 0x18, 0x30, 0x11, 0x88, 0x2b, 0x70, 0x18, 0x30, 0x0e, 0x88, 0x2c, 0x70, 0x18, 0x30, 0x0b, 0x88, 0x2d, 0x70, 0x18, 0x30, 0x08, 0x88, 0x2e, 0x70, 0x18, 0x30, 0x05, 0x88, 0x2f, 0x70, 0x18, 0x30, 0x02, 0x88, 0x9e, 0x5f, 0x3b, 0x05, 0x3e, 0x58, 0x3a, 0x38, 0x9e, 0x5d, 0x53, 0x05, 0x19, 0x05, 0x3c, 0xd1, 0xc4, 0x66, 0x09, 0x6e, 0xa2, 0xac, 0x10, 0x90, 0x19, 0x16, 0xfc, 0x89, 0x19, 0x17, 0xf8, 0x89, 0x19, 0x15, 0x09, 0x8a, 0x95, 0xc6, 0x88, 0x66, 0x13, 0x6e, 0xa2, 0xac, 0x05, 0x90, 0x19, 0x16, 0xfc, 0x89, 0x93, 0xc6, 0xec, 0x9f, 0xa2, 0xaa, 0x95, 0xc6, 0x3a, 0x38, 0xe9, 0xac, 0x01, 0x90, 0x3a, 0x38, 0x1e, 0x5e, 0x1e, 0x5f, 0x01, 0x66, 0x11, 0x5c, 
+0x80, 0x11, 0x9e, 0x5f, 0xfd, 0x00, 0xdf, 0x48, 0x03, 0x88, 0x3e, 0x5f, 0x3e, 0x5e, 0x3a, 0x38, 0x3e, 0x5f, 0x3e, 0x5e, 0xba, 0xac, 0x01, 0x92, 0x3a, 0x38, 0x1e, 0x58, 0x9e, 0x58, 0xc0, 0x00, 0x20, 0xa8, 0xbe, 0x58, 0xc0, 0x00, 0x3e, 0x58, 0xa2, 0xa8, 0xbe, 0x58, 0xc0, 0x03, 0x21, 0xd2, 0x41, 0x58, 0xbe, 0x59, 0xc0, 0x03, 0x2b, 0xd2, 0x41, 0x59, 0xbe, 0x5e, 0xc0, 0x03, 0x21, 0xd2, 0x41, 0x5e, 0xbe, 0x5f, 0xc0, 0x03, 0x2b, 0xd2, 0x41, 0x5f, 0x9e, 0x5a, 0x03, 0x04, 0x19, 0x32, 0x26, 0x88, 0x01, 0x02, 0x0e, 0x8a, 0x9e, 0x5b, 0xdb, 0x04, 0x03, 0xac, 0x04, 0x92, 0x9e, 0x5a, 0xd9, 0x04, 0x19, 0x12, 0x40, 0x10, 0x0b, 0xac, 0x04, 0x90, 0x9e, 0x5a, 0xda, 0x04, 0x19, 0x12, 0x41, 0x11, 0xc7, 0x02, 0x0e, 0x8a, 0x9e, 0x5b, 0xdb, 0x04, 0x03, 0xac, 0x04, 0x92, 0x9e, 0x5a, 0xd9, 0x04, 0x9e, 0x67, 
+0xc0, 0x11, 0x19, 0x12, 0x46, 0x16, 0x0b, 0xac, 0x04, 0x90, 0x9e, 0x5a, 0xda, 0x04, 0x19, 0x12, 0x47, 0x17, 0x01, 0x5a, 0xc1, 0x5b, 0x21, 0x58, 0xe1, 0x5e, 0x41, 0x59, 0x61, 0x5f, 0x5a, 0x62, 0xbe, 0x5a, 0x28, 0x00, 0x20, 0xdc, 0xbe, 0x5a, 0x29, 0x00, 0xbe, 0x5b, 0x2a, 0x00, 0xbe, 0x5c, 0x2b, 0x00, 0xc1, 0x58, 0xe1, 0x59, 0x20, 0xdc, 0xbe, 0x5a, 0x2c, 0x00, 0xbe, 0x5b, 0x2d, 0x00, 0xbe, 0x5c, 0x2e, 0x00, 0x43, 0xd2, 0x9e, 0x5a, 0xc0, 0x03, 0x18, 0x12, 0x01, 0x8a, 0xd5, 0xcc, 0x9e, 0x58, 0xd1, 0x00, 0x9e, 0x5a, 0x2e, 0x05, 0x18, 0x12, 0x07, 0x8a, 0x9e, 0x5a, 0xc0, 0x00, 0x2a, 0xac, 0x03, 0x90, 0x12, 0xac, 0x01, 0x92, 0x3a, 0x38, 0x06, 0x58, 0x06, 0x58, 0x15, 0x38, 0xc0, 0x03, 0xbe, 0x58, 0x2f, 0x00, 0x08, 0x60, 0x27, 0x78, 0x82, 0xac, 0x03, 0x92, 0x52, 0xb0, 0x20, 0xaa, 0xbc, 0x26, 
+0x00, 0x12, 0xd2, 0xb0, 0x00, 0x60, 0x1b, 0x78, 0x93, 0xc6, 0x60, 0xd1, 0x00, 0x60, 0xbe, 0x58, 0xfa, 0x00, 0x9e, 0x58, 0xc7, 0x00, 0xbe, 0x58, 0xc8, 0x00, 0x9e, 0x58, 0xcb, 0x00, 0xbe, 0x58, 0xcc, 0x00, 0x9e, 0x58, 0xc9, 0x00, 0xbe, 0x58, 0xca, 0x00, 0x9e, 0x58, 0xcd, 0x00, 0xbe, 0x58, 0xce, 0x00, 0x9e, 0x58, 0xc0, 0x03, 0xbe, 0x58, 0x3b, 0x01, 0x9e, 0x58, 0xd1, 0x00, 0xbe, 0x58, 0xd2, 0x00, 0x3a, 0x38, 0x9e, 0x5a, 0x05, 0x04, 0xbe, 0x5a, 0xc1, 0x03, 0x9e, 0x5a, 0xd9, 0x04, 0xbe, 0x5a, 0xc2, 0x03, 0x35, 0xd2, 0x3a, 0x38, 0x9e, 0x5a, 0x04, 0x04, 0xbe, 0x5a, 0xc1, 0x03, 0x9e, 0x5a, 0xda, 0x04, 0xbe, 0x5a, 0xc2, 0x03, 0x35, 0xd2, 0x3a, 0x38, 0x1e, 0x58, 0x1e, 0x59, 0x9e, 0x58, 0xc0, 0x03, 0x9e, 0x59, 0xc2, 0x03, 0x19, 0x40, 0x9e, 0x5a, 0xc1, 0x03, 0x3c, 0x5a, 0x01, 0x5a, 0xab, 0x22, 
+0x40, 0x12, 0x3e, 0x59, 0x3e, 0x58, 0x3a, 0x38, 0x00, 0x62, 0x9e, 0x58, 0xb1, 0x00, 0x18, 0x30, 0x9e, 0x58, 0xc7, 0x00, 0x9e, 0x59, 0xcb, 0x00, 0x01, 0x28, 0x01, 0x8a, 0x02, 0xa8, 0x9e, 0x58, 0xc9, 0x00, 0x9e, 0x59, 0xcd, 0x00, 0x01, 0x28, 0x02, 0x8a, 0x0a, 0xa8, 0x00, 0x9e, 0xbe, 0x5a, 0xc0, 0x03, 0x3a, 0x38, 0x9e, 0x58, 0xc0, 0x00, 0x20, 0xaa, 0xbe, 0x58, 0xc0, 0x00, 0x9e, 0x58, 0xc1, 0x00, 0x04, 0x61, 0x19, 0x48, 0x23, 0x88, 0x2a, 0xd3, 0x00, 0x62, 0xbe, 0x5a, 0xbc, 0x00, 0xbe, 0x5a, 0xbd, 0x00, 0x7a, 0x64, 0x88, 0x65, 0x85, 0x58, 0xa5, 0x59, 0x01, 0x00, 0x00, 0x62, 0x2f, 0x38, 0x75, 0x12, 0x1a, 0x48, 0x04, 0x8a, 0x85, 0x58, 0xa5, 0x59, 0x01, 0x00, 0x0d, 0x9e, 0x96, 0x64, 0xa4, 0x65, 0x85, 0x58, 0xa5, 0x59, 0x01, 0x00, 0x00, 0x62, 0x2f, 0x38, 0x83, 0x12, 0x1a, 0x48, 0xd8, 0xc7, 
+0x80, 0x12, 0x04, 0x8a, 0x85, 0x58, 0xa5, 0x59, 0x01, 0x00, 0xf7, 0xcf, 0x9c, 0x9e, 0x9e, 0x58, 0xc1, 0x00, 0x06, 0x61, 0x19, 0x48, 0x2e, 0x88, 0x9e, 0x58, 0x7e, 0x00, 0x9e, 0x59, 0x8c, 0x00, 0x00, 0x64, 0x01, 0x05, 0xbc, 0x48, 0x13, 0x8a, 0xbe, 0x5c, 0xbd, 0x00, 0xbe, 0x5c, 0x95, 0x00, 0xbe, 0x5c, 0xa3, 0x00, 0xbe, 0x5c, 0xc5, 0x00, 0xbe, 0x5c, 0xc6, 0x00, 0x9e, 0x58, 0xbc, 0x00, 0x9e, 0x59, 0x4b, 0x04, 0x19, 0x48, 0x7f, 0x80, 0xe0, 0xd3, 0xcd, 0xcf, 0x7c, 0x9e, 0xbe, 0x5c, 0xbc, 0x00, 0xbe, 0x5c, 0x79, 0x00, 0xbe, 0x5c, 0x87, 0x00, 0xbe, 0x5c, 0xc3, 0x00, 0xbe, 0x5c, 0xc4, 0x00, 0x9e, 0x58, 0xbd, 0x00, 0x9e, 0x59, 0x4b, 0x04, 0x19, 0x48, 0x6c, 0x80, 0xe0, 0xd3, 0xa3, 0xcf, 0x69, 0x9e, 0x9e, 0x58, 0xc1, 0x00, 0x01, 0x61, 0x19, 0x48, 0x22, 0x88, 0x9e, 0x58, 0x7e, 0x00, 0xa3, 0x44, 
+0xc0, 0x12, 0x9e, 0x59, 0x8c, 0x00, 0x00, 0x64, 0x01, 0x05, 0xbc, 0x48, 0x0e, 0x8a, 0x00, 0x60, 0xbe, 0x58, 0xd0, 0x00, 0x9e, 0x58, 0xbc, 0x00, 0x9e, 0x59, 0x4b, 0x04, 0x19, 0x48, 0x10, 0x80, 0x1a, 0x38, 0xe0, 0xd3, 0x1a, 0x38, 0x87, 0xcf, 0x4e, 0x9e, 0x00, 0x60, 0xbe, 0x58, 0xcf, 0x00, 0x9e, 0x58, 0xbd, 0x00, 0x9e, 0x59, 0x4b, 0x04, 0x19, 0x48, 0x02, 0x80, 0xe0, 0xd3, 0x87, 0xcf, 0x42, 0x9e, 0x9e, 0x58, 0xc1, 0x00, 0x02, 0x61, 0x19, 0x48, 0x1b, 0x88, 0x9e, 0x58, 0xbc, 0x00, 0x9e, 0x59, 0x4b, 0x04, 0x19, 0x48, 0x0c, 0x80, 0x9e, 0x58, 0xbd, 0x00, 0x9e, 0x59, 0x4b, 0x04, 0x19, 0x48, 0x03, 0x80, 0xe0, 0xd3, 0x87, 0xcf, 0x0b, 0x9e, 0xe0, 0xd3, 0xcd, 0xcf, 0x08, 0x9e, 0x9e, 0x58, 0xbd, 0x00, 0x9e, 0x59, 0x4b, 0x04, 0x19, 0x48, 0x02, 0x80, 0xe0, 0xd3, 0xa3, 0xcf, 0x22, 0x9e, 0xb5, 0xdb, 
+0x00, 0x13, 0x9e, 0x58, 0xc1, 0x00, 0x00, 0x61, 0x19, 0x48, 0x17, 0x88, 0x00, 0x60, 0xbe, 0x58, 0x7e, 0x00, 0xbe, 0x58, 0x8c, 0x00, 0xbe, 0x58, 0x9a, 0x00, 0xbe, 0x58, 0xa8, 0x00, 0xbe, 0x58, 0xc3, 0x00, 0xbe, 0x58, 0xc4, 0x00, 0xbe, 0x58, 0xc5, 0x00, 0xbe, 0x58, 0xc6, 0x00, 0x9e, 0x58, 0xc0, 0x00, 0x10, 0xac, 0x08, 0x90, 0x87, 0xcf, 0x06, 0x9e, 0x9e, 0x58, 0xc1, 0x00, 0x05, 0x61, 0x19, 0x48, 0x01, 0x88, 0xc3, 0x9f, 0x9e, 0x58, 0xc0, 0x00, 0x20, 0xac, 0x03, 0x92, 0x10, 0xac, 0x01, 0x90, 0x57, 0xd0, 0x3a, 0x38, 0x00, 0x62, 0x1e, 0x5a, 0x7a, 0x64, 0x88, 0x65, 0x85, 0x58, 0xa5, 0x59, 0x01, 0x00, 0x00, 0x62, 0x2f, 0x38, 0x38, 0x13, 0x1a, 0x48, 0x3f, 0x8a, 0x85, 0x58, 0xa5, 0x59, 0x01, 0x00, 0x7a, 0x64, 0x88, 0x65, 0x85, 0x58, 0x83, 0x5a, 0xa5, 0x59, 0xa3, 0x5b, 0xb3, 0xd6, 0x7f, 0x45, 
+0x40, 0x13, 0x81, 0x5f, 0xbe, 0x5c, 0x3c, 0x01, 0x9e, 0x59, 0x4e, 0x04, 0xf9, 0x48, 0x04, 0x82, 0x9e, 0x59, 0x4f, 0x04, 0xf9, 0x48, 0x2a, 0x80, 0x7a, 0x64, 0x85, 0x58, 0xbe, 0x58, 0xdb, 0x03, 0x85, 0x58, 0xbe, 0x58, 0xdd, 0x03, 0x83, 0x58, 0xbe, 0x58, 0xdf, 0x03, 0x88, 0x64, 0x85, 0x58, 0xbe, 0x58, 0xdc, 0x03, 0x85, 0x58, 0xbe, 0x58, 0xde, 0x03, 0x83, 0x58, 0xbe, 0x58, 0xe0, 0x03, 0x9e, 0x58, 0x4e, 0x04, 0x9e, 0x59, 0x4f, 0x04, 0x01, 0x00, 0x08, 0x58, 0xbe, 0x58, 0xe2, 0x03, 0x9e, 0x58, 0x31, 0x05, 0xbe, 0x58, 0xe3, 0x03, 0xf5, 0xd4, 0x9e, 0x58, 0xe1, 0x03, 0x01, 0x61, 0x19, 0x48, 0x04, 0x8a, 0x00, 0x9e, 0x3e, 0x5a, 0x19, 0x02, 0x1e, 0x5a, 0x96, 0x64, 0xa4, 0x65, 0x85, 0x58, 0xa5, 0x59, 0x01, 0x00, 0x00, 0x62, 0x2f, 0x38, 0x81, 0x13, 0x1a, 0x48, 0x3f, 0x8a, 0x85, 0x58, 0x61, 0x60, 
+0x80, 0x13, 0xa5, 0x59, 0x01, 0x00, 0x96, 0x64, 0xa4, 0x65, 0x85, 0x58, 0x83, 0x5a, 0xa5, 0x59, 0xa3, 0x5b, 0xb3, 0xd6, 0x81, 0x5f, 0xbe, 0x5c, 0x3c, 0x01, 0x9e, 0x59, 0x4e, 0x04, 0xf9, 0x48, 0x04, 0x82, 0x9e, 0x59, 0x4f, 0x04, 0xf9, 0x48, 0x2a, 0x80, 0x96, 0x64, 0x85, 0x58, 0xbe, 0x58, 0xdb, 0x03, 0x85, 0x58, 0xbe, 0x58, 0xdd, 0x03, 0x83, 0x58, 0xbe, 0x58, 0xdf, 0x03, 0xa4, 0x64, 0x85, 0x58, 0xbe, 0x58, 0xdc, 0x03, 0x85, 0x58, 0xbe, 0x58, 0xde, 0x03, 0x83, 0x58, 0xbe, 0x58, 0xe0, 0x03, 0x9e, 0x58, 0x4e, 0x04, 0x9e, 0x59, 0x4f, 0x04, 0x01, 0x00, 0x08, 0x58, 0xbe, 0x58, 0xe2, 0x03, 0x9e, 0x58, 0x31, 0x05, 0xbe, 0x58, 0xe3, 0x03, 0xf5, 0xd4, 0x9e, 0x58, 0xe1, 0x03, 0x01, 0x61, 0x19, 0x48, 0x04, 0x8a, 0x00, 0x9e, 0x3e, 0x5a, 0x58, 0x02, 0x1e, 0x5a, 0x3e, 0x5a, 0x46, 0x39, 0x8c, 0x02, 
+0xc0, 0x13, 0x00, 0x00, 0x1d, 0x8a, 0x46, 0x39, 0x01, 0x00, 0x06, 0x8a, 0x46, 0x39, 0x10, 0x00, 0x0a, 0x8a, 0x46, 0x39, 0x11, 0x00, 0x0e, 0x8a, 0x23, 0xd0, 0xf4, 0x60, 0x01, 0x68, 0x9e, 0x59, 0x32, 0x05, 0x5e, 0xd5, 0x0d, 0x9e, 0x0f, 0xd0, 0xf4, 0x60, 0x01, 0x68, 0x9e, 0x59, 0x32, 0x05, 0x5e, 0xd5, 0x06, 0x9e, 0x3b, 0xd0, 0xf4, 0x60, 0x01, 0x68, 0x9e, 0x59, 0x32, 0x05, 0x5e, 0xd5, 0x3a, 0x38, 0x9e, 0x58, 0x79, 0x00, 0x9e, 0x5a, 0xc7, 0x00, 0x9e, 0x59, 0x87, 0x00, 0x9e, 0x5b, 0xcb, 0x00, 0x01, 0x06, 0xb5, 0x8a, 0x9e, 0x58, 0xbc, 0x00, 0x9e, 0x59, 0x4b, 0x04, 0x19, 0x48, 0xaf, 0x80, 0x79, 0x64, 0x85, 0x58, 0xbe, 0x58, 0xdb, 0x03, 0x85, 0x58, 0xbe, 0x58, 0xdd, 0x03, 0x83, 0x58, 0xbe, 0x58, 0xdf, 0x03, 0x87, 0x64, 0x85, 0x58, 0xbe, 0x58, 0xdc, 0x03, 0x85, 0x58, 0xbe, 0x58, 0x9d, 0x8e, 
+0x00, 0x14, 0xde, 0x03, 0x83, 0x58, 0xbe, 0x58, 0xe0, 0x03, 0x9e, 0x58, 0x7b, 0x04, 0xbe, 0x58, 0xe2, 0x03, 0x9e, 0x58, 0x2d, 0x05, 0xbe, 0x58, 0xe3, 0x03, 0xf5, 0xd4, 0x9e, 0x58, 0xe1, 0x03, 0x01, 0x61, 0x19, 0x48, 0x01, 0x8a, 0x8c, 0x9e, 0x9e, 0x58, 0x95, 0x00, 0x9e, 0x5a, 0xc9, 0x00, 0x9e, 0x59, 0xa3, 0x00, 0x9e, 0x5b, 0xcd, 0x00, 0x01, 0x06, 0x60, 0x8a, 0x9e, 0x58, 0xbd, 0x00, 0x9e, 0x59, 0x4b, 0x04, 0x19, 0x48, 0x5a, 0x80, 0x95, 0x64, 0x85, 0x58, 0xbe, 0x58, 0xdb, 0x03, 0x85, 0x58, 0xbe, 0x58, 0xdd, 0x03, 0x83, 0x58, 0xbe, 0x58, 0xdf, 0x03, 0xa3, 0x64, 0x85, 0x58, 0xbe, 0x58, 0xdc, 0x03, 0x85, 0x58, 0xbe, 0x58, 0xde, 0x03, 0x83, 0x58, 0xbe, 0x58, 0xe0, 0x03, 0x9e, 0x58, 0x7b, 0x04, 0xbe, 0x58, 0xe2, 0x03, 0x9e, 0x58, 0x2d, 0x05, 0xbe, 0x58, 0xe3, 0x03, 0xf5, 0xd4, 0xae, 0x10, 
+0x40, 0x14, 0x9e, 0x58, 0xe1, 0x03, 0x01, 0x61, 0x19, 0x48, 0x01, 0x8a, 0x37, 0x9e, 0xf7, 0xcf, 0xf4, 0x60, 0x01, 0x68, 0x9e, 0x59, 0x32, 0x05, 0x5e, 0xd5, 0x9e, 0x58, 0x79, 0x00, 0x9e, 0x59, 0x87, 0x00, 0xbe, 0x58, 0x7e, 0x00, 0xbe, 0x58, 0x7f, 0x00, 0xbe, 0x58, 0x80, 0x00, 0xbe, 0x58, 0xc3, 0x00, 0x7a, 0x62, 0x1b, 0x5a, 0xbe, 0x59, 0x8c, 0x00, 0xbe, 0x59, 0x8d, 0x00, 0xbe, 0x59, 0x8e, 0x00, 0xbe, 0x59, 0xc4, 0x00, 0x88, 0x62, 0x3b, 0x5a, 0x9e, 0x58, 0x95, 0x00, 0x9e, 0x59, 0xa3, 0x00, 0xbe, 0x58, 0x9a, 0x00, 0xbe, 0x58, 0x9b, 0x00, 0xbe, 0x58, 0x9c, 0x00, 0xbe, 0x58, 0xc5, 0x00, 0x96, 0x62, 0x1b, 0x5a, 0xbe, 0x59, 0xa8, 0x00, 0xbe, 0x59, 0xa9, 0x00, 0xbe, 0x59, 0xaa, 0x00, 0xbe, 0x59, 0xc6, 0x00, 0xa4, 0x62, 0x3b, 0x5a, 0x76, 0x9e, 0xa3, 0xcf, 0xf4, 0x60, 0x01, 0x68, 0xb3, 0x3d, 
+0x80, 0x14, 0x9e, 0x59, 0x32, 0x05, 0x5e, 0xd5, 0x00, 0x62, 0xbe, 0x5a, 0xcf, 0x00, 0x9e, 0x58, 0x79, 0x00, 0x9e, 0x59, 0x87, 0x00, 0xbe, 0x58, 0x7e, 0x00, 0xbe, 0x58, 0x7f, 0x00, 0xbe, 0x58, 0x80, 0x00, 0xbe, 0x58, 0xc3, 0x00, 0x7a, 0x62, 0x1b, 0x5a, 0xbe, 0x59, 0x8c, 0x00, 0xbe, 0x59, 0x8d, 0x00, 0xbe, 0x59, 0x8e, 0x00, 0xbe, 0x59, 0xc4, 0x00, 0x88, 0x62, 0x3b, 0x5a, 0x54, 0x9e, 0x9e, 0x58, 0x95, 0x00, 0x9e, 0x5a, 0xc9, 0x00, 0x9e, 0x59, 0xa3, 0x00, 0x9e, 0x5b, 0xcd, 0x00, 0x01, 0x06, 0x4a, 0x8a, 0x9e, 0x58, 0xbd, 0x00, 0x9e, 0x59, 0x4b, 0x04, 0x19, 0x48, 0x44, 0x80, 0x95, 0x64, 0x85, 0x58, 0xbe, 0x58, 0xdb, 0x03, 0x85, 0x58, 0xbe, 0x58, 0xdd, 0x03, 0x83, 0x58, 0xbe, 0x58, 0xdf, 0x03, 0xa3, 0x64, 0x85, 0x58, 0xbe, 0x58, 0xdc, 0x03, 0x85, 0x58, 0xbe, 0x58, 0xde, 0x03, 0xc6, 0x6d, 
+0xc0, 0x14, 0x83, 0x58, 0xbe, 0x58, 0xe0, 0x03, 0x9e, 0x58, 0x7b, 0x04, 0xbe, 0x58, 0xe2, 0x03, 0x9e, 0x58, 0x2d, 0x05, 0xbe, 0x58, 0xe3, 0x03, 0xf5, 0xd4, 0x9e, 0x58, 0xe1, 0x03, 0x01, 0x61, 0x19, 0x48, 0x01, 0x8a, 0x21, 0x9e, 0xcd, 0xcf, 0xf4, 0x60, 0x01, 0x68, 0x9e, 0x59, 0x32, 0x05, 0x5e, 0xd5, 0x00, 0x62, 0xbe, 0x5a, 0xd0, 0x00, 0x9e, 0x58, 0x95, 0x00, 0x9e, 0x59, 0xa3, 0x00, 0xbe, 0x58, 0x9a, 0x00, 0xbe, 0x58, 0x9b, 0x00, 0xbe, 0x58, 0x9c, 0x00, 0xbe, 0x58, 0xc5, 0x00, 0x96, 0x62, 0x1b, 0x5a, 0xbe, 0x59, 0xa8, 0x00, 0xbe, 0x59, 0xa9, 0x00, 0xbe, 0x59, 0xaa, 0x00, 0xbe, 0x59, 0xc6, 0x00, 0xa4, 0x62, 0x3b, 0x5a, 0x1a, 0x38, 0x3a, 0x38, 0x00, 0x60, 0xbe, 0x58, 0xe1, 0x03, 0x9e, 0x58, 0xdb, 0x03, 0x9e, 0x5a, 0xdd, 0x03, 0x9e, 0x59, 0xdc, 0x03, 0x9e, 0x5b, 0xde, 0x03, 0x5c, 0x6c, 
+0x00, 0x15, 0xb3, 0xd6, 0x81, 0x5f, 0xbe, 0x5c, 0x3c, 0x01, 0x9e, 0x59, 0xe2, 0x03, 0xf9, 0x48, 0x55, 0x80, 0x9e, 0x58, 0xdd, 0x03, 0x9e, 0x5a, 0xdf, 0x03, 0x9e, 0x59, 0xde, 0x03, 0x9e, 0x5b, 0xe0, 0x03, 0xb3, 0xd6, 0x81, 0x5e, 0xbe, 0x5c, 0x3d, 0x01, 0x18, 0x16, 0x01, 0x88, 0x01, 0x66, 0x0a, 0x62, 0xfa, 0x40, 0x3c, 0x5e, 0x9e, 0x59, 0xe3, 0x03, 0x19, 0x48, 0x38, 0x82, 0x00, 0x63, 0x9e, 0x58, 0xdb, 0x03, 0x9e, 0x59, 0xdd, 0x03, 0x9e, 0x5a, 0xdf, 0x03, 0x01, 0x16, 0x22, 0x17, 0xdf, 0x40, 0x79, 0xac, 0x01, 0x90, 0x03, 0xa8, 0x9e, 0x58, 0xdc, 0x03, 0x9e, 0x59, 0xde, 0x03, 0x9e, 0x5a, 0xe0, 0x03, 0x01, 0x16, 0x22, 0x17, 0xdf, 0x40, 0x79, 0xac, 0x01, 0x90, 0x0b, 0xa8, 0x62, 0x38, 0x03, 0x00, 0x1c, 0x8a, 0x62, 0x38, 0x00, 0x00, 0x1d, 0x8a, 0x9e, 0x5e, 0x3c, 0x01, 0x9e, 0x5f, 0xac, 0x85, 
+0x40, 0x15, 0x3d, 0x01, 0xdf, 0x48, 0x01, 0x80, 0xc1, 0x5f, 0x9e, 0x58, 0xdb, 0x03, 0x9e, 0x5a, 0xdf, 0x03, 0x9e, 0x59, 0xdc, 0x03, 0x9e, 0x5b, 0xe0, 0x03, 0xb3, 0xd6, 0x81, 0x58, 0x0a, 0x62, 0x1a, 0x40, 0x3c, 0x5f, 0x9e, 0x59, 0x30, 0x05, 0x19, 0x48, 0x01, 0x96, 0x04, 0x9e, 0x01, 0x60, 0xbe, 0x58, 0xe1, 0x03, 0x03, 0x9e, 0x02, 0x60, 0xbe, 0x58, 0xe1, 0x03, 0x3a, 0x38, 0x01, 0x5a, 0x41, 0x58, 0x19, 0x10, 0xfe, 0x89, 0x19, 0x11, 0xfb, 0x89, 0x3a, 0x38, 0xff, 0x60, 0x03, 0x61, 0x5e, 0xd5, 0x3a, 0x38, 0xff, 0x60, 0x03, 0x61, 0x5e, 0xd5, 0x3a, 0x38, 0x00, 0x61, 0xbe, 0x59, 0x7e, 0x00, 0xbe, 0x59, 0x8c, 0x00, 0xbe, 0x59, 0x9a, 0x00, 0xbe, 0x59, 0xa8, 0x00, 0xbe, 0x59, 0xc2, 0x00, 0x9e, 0x5e, 0x6e, 0x00, 0x9e, 0x5f, 0x72, 0x00, 0x80, 0x63, 0x00, 0x64, 0x41, 0xda, 0x01, 0x5d, 0x87, 0xb3, 
+0x80, 0x15, 0x38, 0x67, 0x03, 0x6f, 0xc7, 0x16, 0xc3, 0x40, 0x05, 0x05, 0x18, 0x15, 0x01, 0x98, 0x01, 0x65, 0xbe, 0x5d, 0x8c, 0x00, 0x75, 0x66, 0x76, 0x67, 0x9e, 0x5b, 0x05, 0x04, 0x00, 0x64, 0x41, 0xda, 0x01, 0x5d, 0x9e, 0x5e, 0x8c, 0x00, 0x1d, 0xd7, 0xbe, 0x5d, 0x7e, 0x00, 0x7e, 0x60, 0xbe, 0x58, 0xc0, 0x03, 0x8c, 0x60, 0xbe, 0x58, 0xc1, 0x03, 0x75, 0x60, 0xbe, 0x58, 0xc2, 0x03, 0x76, 0x60, 0xbe, 0x58, 0xc3, 0x03, 0xc8, 0xde, 0x9e, 0x58, 0x7e, 0x00, 0x9e, 0x59, 0x8c, 0x00, 0x9e, 0x5a, 0xc3, 0x00, 0x9e, 0x5b, 0xc4, 0x00, 0xb3, 0xd6, 0xbe, 0x5c, 0xc0, 0x03, 0x9e, 0x58, 0x7e, 0x00, 0x9e, 0x59, 0x8c, 0x00, 0x9e, 0x5a, 0xc5, 0x00, 0x9e, 0x5b, 0xc6, 0x00, 0x43, 0x05, 0x18, 0x35, 0x0b, 0x8a, 0xb3, 0xd6, 0xbe, 0x5c, 0xc1, 0x03, 0x9e, 0x58, 0xc0, 0x03, 0x1c, 0x48, 0x04, 0x9c, 0x19, 0x32, 
+0xc0, 0x15, 0x02, 0x60, 0xbe, 0x58, 0xc2, 0x00, 0x03, 0x9e, 0x01, 0x60, 0xbe, 0x58, 0xc2, 0x00, 0x9e, 0x58, 0xb1, 0x00, 0x02, 0x61, 0x19, 0x48, 0x01, 0x82, 0x53, 0x9e, 0x9e, 0x5e, 0x6f, 0x00, 0x9e, 0x5f, 0x73, 0x00, 0x80, 0x63, 0x00, 0x64, 0x41, 0xda, 0x01, 0x5d, 0x38, 0x67, 0x03, 0x6f, 0xc7, 0x16, 0xc3, 0x40, 0x05, 0x05, 0x18, 0x15, 0x01, 0x98, 0x01, 0x65, 0xbe, 0x5d, 0xa8, 0x00, 0x77, 0x66, 0x78, 0x67, 0x9e, 0x5b, 0x05, 0x04, 0x00, 0x64, 0x41, 0xda, 0x01, 0x5d, 0x9e, 0x5e, 0xa8, 0x00, 0x1d, 0xd7, 0xbe, 0x5d, 0x9a, 0x00, 0x9a, 0x60, 0xbe, 0x58, 0xc0, 0x03, 0xa8, 0x60, 0xbe, 0x58, 0xc1, 0x03, 0x77, 0x60, 0xbe, 0x58, 0xc2, 0x03, 0x78, 0x60, 0xbe, 0x58, 0xc3, 0x03, 0xc8, 0xde, 0x9e, 0x58, 0x9a, 0x00, 0x9e, 0x59, 0xa8, 0x00, 0x9e, 0x5a, 0xc3, 0x00, 0x9e, 0x5b, 0xc4, 0x00, 0x75, 0x46, 
+0x00, 0x16, 0xb3, 0xd6, 0xbe, 0x5c, 0xc2, 0x03, 0x9e, 0x58, 0x9a, 0x00, 0x9e, 0x59, 0xa8, 0x00, 0x9e, 0x5a, 0xc5, 0x00, 0x9e, 0x5b, 0xc6, 0x00, 0xb3, 0xd6, 0xbe, 0x5c, 0xc3, 0x03, 0x9e, 0x58, 0xc2, 0x03, 0x98, 0x48, 0x07, 0x9c, 0x20, 0x60, 0x9e, 0x59, 0xc2, 0x00, 0x01, 0x00, 0xbe, 0x58, 0xc2, 0x00, 0x07, 0x9e, 0x10, 0x60, 0x9e, 0x59, 0xc2, 0x00, 0x01, 0x00, 0xbe, 0x58, 0xc2, 0x00, 0x1a, 0x38, 0x9e, 0x58, 0xc2, 0x00, 0x02, 0x61, 0x19, 0x48, 0x02, 0x88, 0xa2, 0xd6, 0x1a, 0x9e, 0x12, 0x61, 0x19, 0x48, 0x08, 0x88, 0x9e, 0x58, 0xc1, 0x03, 0x9e, 0x59, 0xc3, 0x03, 0x38, 0x48, 0x11, 0x9c, 0xa2, 0xd6, 0x0f, 0x9e, 0x21, 0x61, 0x19, 0x48, 0x08, 0x88, 0x9e, 0x58, 0xc0, 0x03, 0x9e, 0x59, 0xc2, 0x03, 0x19, 0x48, 0x06, 0x9c, 0xa2, 0xd6, 0x04, 0x9e, 0x22, 0x61, 0x19, 0x48, 0x01, 0x88, 0xe5, 0xe6, 
+0x40, 0x16, 0xa2, 0xd6, 0x9e, 0x58, 0xe1, 0x04, 0x18, 0x00, 0x12, 0x8a, 0x9e, 0x5e, 0x7e, 0x00, 0x9e, 0x5f, 0x8c, 0x00, 0xc7, 0x00, 0x03, 0x8a, 0xc5, 0xdc, 0xbe, 0x5e, 0x7e, 0x00, 0x9e, 0x5e, 0x9a, 0x00, 0x9e, 0x5f, 0xa8, 0x00, 0xc7, 0x00, 0x03, 0x8a, 0xc5, 0xdc, 0xbe, 0x5e, 0x9a, 0x00, 0x9e, 0x5c, 0x7e, 0x00, 0x9e, 0x5d, 0x8c, 0x00, 0x85, 0x00, 0x07, 0x8a, 0x38, 0x61, 0x01, 0x69, 0x92, 0xd7, 0xbe, 0x5c, 0x7e, 0x00, 0xbe, 0x5d, 0x8c, 0x00, 0x9e, 0x5c, 0x9a, 0x00, 0x9e, 0x5d, 0xa8, 0x00, 0x85, 0x00, 0x07, 0x8a, 0x39, 0x61, 0x01, 0x69, 0x92, 0xd7, 0xbe, 0x5c, 0x9a, 0x00, 0xbe, 0x5d, 0xa8, 0x00, 0x9e, 0x58, 0x7e, 0x00, 0x9e, 0x59, 0x8c, 0x00, 0x9e, 0x5a, 0x9a, 0x00, 0x9e, 0x5b, 0xa8, 0x00, 0xbe, 0x58, 0xc3, 0x00, 0xbe, 0x59, 0xc4, 0x00, 0xbe, 0x5a, 0xc5, 0x00, 0xbe, 0x5b, 0xc0, 0xfd, 
+0x80, 0x16, 0xc6, 0x00, 0xbe, 0x58, 0x79, 0x00, 0xbe, 0x59, 0x87, 0x00, 0xbe, 0x5a, 0x95, 0x00, 0xbe, 0x5b, 0xa3, 0x00, 0x9e, 0x5c, 0xb1, 0x00, 0x18, 0x34, 0x14, 0x8a, 0x01, 0x00, 0x04, 0x88, 0x00, 0x60, 0xbe, 0x58, 0xbc, 0x00, 0x02, 0x9e, 0xbf, 0xd6, 0x03, 0xd8, 0x9e, 0x5a, 0x9a, 0x00, 0x9e, 0x5b, 0xa8, 0x00, 0x43, 0x02, 0x04, 0x88, 0x00, 0x60, 0xbe, 0x58, 0xbd, 0x00, 0x02, 0x9e, 0xee, 0xd6, 0x03, 0xd8, 0x3a, 0x38, 0x9e, 0x58, 0x7e, 0x00, 0x9e, 0x59, 0x8c, 0x00, 0x9e, 0x5a, 0x9a, 0x00, 0x9e, 0x5b, 0xa8, 0x00, 0xbe, 0x58, 0x9a, 0x00, 0xbe, 0x59, 0xa8, 0x00, 0xbe, 0x5a, 0x7e, 0x00, 0xbe, 0x5b, 0x8c, 0x00, 0x3a, 0x38, 0x1a, 0x48, 0x02, 0x82, 0x40, 0x12, 0x01, 0x9e, 0x02, 0x12, 0x3b, 0x48, 0x02, 0x82, 0x61, 0x13, 0x01, 0x9e, 0x23, 0x13, 0x43, 0x04, 0x3a, 0x38, 0x9e, 0x58, 0x1f, 0x6b, 
+0xc0, 0x16, 0xbc, 0x00, 0xbe, 0x58, 0xc0, 0x03, 0x7e, 0x60, 0xbe, 0x58, 0xc1, 0x03, 0x8c, 0x60, 0xbe, 0x58, 0xc2, 0x03, 0x79, 0x60, 0xbe, 0x58, 0xc3, 0x03, 0x87, 0x60, 0xbe, 0x58, 0xc4, 0x03, 0x83, 0x60, 0xbe, 0x58, 0xc5, 0x03, 0x91, 0x60, 0xbe, 0x58, 0xc6, 0x03, 0x84, 0x60, 0xbe, 0x58, 0xc7, 0x03, 0x92, 0x60, 0xbe, 0x58, 0xc8, 0x03, 0x85, 0x60, 0xbe, 0x58, 0xc9, 0x03, 0x93, 0x60, 0xbe, 0x58, 0xca, 0x03, 0xbc, 0x60, 0xbe, 0x58, 0xcb, 0x03, 0xbe, 0x60, 0xbe, 0x58, 0xcc, 0x03, 0x86, 0x60, 0xbe, 0x58, 0xcd, 0x03, 0x94, 0x60, 0xbe, 0x58, 0xce, 0x03, 0x3a, 0x38, 0x9e, 0x58, 0xbd, 0x00, 0xbe, 0x58, 0xc0, 0x03, 0x9a, 0x60, 0xbe, 0x58, 0xc1, 0x03, 0xa8, 0x60, 0xbe, 0x58, 0xc2, 0x03, 0x95, 0x60, 0xbe, 0x58, 0xc3, 0x03, 0xa3, 0x60, 0xbe, 0x58, 0xc4, 0x03, 0x9f, 0x60, 0xbe, 0x58, 0x13, 0x67, 
+0x00, 0x17, 0xc5, 0x03, 0xad, 0x60, 0xbe, 0x58, 0xc6, 0x03, 0xa0, 0x60, 0xbe, 0x58, 0xc7, 0x03, 0xae, 0x60, 0xbe, 0x58, 0xc8, 0x03, 0xa1, 0x60, 0xbe, 0x58, 0xc9, 0x03, 0xaf, 0x60, 0xbe, 0x58, 0xca, 0x03, 0xbd, 0x60, 0xbe, 0x58, 0xcb, 0x03, 0xbf, 0x60, 0xbe, 0x58, 0xcc, 0x03, 0xa2, 0x60, 0xbe, 0x58, 0xcd, 0x03, 0xb0, 0x60, 0xbe, 0x58, 0xce, 0x03, 0x3a, 0x38, 0xd2, 0x3e, 0x3c, 0x04, 0x12, 0x3d, 0x40, 0x04, 0x3c, 0x80, 0x9e, 0x59, 0x44, 0x04, 0x32, 0x39, 0x43, 0x04, 0x00, 0x60, 0x9e, 0x5a, 0x3d, 0x04, 0x52, 0x3a, 0x3c, 0x04, 0x3c, 0x5a, 0x1e, 0x40, 0x9e, 0x5a, 0x43, 0x04, 0x52, 0x3a, 0x40, 0x04, 0x22, 0x04, 0x9e, 0x5a, 0x3f, 0x04, 0x52, 0x3a, 0x10, 0x04, 0xba, 0x40, 0x3c, 0x5c, 0x10, 0x3d, 0x10, 0x04, 0x9e, 0x59, 0x05, 0x04, 0x19, 0x11, 0x3d, 0x48, 0x02, 0x82, 0x21, 0x5d, 0x9c, 0xe4, 
+0x40, 0x17, 0x50, 0x9e, 0x9e, 0x5a, 0x05, 0x04, 0x9e, 0x59, 0xb4, 0x04, 0x41, 0x12, 0xba, 0x48, 0x49, 0x9a, 0xb2, 0x3d, 0x10, 0x04, 0x32, 0x3e, 0x10, 0x04, 0xa6, 0x05, 0x9e, 0x5a, 0xb5, 0x04, 0x40, 0x3a, 0x64, 0x00, 0xba, 0x40, 0x64, 0x63, 0x3c, 0x5b, 0x10, 0x3d, 0x10, 0x04, 0xa6, 0x15, 0x9e, 0x5a, 0x05, 0x04, 0x19, 0x12, 0xba, 0x48, 0x35, 0x9a, 0x41, 0x5d, 0x33, 0x9e, 0x9e, 0x59, 0x41, 0x04, 0x32, 0x39, 0x42, 0x04, 0x00, 0x60, 0x9e, 0x5a, 0x3d, 0x04, 0x52, 0x3a, 0x3c, 0x04, 0x3c, 0x5a, 0x1e, 0x40, 0x9e, 0x5a, 0x40, 0x04, 0x52, 0x3a, 0x41, 0x04, 0x22, 0x04, 0x9e, 0x5a, 0x10, 0x04, 0x52, 0x3a, 0x3e, 0x04, 0xba, 0x40, 0x3c, 0x5c, 0x10, 0x3d, 0x10, 0x04, 0x02, 0x82, 0x00, 0x65, 0x18, 0x9e, 0x9e, 0x59, 0xb2, 0x04, 0xb9, 0x48, 0x14, 0x98, 0x9e, 0x5a, 0xb3, 0x04, 0xb2, 0x3d, 0xe0, 0xe1, 
+0x80, 0x17, 0x10, 0x04, 0x32, 0x3e, 0x10, 0x04, 0xa6, 0x15, 0x40, 0x3a, 0x64, 0x00, 0xba, 0x40, 0x64, 0x63, 0x3c, 0x5b, 0x10, 0x3d, 0x10, 0x04, 0xa6, 0x05, 0x00, 0x61, 0xb9, 0x48, 0x02, 0x98, 0x21, 0x5d, 0x00, 0x9e, 0x3a, 0x38, 0x9e, 0x5e, 0x45, 0x04, 0xdd, 0x48, 0x2a, 0x98, 0x9e, 0x5e, 0x04, 0x04, 0xd2, 0x3e, 0x46, 0x04, 0xdd, 0x48, 0x24, 0x96, 0x9e, 0x58, 0x27, 0x01, 0x00, 0xac, 0x20, 0x92, 0xb2, 0x3d, 0x49, 0x04, 0x9e, 0x5e, 0x11, 0x04, 0xbe, 0x48, 0x03, 0x94, 0x9e, 0x5f, 0x47, 0x04, 0x02, 0x9e, 0x9e, 0x5f, 0x48, 0x04, 0xc1, 0x5b, 0xda, 0xd7, 0x9e, 0x5b, 0x04, 0x04, 0x72, 0x3b, 0xa1, 0x04, 0xbb, 0x48, 0x08, 0x98, 0x9e, 0x5b, 0x9f, 0x04, 0xbb, 0x48, 0x01, 0x96, 0x17, 0x9e, 0x9e, 0x5f, 0xa0, 0x04, 0x02, 0x9e, 0x9e, 0x5f, 0xa2, 0x04, 0x64, 0x66, 0xda, 0xd7, 0x0f, 0x9e, 0x04, 0x85, 
+0xc0, 0x17, 0x23, 0x5a, 0xff, 0x64, 0x7f, 0x6c, 0x44, 0x12, 0x01, 0x88, 0xbb, 0x59, 0x9e, 0x5a, 0xb1, 0x00, 0x19, 0x12, 0xbe, 0x5a, 0xb1, 0x00, 0xf8, 0xce, 0x00, 0x64, 0x00, 0x65, 0x0a, 0x9e, 0x01, 0x60, 0xb8, 0x48, 0x01, 0x94, 0x01, 0x5d, 0x9e, 0x58, 0x04, 0x04, 0x19, 0x10, 0xb8, 0x48, 0x01, 0x9a, 0x01, 0x5d, 0x3a, 0x38, 0xa3, 0x13, 0x7f, 0x40, 0x3c, 0x5e, 0x05, 0x05, 0x3a, 0x38, 0x9e, 0x59, 0xcb, 0x03, 0xde, 0x59, 0x00, 0x00, 0x9e, 0x59, 0xcc, 0x03, 0xde, 0x59, 0x00, 0x00, 0x9e, 0x58, 0xc1, 0x03, 0x00, 0x39, 0x01, 0x00, 0x03, 0x5a, 0x7f, 0x38, 0x5d, 0x59, 0x9e, 0x58, 0xc9, 0x03, 0x5b, 0x58, 0x9e, 0x58, 0xc2, 0x03, 0x00, 0x39, 0x01, 0x00, 0x03, 0x5a, 0x7f, 0x38, 0x5d, 0x59, 0x9e, 0x58, 0xca, 0x03, 0x5b, 0x58, 0x00, 0x61, 0x9e, 0x58, 0xcd, 0x03, 0x3b, 0x58, 0x9e, 0x58, 0x18, 0xed, 
+0x00, 0x18, 0xce, 0x03, 0x3b, 0x58, 0x3a, 0x38, 0x00, 0x60, 0x9e, 0x59, 0xc0, 0x03, 0x19, 0x48, 0x01, 0x8a, 0x01, 0x9e, 0xdf, 0xd7, 0x9e, 0x58, 0xc1, 0x03, 0x03, 0x58, 0x9e, 0x59, 0xc3, 0x03, 0x1b, 0x59, 0x9e, 0x58, 0xc2, 0x03, 0x03, 0x58, 0x9e, 0x59, 0xc4, 0x03, 0x1b, 0x59, 0x9e, 0x58, 0xcb, 0x03, 0x03, 0x58, 0x9e, 0x59, 0x4b, 0x04, 0x1b, 0x11, 0x19, 0x48, 0x0c, 0x9c, 0x9e, 0x59, 0x4b, 0x04, 0x1a, 0x11, 0x19, 0x48, 0x98, 0x3a, 0x34, 0x19, 0x9e, 0x59, 0x4b, 0x04, 0x19, 0x11, 0x19, 0x48, 0x04, 0x8a, 0x80, 0x9e, 0x21, 0xda, 0x98, 0x3f, 0x45, 0x19, 0x9e, 0x58, 0xc1, 0x03, 0x03, 0x58, 0x9e, 0x59, 0xc9, 0x03, 0x1b, 0x59, 0x9e, 0x58, 0xc2, 0x03, 0x03, 0x58, 0x9e, 0x59, 0xca, 0x03, 0x1b, 0x59, 0x72, 0xd9, 0x9e, 0x58, 0xc1, 0x03, 0x9e, 0x59, 0xc2, 0x03, 0x7b, 0x58, 0x9b, 0x59, 0x84, 0xc7, 
+0x40, 0x18, 0x9e, 0x5c, 0xc1, 0x03, 0x9e, 0x5d, 0xc2, 0x03, 0x19, 0x04, 0x19, 0x05, 0x85, 0x58, 0x83, 0x5a, 0xa5, 0x59, 0xa3, 0x5b, 0xb3, 0xd6, 0x81, 0x5f, 0xbe, 0x5c, 0x3c, 0x01, 0x9e, 0x59, 0xa3, 0x04, 0xf9, 0x48, 0x04, 0x82, 0x9e, 0x59, 0xa4, 0x04, 0xf9, 0x48, 0x2b, 0x80, 0x9e, 0x5c, 0xc1, 0x03, 0x1b, 0x14, 0x87, 0x58, 0xbe, 0x58, 0xdb, 0x03, 0x87, 0x58, 0xbe, 0x58, 0xdd, 0x03, 0x83, 0x58, 0xbe, 0x58, 0xdf, 0x03, 0x9e, 0x5c, 0xc2, 0x03, 0x1b, 0x14, 0x87, 0x58, 0xbe, 0x58, 0xdc, 0x03, 0x87, 0x58, 0xbe, 0x58, 0xde, 0x03, 0x83, 0x58, 0xbe, 0x58, 0xe0, 0x03, 0x9e, 0x58, 0xa3, 0x04, 0x9e, 0x59, 0xa4, 0x04, 0x01, 0x00, 0x08, 0x58, 0xbe, 0x58, 0xe2, 0x03, 0x9e, 0x58, 0x34, 0x05, 0xbe, 0x58, 0xe3, 0x03, 0xf5, 0xd4, 0x9e, 0x58, 0xe1, 0x03, 0x01, 0x61, 0x19, 0x48, 0x01, 0x8a, 0x3d, 0xe7, 
+0x80, 0x18, 0x02, 0x9e, 0x21, 0xda, 0xc2, 0x9e, 0x9e, 0x5e, 0xc1, 0x03, 0x9e, 0x5f, 0xc2, 0x03, 0xc5, 0x5a, 0xe5, 0x5b, 0xc5, 0x5c, 0xe5, 0x5d, 0xc3, 0x58, 0xe3, 0x59, 0x56, 0xd9, 0x01, 0x5f, 0x9e, 0x59, 0xc2, 0x03, 0x1a, 0x01, 0x23, 0x5e, 0x21, 0xda, 0x8c, 0x60, 0x9e, 0x59, 0xc2, 0x03, 0x19, 0x48, 0x03, 0x8a, 0x9e, 0x58, 0x39, 0x01, 0x02, 0x9e, 0x9e, 0x58, 0x38, 0x01, 0xff, 0x61, 0x7f, 0x69, 0x19, 0x48, 0x01, 0x8a, 0x01, 0x5e, 0x9e, 0x5d, 0xc2, 0x03, 0xdb, 0x5d, 0x9e, 0x5e, 0xc1, 0x03, 0xfb, 0x5e, 0x9b, 0x9e, 0x72, 0xd9, 0x9e, 0x58, 0xc1, 0x03, 0x9e, 0x59, 0xc2, 0x03, 0x7b, 0x58, 0x9b, 0x59, 0x9e, 0x5a, 0xc3, 0x03, 0x9e, 0x5b, 0xc1, 0x03, 0x43, 0x58, 0x63, 0x59, 0x53, 0xdc, 0x9e, 0x59, 0x4e, 0x04, 0x19, 0x48, 0x18, 0x82, 0x9e, 0x5a, 0xc4, 0x03, 0x9e, 0x5b, 0xc2, 0x03, 0x92, 0x5b, 
+0xc0, 0x18, 0x43, 0x58, 0x63, 0x59, 0x53, 0xdc, 0x9e, 0x59, 0x4f, 0x04, 0x19, 0x48, 0x0d, 0x82, 0x9e, 0x58, 0xc1, 0x03, 0x03, 0x58, 0x9e, 0x59, 0xc9, 0x03, 0x1b, 0x59, 0x9e, 0x58, 0xc2, 0x03, 0x03, 0x58, 0x9e, 0x59, 0xca, 0x03, 0x1b, 0x59, 0x19, 0x9e, 0x9e, 0x5e, 0xc1, 0x03, 0x9e, 0x5f, 0xc2, 0x03, 0xc5, 0x5a, 0xe5, 0x5b, 0xc5, 0x5c, 0xe5, 0x5d, 0x9e, 0x5e, 0xc3, 0x03, 0x9e, 0x5f, 0xc4, 0x03, 0xc3, 0x58, 0xe3, 0x59, 0x56, 0xd9, 0x9e, 0x5e, 0xc9, 0x03, 0x1b, 0x5e, 0x9e, 0x58, 0xc4, 0x03, 0x03, 0x58, 0x9e, 0x59, 0xca, 0x03, 0x1b, 0x59, 0x00, 0x9e, 0x9e, 0x5a, 0xc3, 0x03, 0x45, 0x58, 0x43, 0x59, 0x53, 0xdc, 0x00, 0x61, 0x19, 0x48, 0x17, 0x82, 0x9e, 0x5a, 0xc4, 0x03, 0x45, 0x58, 0x43, 0x59, 0x53, 0xdc, 0x00, 0x61, 0x19, 0x48, 0x0f, 0x82, 0x9e, 0x59, 0xcc, 0x03, 0x23, 0x58, 0x49, 0x79, 
+0x00, 0x19, 0x19, 0x00, 0x1b, 0x59, 0xfe, 0x61, 0xff, 0x69, 0x19, 0x48, 0x0b, 0x80, 0x9e, 0x59, 0xcc, 0x03, 0xfe, 0x60, 0xff, 0x68, 0x1b, 0x59, 0x05, 0x9e, 0x9e, 0x59, 0xcc, 0x03, 0x00, 0x60, 0x1b, 0x59, 0x00, 0x9e, 0x9e, 0x58, 0xcc, 0x03, 0x03, 0x58, 0xfe, 0x61, 0xff, 0x69, 0x19, 0x48, 0x01, 0x8a, 0x03, 0x9e, 0x03, 0x62, 0x03, 0x63, 0x05, 0x9e, 0x9e, 0x5a, 0x4c, 0x04, 0x9e, 0x5b, 0x4d, 0x04, 0x00, 0x9e, 0x9e, 0x5c, 0xc1, 0x03, 0x83, 0x58, 0x9e, 0x5c, 0xc3, 0x03, 0x83, 0x59, 0x53, 0xdc, 0x1a, 0x48, 0x0a, 0x82, 0x9e, 0x5c, 0xc2, 0x03, 0x83, 0x58, 0x9e, 0x5c, 0xc4, 0x03, 0x83, 0x59, 0x53, 0xdc, 0x1b, 0x48, 0x01, 0x82, 0x02, 0x9e, 0x21, 0xda, 0x0f, 0x9e, 0x9e, 0x59, 0xc1, 0x03, 0x19, 0x01, 0x23, 0x58, 0x9e, 0x59, 0xc1, 0x03, 0x1b, 0x59, 0x9e, 0x59, 0xc2, 0x03, 0x19, 0x01, 0xfc, 0x9d, 
+0x40, 0x19, 0x23, 0x58, 0x9e, 0x59, 0xc2, 0x03, 0x1b, 0x59, 0x00, 0x9e, 0x9e, 0x5a, 0xcb, 0x03, 0x43, 0x58, 0x19, 0x00, 0x1b, 0x5a, 0x9e, 0x59, 0x4b, 0x04, 0x19, 0x48, 0x07, 0x80, 0x3b, 0x5a, 0xff, 0x60, 0x7f, 0x68, 0xbe, 0x58, 0x38, 0x01, 0xbe, 0x58, 0x39, 0x01, 0x3a, 0x38, 0x01, 0x5e, 0x21, 0x5f, 0x61, 0x58, 0xa1, 0x59, 0x53, 0xdc, 0x03, 0x61, 0x19, 0x48, 0x11, 0x9a, 0xc1, 0x58, 0xe1, 0x59, 0x23, 0x10, 0x82, 0x11, 0xa3, 0x13, 0x19, 0x40, 0x3c, 0x5b, 0x02, 0x00, 0x01, 0x94, 0x00, 0x60, 0x9e, 0x59, 0x05, 0x04, 0x19, 0x11, 0x38, 0x48, 0x01, 0x94, 0x21, 0x58, 0x3a, 0x38, 0xc1, 0x58, 0xe1, 0x59, 0x3a, 0x38, 0x9e, 0x5a, 0xc1, 0x03, 0x45, 0x58, 0x43, 0x59, 0x53, 0xdc, 0x01, 0x5e, 0x9e, 0x5a, 0xc2, 0x03, 0x45, 0x58, 0x43, 0x59, 0x53, 0xdc, 0x01, 0x5f, 0xc7, 0x07, 0x9e, 0x58, 0x95, 0xce, 
+0x80, 0x19, 0x12, 0x05, 0x9e, 0x59, 0xc2, 0x03, 0x23, 0x59, 0x38, 0x48, 0x11, 0x96, 0x9e, 0x5b, 0x04, 0x04, 0x60, 0x10, 0x38, 0x48, 0x0c, 0x98, 0x9e, 0x58, 0x12, 0x05, 0x9e, 0x59, 0xc1, 0x03, 0x23, 0x59, 0x38, 0x48, 0x05, 0x96, 0x9e, 0x5b, 0x05, 0x04, 0x60, 0x10, 0x38, 0x48, 0x09, 0x9a, 0x9e, 0x5a, 0x13, 0x05, 0xbe, 0x5a, 0xd3, 0x03, 0x9e, 0x5a, 0x14, 0x05, 0xbe, 0x5a, 0xd4, 0x03, 0x08, 0x9e, 0x9e, 0x5a, 0x52, 0x04, 0xbe, 0x5a, 0xd3, 0x03, 0x9e, 0x5a, 0x53, 0x04, 0xbe, 0x5a, 0xd4, 0x03, 0x9e, 0x58, 0x50, 0x04, 0xf8, 0x48, 0x16, 0x82, 0x9e, 0x58, 0x51, 0x04, 0xf8, 0x48, 0x15, 0x9c, 0x9e, 0x5e, 0x51, 0x04, 0xe6, 0x17, 0x9e, 0x58, 0xd3, 0x03, 0x9e, 0x59, 0xd4, 0x03, 0x01, 0x10, 0xe0, 0x40, 0x9e, 0x5a, 0x50, 0x04, 0x52, 0x3a, 0x51, 0x04, 0x1c, 0x5a, 0x9e, 0x59, 0xd4, 0x03, 0x99, 0x22, 
+0xc0, 0x19, 0x01, 0x00, 0x06, 0x9e, 0x9e, 0x58, 0xd3, 0x03, 0x03, 0x9e, 0x9e, 0x58, 0xd4, 0x03, 0x00, 0x9e, 0xbe, 0x58, 0xcf, 0x03, 0x01, 0x62, 0x9e, 0x5b, 0x54, 0x04, 0x19, 0x13, 0x77, 0x38, 0x46, 0x5a, 0x40, 0x12, 0xbe, 0x5a, 0xd0, 0x03, 0x9e, 0x5f, 0xc1, 0x03, 0x9e, 0x5e, 0xcd, 0x03, 0xe0, 0xd9, 0x01, 0x5b, 0x9e, 0x5f, 0xc2, 0x03, 0x9e, 0x5e, 0xce, 0x03, 0xe0, 0xd9, 0x01, 0x5c, 0x3a, 0x38, 0x9e, 0x5a, 0xcf, 0x03, 0xe5, 0x5d, 0xa2, 0x40, 0xbe, 0x59, 0xd1, 0x03, 0xbe, 0x58, 0xd2, 0x03, 0x9e, 0x5a, 0xd0, 0x03, 0xe3, 0x5d, 0xa2, 0x40, 0x9e, 0x5a, 0xd2, 0x03, 0x40, 0x00, 0x01, 0x80, 0x19, 0x01, 0xc3, 0x5f, 0xe0, 0x00, 0x01, 0x80, 0x19, 0x01, 0x9e, 0x5a, 0xd1, 0x03, 0x41, 0x01, 0x00, 0x62, 0x9e, 0x5d, 0x54, 0x04, 0x19, 0x15, 0xa7, 0x38, 0x00, 0x1a, 0x28, 0x59, 0x0c, 0x58, 0x86, 0xc2, 
+0x00, 0x1a, 0x4c, 0x5a, 0x0f, 0x65, 0xb2, 0x3d, 0x54, 0x04, 0xb7, 0x38, 0x48, 0x5a, 0xe2, 0x07, 0x01, 0x62, 0x9e, 0x5d, 0x54, 0x04, 0x19, 0x15, 0xb7, 0x38, 0x46, 0x5a, 0xfa, 0x48, 0x01, 0x80, 0xe2, 0x17, 0xfb, 0x5e, 0x3a, 0x38, 0x9e, 0x5b, 0xc1, 0x03, 0x65, 0x5a, 0x65, 0x59, 0x63, 0x58, 0x28, 0xda, 0x01, 0x5b, 0x9e, 0x5c, 0xc2, 0x03, 0x85, 0x5a, 0x85, 0x59, 0x83, 0x58, 0x28, 0xda, 0x01, 0x5c, 0x3a, 0x38, 0x9e, 0x58, 0xc1, 0x03, 0xf0, 0xce, 0x9e, 0x58, 0xc2, 0x03, 0xf0, 0xce, 0x3a, 0x38, 0x01, 0x00, 0x06, 0x61, 0x01, 0x40, 0x3f, 0x38, 0x46, 0x5a, 0x02, 0x00, 0x01, 0x80, 0x19, 0x01, 0x6f, 0x38, 0x33, 0x1a, 0x28, 0x59, 0x0c, 0x58, 0x3a, 0x38, 0x00, 0x60, 0x00, 0x61, 0xc3, 0x5a, 0xe3, 0x58, 0x02, 0x10, 0x1b, 0x40, 0xc3, 0x5a, 0xf2, 0x02, 0x3c, 0x5a, 0x03, 0x00, 0x08, 0x58, 0xb3, 0x6a, 
+0x40, 0x1a, 0x3a, 0x38, 0x62, 0x38, 0x80, 0x00, 0x13, 0x88, 0x9e, 0x58, 0xf9, 0x00, 0x19, 0x30, 0x0f, 0x88, 0x9e, 0x5d, 0x72, 0x00, 0x9e, 0x59, 0x0b, 0x04, 0x20, 0x39, 0x38, 0x03, 0xb9, 0x48, 0x07, 0x88, 0xe8, 0x61, 0x03, 0x69, 0x2d, 0x41, 0x9e, 0x5a, 0xc3, 0x04, 0x1c, 0x5a, 0x1b, 0x5d, 0x00, 0x60, 0x00, 0x61, 0x00, 0x62, 0xe3, 0x5d, 0xa4, 0x15, 0x01, 0x82, 0x00, 0x65, 0x45, 0x02, 0x02, 0x00, 0x01, 0x80, 0x19, 0x01, 0x19, 0x17, 0xfe, 0x48, 0xf5, 0x83, 0x01, 0x5c, 0x23, 0x40, 0x01, 0x5f, 0x83, 0x40, 0xe1, 0x01, 0x62, 0x3f, 0x80, 0x00, 0x1d, 0x88, 0x9e, 0x5f, 0xf9, 0x00, 0x19, 0x37, 0x19, 0x88, 0x9e, 0x5f, 0x72, 0x00, 0x9e, 0x5d, 0x0b, 0x04, 0xa0, 0x3d, 0x38, 0x03, 0xfd, 0x48, 0x11, 0x96, 0x21, 0x5d, 0x01, 0x5c, 0xe8, 0x67, 0x03, 0x6f, 0x9e, 0x58, 0xc3, 0x04, 0xe0, 0x10, 0xe2, 0xfa, 
+0x80, 0x1a, 0x9e, 0x59, 0x72, 0x00, 0x09, 0x41, 0x1c, 0x5f, 0xa1, 0x59, 0x80, 0x65, 0xa8, 0x5d, 0x01, 0x5f, 0x81, 0x58, 0xaf, 0x48, 0x1c, 0x5a, 0x03, 0x10, 0x3a, 0x38, 0x38, 0x66, 0x03, 0x6e, 0x9e, 0x5f, 0x72, 0x00, 0x3f, 0xdc, 0xbe, 0x5b, 0xb6, 0x00, 0x9e, 0x5e, 0x72, 0x00, 0x9e, 0x5f, 0x73, 0x00, 0x3f, 0xdc, 0xbe, 0x5b, 0xb7, 0x00, 0x3a, 0x38, 0x9e, 0x5e, 0x6e, 0x00, 0x9e, 0x5f, 0x72, 0x00, 0xb5, 0xda, 0xbe, 0x59, 0x75, 0x00, 0xbe, 0x5a, 0x76, 0x00, 0x9e, 0x5e, 0xb1, 0x00, 0x01, 0x67, 0xdf, 0x48, 0x98, 0x3a, 0xdb, 0x1b, 0x9e, 0x5e, 0x6f, 0x00, 0x9e, 0x5f, 0x73, 0x00, 0xb5, 0xda, 0xbe, 0x59, 0x77, 0x00, 0xbe, 0x5a, 0x78, 0x00, 0x3a, 0x38, 0x00, 0x61, 0x00, 0x62, 0xc0, 0x3e, 0xed, 0xfe, 0xe0, 0x3f, 0xed, 0xfe, 0xc3, 0x58, 0x20, 0x01, 0x7b, 0x06, 0xc3, 0x58, 0x40, 0x02, 0x42, 0xa8, 
+0xc0, 0x1a, 0x7b, 0x16, 0x19, 0x06, 0xfe, 0x48, 0xf7, 0x83, 0x1e, 0x5b, 0x1e, 0x5c, 0x9e, 0x5b, 0x89, 0x04, 0x00, 0x64, 0x7c, 0x48, 0x2e, 0x8a, 0xc2, 0x3b, 0x26, 0x02, 0x9e, 0x5c, 0x0a, 0x04, 0x88, 0x5c, 0x7c, 0x48, 0x11, 0x98, 0xc3, 0x58, 0x1e, 0x59, 0x9e, 0x5c, 0x8a, 0x04, 0x03, 0x40, 0x1c, 0x5c, 0x3e, 0x59, 0x20, 0x11, 0xc0, 0x38, 0x1b, 0x00, 0x03, 0x58, 0x1e, 0x59, 0x03, 0x40, 0x1c, 0x5c, 0x3e, 0x59, 0x40, 0x12, 0x16, 0x9e, 0xc2, 0x38, 0x04, 0x00, 0x03, 0x58, 0x1e, 0x59, 0x9e, 0x5c, 0x0a, 0x04, 0x19, 0x04, 0x83, 0x13, 0x9e, 0x5c, 0x8a, 0x04, 0x03, 0x40, 0x1c, 0x5c, 0x3e, 0x59, 0x20, 0x11, 0xc0, 0x38, 0x17, 0x00, 0x03, 0x58, 0x1e, 0x59, 0x03, 0x40, 0x1c, 0x5c, 0x3e, 0x59, 0x40, 0x12, 0x3e, 0x5c, 0x3e, 0x5b, 0x3a, 0x38, 0x00, 0x60, 0xbe, 0x58, 0xb1, 0x00, 0x38, 0x66, 0xf2, 0xa1, 
+0x00, 0x1b, 0x03, 0x6e, 0x9e, 0x5f, 0x0b, 0x04, 0xe0, 0x3f, 0x38, 0x03, 0x6e, 0x63, 0xdd, 0x5b, 0xdd, 0x5b, 0x72, 0x64, 0xfd, 0x5c, 0xfd, 0x5c, 0xfb, 0x5c, 0x72, 0x64, 0xc3, 0x59, 0xc3, 0x5b, 0xc3, 0x58, 0x19, 0x06, 0xc3, 0x5a, 0x59, 0x48, 0x19, 0x80, 0x5c, 0x12, 0x21, 0x80, 0x59, 0x48, 0x1f, 0x80, 0x79, 0x48, 0x16, 0x8a, 0x10, 0x38, 0x26, 0x01, 0x78, 0x48, 0x03, 0x82, 0x12, 0x38, 0x26, 0x01, 0x0f, 0x9e, 0x74, 0x65, 0xbc, 0x48, 0x13, 0x80, 0x9e, 0x5d, 0xb1, 0x00, 0x19, 0x05, 0xbe, 0x5d, 0xb1, 0x00, 0xc3, 0x5b, 0x21, 0x58, 0x19, 0x04, 0x03, 0x9e, 0x5c, 0x02, 0x3a, 0x48, 0x07, 0x80, 0xc3, 0x59, 0x7e, 0x49, 0x01, 0x82, 0xc3, 0x5b, 0x1e, 0x49, 0x01, 0x80, 0xc3, 0x58, 0xdb, 0x5c, 0x19, 0x06, 0xfe, 0x48, 0xd6, 0x83, 0x10, 0x38, 0x26, 0x01, 0x78, 0x48, 0x54, 0x80, 0x9e, 0x5d, 0xde, 0xad, 
+0x40, 0x1b, 0xb1, 0x00, 0x19, 0x05, 0xbe, 0x5d, 0xb1, 0x00, 0x03, 0x60, 0x9e, 0x5d, 0xb1, 0x00, 0xb8, 0x48, 0x44, 0x96, 0x00, 0x60, 0x9e, 0x59, 0xb2, 0x00, 0x38, 0x48, 0x0f, 0x98, 0x38, 0x60, 0x03, 0x68, 0xbe, 0x58, 0x28, 0x01, 0x9e, 0x58, 0x72, 0x00, 0xbe, 0x58, 0x29, 0x01, 0xbe, 0x58, 0x2a, 0x01, 0x9e, 0x58, 0x73, 0x00, 0xbe, 0x58, 0x2b, 0x01, 0x2c, 0x9e, 0x01, 0x60, 0x38, 0x48, 0x1b, 0x98, 0x9e, 0x58, 0x70, 0x00, 0x9b, 0xdb, 0xbe, 0x5e, 0x28, 0x01, 0xbe, 0x5f, 0x29, 0x01, 0x38, 0x60, 0x03, 0x68, 0xd8, 0x48, 0x05, 0x8a, 0xbe, 0x58, 0x2a, 0x01, 0xbe, 0x5e, 0x2b, 0x01, 0x19, 0x9e, 0x9e, 0x58, 0x72, 0x00, 0xbe, 0x58, 0x2a, 0x01, 0x9e, 0x58, 0x0b, 0x04, 0x00, 0x38, 0x38, 0x03, 0xbe, 0x58, 0x2b, 0x01, 0x0e, 0x9e, 0x9e, 0x58, 0x70, 0x00, 0x9b, 0xdb, 0xbe, 0x5e, 0x28, 0x01, 0xaf, 0x37, 
+0x80, 0x1b, 0xbe, 0x5f, 0x29, 0x01, 0x9e, 0x58, 0x71, 0x00, 0x9b, 0xdb, 0xbe, 0x5e, 0x2a, 0x01, 0xbe, 0x5f, 0x2b, 0x01, 0x02, 0x60, 0xbe, 0x58, 0xb1, 0x00, 0x3a, 0x38, 0x72, 0x61, 0x6f, 0x62, 0x23, 0x58, 0x1b, 0x5a, 0xaf, 0xdb, 0x3a, 0x38, 0x72, 0x65, 0x9d, 0x48, 0x03, 0x8a, 0x19, 0x14, 0xfb, 0x5c, 0xab, 0x9f, 0xaf, 0xdb, 0x3a, 0x38, 0x72, 0x61, 0x25, 0x5b, 0x1b, 0x48, 0x04, 0x94, 0x38, 0x66, 0x03, 0x6e, 0x61, 0x5f, 0x0b, 0x9e, 0x23, 0x5b, 0x1b, 0x48, 0x03, 0x94, 0x27, 0x5f, 0x23, 0x5e, 0x05, 0x9e, 0x61, 0x5e, 0x9e, 0x5f, 0x0b, 0x04, 0xe0, 0x3f, 0x38, 0x03, 0x3a, 0x38, 0x38, 0x60, 0x03, 0x68, 0xbe, 0x58, 0x28, 0x01, 0x9e, 0x58, 0x72, 0x00, 0xbe, 0x58, 0x29, 0x01, 0xbe, 0x58, 0x2a, 0x01, 0x9e, 0x58, 0x0b, 0x04, 0x00, 0x38, 0x38, 0x03, 0xbe, 0x58, 0x2b, 0x01, 0x3a, 0x38, 0x9c, 0xdd, 
+0xc0, 0x1b, 0x9e, 0x58, 0x70, 0x00, 0x9e, 0x5e, 0x28, 0x01, 0x9e, 0x5f, 0x29, 0x01, 0xdc, 0xdb, 0xbe, 0x5e, 0x6e, 0x00, 0xbe, 0x5f, 0x72, 0x00, 0x9e, 0x5e, 0xb1, 0x00, 0x01, 0x67, 0xdf, 0x48, 0x0b, 0x8a, 0x9e, 0x58, 0x71, 0x00, 0x9e, 0x5e, 0x2a, 0x01, 0x9e, 0x5f, 0x2b, 0x01, 0xdc, 0xdb, 0xbe, 0x5e, 0x6f, 0x00, 0xbe, 0x5f, 0x73, 0x00, 0x3a, 0x38, 0x1e, 0x59, 0x1e, 0x5a, 0x1e, 0x5b, 0x9e, 0x59, 0x89, 0x04, 0x18, 0x31, 0x05, 0x8a, 0x02, 0x39, 0x01, 0x00, 0x00, 0x3a, 0x01, 0x00, 0x08, 0x9e, 0x9e, 0x5b, 0x43, 0x05, 0x66, 0x39, 0x00, 0x00, 0x01, 0x88, 0x02, 0x63, 0x03, 0x11, 0x03, 0x02, 0x3e, 0x48, 0x01, 0x80, 0x21, 0x5e, 0x41, 0x59, 0xf9, 0x48, 0x01, 0x80, 0x21, 0x5f, 0x3e, 0x5b, 0x3e, 0x5a, 0x3e, 0x59, 0x3a, 0x38, 0x25, 0x63, 0x02, 0x6b, 0x40, 0x64, 0x02, 0x6c, 0x38, 0x65, 0x2c, 0x1a, 
+0x00, 0x1c, 0x03, 0x6d, 0x9e, 0x5e, 0x26, 0x05, 0x18, 0x30, 0x01, 0x8a, 0x00, 0x66, 0x9e, 0x59, 0x0b, 0x04, 0x27, 0x38, 0x14, 0x1c, 0x00, 0x67, 0x63, 0x59, 0x3e, 0x48, 0x08, 0x80, 0x83, 0x5a, 0x5e, 0x48, 0x07, 0x80, 0x22, 0x00, 0x3d, 0x5b, 0x5d, 0x5c, 0x1d, 0x5d, 0x3a, 0x38, 0x19, 0x07, 0xf6, 0x9f, 0x19, 0x07, 0x02, 0x60, 0xf8, 0x48, 0x01, 0x8a, 0xf4, 0x9f, 0x00, 0x61, 0x00, 0x62, 0xf1, 0x9f, 0x04, 0x38, 0xff, 0x0f, 0x24, 0x39, 0xff, 0x0f, 0x04, 0x3a, 0x00, 0x0f, 0x7f, 0x38, 0x46, 0x5a, 0x41, 0x2a, 0xff, 0x38, 0x48, 0x5a, 0x04, 0x3b, 0xff, 0x00, 0x24, 0x3c, 0xff, 0x00, 0x3a, 0x38, 0x64, 0x3b, 0xff, 0x00, 0x84, 0x3c, 0xff, 0x00, 0x44, 0x38, 0xf0, 0x00, 0x7f, 0x38, 0x06, 0x58, 0x03, 0x28, 0x44, 0x39, 0x0f, 0x00, 0xff, 0x38, 0x26, 0x59, 0x24, 0x29, 0x3a, 0x38, 0xc3, 0x5b, 0x82, 0x6b, 
+0x40, 0x1c, 0xc3, 0x5a, 0x7a, 0x48, 0x01, 0x80, 0x41, 0x5b, 0x19, 0x06, 0xfe, 0x48, 0xf9, 0x83, 0x3a, 0x38, 0xc3, 0x5b, 0xc1, 0x58, 0xc3, 0x5a, 0x7a, 0x48, 0x02, 0x82, 0x41, 0x5b, 0xc1, 0x58, 0x19, 0x06, 0xfe, 0x48, 0xf8, 0x83, 0x3a, 0x38, 0x19, 0x48, 0x02, 0x82, 0x20, 0x10, 0x3a, 0x38, 0x01, 0x10, 0x3a, 0x38, 0x9e, 0x5e, 0x28, 0x01, 0x9e, 0x5f, 0x29, 0x01, 0x48, 0xdc, 0xbe, 0x58, 0x70, 0x00, 0x9e, 0x5e, 0x2a, 0x01, 0x9e, 0x5f, 0x2b, 0x01, 0x48, 0xdc, 0xbe, 0x58, 0x71, 0x00, 0x3a, 0x38, 0x00, 0x61, 0x9e, 0x58, 0x04, 0x04, 0x9e, 0x5d, 0x0a, 0x04, 0x3c, 0x5d, 0x01, 0x5d, 0xfd, 0x48, 0x07, 0x96, 0x9e, 0x58, 0x04, 0x04, 0x05, 0x10, 0xf8, 0x48, 0x15, 0x98, 0x98, 0x3f, 0x84, 0x1e, 0x9e, 0x58, 0x05, 0x04, 0x08, 0x58, 0x1e, 0x48, 0x07, 0x98, 0x1e, 0x5d, 0x9e, 0x5a, 0x3e, 0x04, 0x31, 0x73, 
+0x80, 0x1c, 0x01, 0x5b, 0x00, 0x64, 0xfa, 0x65, 0x1a, 0x9e, 0x1e, 0x5d, 0x01, 0x5a, 0x9e, 0x5b, 0x3f, 0x04, 0xfa, 0x64, 0x00, 0x65, 0x13, 0x9e, 0x9e, 0x58, 0x05, 0x04, 0x08, 0x58, 0x1e, 0x48, 0x07, 0x98, 0x1e, 0x5d, 0x9e, 0x5a, 0x3e, 0x04, 0x01, 0x5b, 0x00, 0x64, 0x00, 0x65, 0x12, 0x9e, 0x1e, 0x5d, 0x01, 0x5a, 0x9e, 0x5b, 0x3f, 0x04, 0x00, 0x64, 0x00, 0x65, 0x0b, 0x9e, 0x44, 0x12, 0x65, 0x13, 0x62, 0x13, 0xa4, 0x11, 0xc2, 0x10, 0x38, 0x40, 0x3c, 0x5b, 0x04, 0x00, 0x3e, 0x5d, 0xa7, 0x11, 0x0d, 0x9e, 0x44, 0x12, 0x65, 0x13, 0x62, 0x13, 0xa4, 0x11, 0xc2, 0x10, 0x38, 0x40, 0x3c, 0x5b, 0x04, 0x00, 0x3e, 0x5d, 0x9e, 0x59, 0x04, 0x04, 0x27, 0x11, 0xa1, 0x11, 0x01, 0x5a, 0x0a, 0x60, 0x38, 0x40, 0x3c, 0x5d, 0x01, 0x5b, 0x1b, 0x40, 0x1b, 0x40, 0x1b, 0x40, 0x1a, 0x40, 0x10, 0x63, 0xe9, 0xdd, 
+0xc0, 0x1c, 0x27, 0x6b, 0x3c, 0x5b, 0xc0, 0x06, 0x98, 0x3f, 0x7a, 0x1e, 0x00, 0x61, 0x9e, 0x58, 0x05, 0x04, 0x07, 0x65, 0x3c, 0x5d, 0x01, 0x5a, 0x9e, 0x5c, 0xf2, 0x04, 0xfc, 0x48, 0x2b, 0x96, 0x9e, 0x5c, 0xe2, 0x04, 0xfc, 0x48, 0x10, 0x96, 0x9e, 0x58, 0x04, 0x04, 0x9e, 0x5c, 0xf3, 0x04, 0x04, 0x10, 0xf8, 0x48, 0x4b, 0x98, 0x9e, 0x58, 0x04, 0x04, 0x9e, 0x5c, 0xe3, 0x04, 0x04, 0x10, 0xf8, 0x48, 0x2d, 0x98, 0x98, 0x3f, 0x84, 0x1e, 0x87, 0x13, 0x9e, 0x5d, 0xf2, 0x04, 0x85, 0x14, 0x41, 0x5d, 0xdd, 0x48, 0x58, 0x96, 0xa2, 0x05, 0xdd, 0x48, 0x58, 0x96, 0xa2, 0x05, 0xdd, 0x48, 0x58, 0x96, 0xa2, 0x05, 0xdd, 0x48, 0x58, 0x96, 0xa2, 0x05, 0xdd, 0x48, 0x58, 0x96, 0xa2, 0x05, 0xdd, 0x48, 0x58, 0x96, 0x5a, 0x9e, 0x87, 0x13, 0x41, 0x5d, 0xdd, 0x48, 0x6e, 0x96, 0xa2, 0x05, 0xdd, 0x48, 0x32, 0xdc, 
+0x00, 0x1d, 0x7e, 0x96, 0xa2, 0x05, 0xdd, 0x48, 0x8e, 0x96, 0xa2, 0x05, 0xdd, 0x48, 0x9e, 0x96, 0xa2, 0x05, 0xdd, 0x48, 0xae, 0x96, 0xa2, 0x05, 0xdd, 0x48, 0xbe, 0x96, 0xd0, 0x9e, 0xe0, 0x13, 0x9e, 0x5d, 0xf3, 0x04, 0x85, 0x14, 0x41, 0x5d, 0xdd, 0x48, 0x42, 0x96, 0xa2, 0x05, 0xdd, 0x48, 0x42, 0x96, 0xa2, 0x05, 0xdd, 0x48, 0x42, 0x96, 0xa2, 0x05, 0xdd, 0x48, 0x42, 0x96, 0xa2, 0x05, 0xdd, 0x48, 0x42, 0x96, 0xa2, 0x05, 0xdd, 0x48, 0x42, 0x96, 0x44, 0x9e, 0xe0, 0x13, 0x41, 0x5d, 0xdd, 0x48, 0xc8, 0x96, 0xa2, 0x05, 0xdd, 0x48, 0xd8, 0x96, 0xa2, 0x05, 0xdd, 0x48, 0xe8, 0x96, 0xa2, 0x05, 0xdd, 0x48, 0xf8, 0x96, 0xa2, 0x05, 0xdd, 0x48, 0x98, 0x3d, 0x3e, 0x1e, 0xa2, 0x05, 0xdd, 0x48, 0x98, 0x3d, 0x52, 0x1e, 0x98, 0x3f, 0x66, 0x1e, 0xbb, 0x40, 0x64, 0x64, 0x3c, 0x5c, 0xc0, 0x06, 0x13, 0x80, 
+0x40, 0x1d, 0x98, 0x3f, 0x7a, 0x1e, 0x9e, 0x5d, 0xe4, 0x04, 0xf7, 0x9f, 0x9e, 0x5d, 0xe5, 0x04, 0xf4, 0x9f, 0x9e, 0x5d, 0xe6, 0x04, 0xf1, 0x9f, 0x9e, 0x5d, 0xe7, 0x04, 0xee, 0x9f, 0x9e, 0x5d, 0xe8, 0x04, 0xeb, 0x9f, 0x9e, 0x5d, 0xe9, 0x04, 0xe8, 0x9f, 0x9e, 0x5d, 0xea, 0x04, 0xe5, 0x9f, 0x9e, 0x5d, 0xeb, 0x04, 0xe2, 0x9f, 0x9e, 0x5d, 0xec, 0x04, 0xdf, 0x9f, 0x9e, 0x5d, 0xed, 0x04, 0xdc, 0x9f, 0x9e, 0x5d, 0xee, 0x04, 0xd9, 0x9f, 0x9e, 0x5d, 0xef, 0x04, 0xd6, 0x9f, 0x9e, 0x5d, 0xf0, 0x04, 0xd3, 0x9f, 0x9e, 0x5d, 0xf1, 0x04, 0xd0, 0x9f, 0x9e, 0x5d, 0xe2, 0x04, 0x9e, 0x5c, 0xf2, 0x04, 0xa4, 0x14, 0x9e, 0x5d, 0xe4, 0x04, 0x1e, 0x58, 0x1e, 0x59, 0x9d, 0x40, 0x64, 0x65, 0x3c, 0x5d, 0x01, 0x5c, 0x3e, 0x59, 0x3e, 0x58, 0x86, 0x06, 0x9e, 0x5d, 0xf4, 0x04, 0xbd, 0x9f, 0x9e, 0x5d, 0xd9, 0x00, 
+0x80, 0x1d, 0xe2, 0x04, 0x9e, 0x5c, 0xf2, 0x04, 0xa4, 0x14, 0x9e, 0x5d, 0xe5, 0x04, 0x1e, 0x58, 0x1e, 0x59, 0x9d, 0x40, 0x64, 0x65, 0x3c, 0x5d, 0x01, 0x5c, 0x3e, 0x59, 0x3e, 0x58, 0x86, 0x06, 0x9e, 0x5d, 0xf5, 0x04, 0xaa, 0x9f, 0x9e, 0x5d, 0xe2, 0x04, 0x9e, 0x5c, 0xf2, 0x04, 0xa4, 0x14, 0x9e, 0x5d, 0xe6, 0x04, 0x1e, 0x58, 0x1e, 0x59, 0x9d, 0x40, 0x64, 0x65, 0x3c, 0x5d, 0x01, 0x5c, 0x3e, 0x59, 0x3e, 0x58, 0x86, 0x06, 0x9e, 0x5d, 0xf6, 0x04, 0x97, 0x9f, 0x9e, 0x5d, 0xe2, 0x04, 0x9e, 0x5c, 0xf2, 0x04, 0xa4, 0x14, 0x9e, 0x5d, 0xe7, 0x04, 0x1e, 0x58, 0x1e, 0x59, 0x9d, 0x40, 0x64, 0x65, 0x3c, 0x5d, 0x01, 0x5c, 0x3e, 0x59, 0x3e, 0x58, 0x86, 0x06, 0x9e, 0x5d, 0xf7, 0x04, 0x84, 0x9f, 0x9e, 0x5d, 0xe2, 0x04, 0x9e, 0x5c, 0xf2, 0x04, 0xa4, 0x14, 0x9e, 0x5d, 0xe8, 0x04, 0x1e, 0x58, 0xd7, 0x64, 
+0xc0, 0x1d, 0x1e, 0x59, 0x9d, 0x40, 0x64, 0x65, 0x3c, 0x5d, 0x01, 0x5c, 0x3e, 0x59, 0x3e, 0x58, 0x86, 0x06, 0x9e, 0x5d, 0xf8, 0x04, 0x71, 0x9f, 0x9e, 0x5d, 0xe2, 0x04, 0x9e, 0x5c, 0xf2, 0x04, 0xa4, 0x14, 0x9e, 0x5d, 0xe9, 0x04, 0x1e, 0x58, 0x1e, 0x59, 0x9d, 0x40, 0x64, 0x65, 0x3c, 0x5d, 0x01, 0x5c, 0x3e, 0x59, 0x3e, 0x58, 0x86, 0x06, 0x9e, 0x5d, 0xf9, 0x04, 0x5e, 0x9f, 0x9e, 0x5d, 0xe2, 0x04, 0x9e, 0x5c, 0xf2, 0x04, 0xa4, 0x14, 0x9e, 0x5d, 0xea, 0x04, 0x1e, 0x58, 0x1e, 0x59, 0x9d, 0x40, 0x64, 0x65, 0x3c, 0x5d, 0x01, 0x5c, 0x3e, 0x59, 0x3e, 0x58, 0x86, 0x06, 0x9e, 0x5d, 0xfa, 0x04, 0x4b, 0x9f, 0x9e, 0x5d, 0xe3, 0x04, 0x9e, 0x5c, 0xf3, 0x04, 0xa4, 0x14, 0x9e, 0x5d, 0xeb, 0x04, 0x1e, 0x58, 0x1e, 0x59, 0x9d, 0x40, 0x64, 0x65, 0x3c, 0x5d, 0x01, 0x5c, 0x3e, 0x59, 0x3e, 0x58, 0xa1, 0x98, 
+0x00, 0x1e, 0x86, 0x06, 0x9e, 0x5d, 0xfb, 0x04, 0x38, 0x9f, 0x9e, 0x5d, 0xe3, 0x04, 0x9e, 0x5c, 0xf3, 0x04, 0xa4, 0x14, 0x9e, 0x5d, 0xec, 0x04, 0x1e, 0x58, 0x1e, 0x59, 0x9d, 0x40, 0x64, 0x65, 0x3c, 0x5d, 0x01, 0x5c, 0x3e, 0x59, 0x3e, 0x58, 0x86, 0x06, 0x9e, 0x5d, 0xfc, 0x04, 0x25, 0x9f, 0x9e, 0x5d, 0xe3, 0x04, 0x9e, 0x5c, 0xf3, 0x04, 0xa4, 0x14, 0x9e, 0x5d, 0xed, 0x04, 0x1e, 0x58, 0x1e, 0x59, 0x9d, 0x40, 0x64, 0x65, 0x3c, 0x5d, 0x01, 0x5c, 0x3e, 0x59, 0x3e, 0x58, 0x86, 0x06, 0x9e, 0x5d, 0xfd, 0x04, 0x12, 0x9f, 0x9e, 0x5d, 0xe3, 0x04, 0x9e, 0x5c, 0xf3, 0x04, 0xa4, 0x14, 0x9e, 0x5d, 0xee, 0x04, 0x1e, 0x58, 0x1e, 0x59, 0x9d, 0x40, 0x64, 0x65, 0x3c, 0x5d, 0x01, 0x5c, 0x3e, 0x59, 0x3e, 0x58, 0x86, 0x06, 0x9e, 0x5d, 0xfe, 0x04, 0x98, 0x3f, 0x3c, 0x1d, 0x9e, 0x5d, 0xe3, 0x04, 0xeb, 0x56, 
+0x40, 0x1e, 0x9e, 0x5c, 0xf3, 0x04, 0xa4, 0x14, 0x9e, 0x5d, 0xef, 0x04, 0x1e, 0x58, 0x1e, 0x59, 0x9d, 0x40, 0x64, 0x65, 0x3c, 0x5d, 0x01, 0x5c, 0x3e, 0x59, 0x3e, 0x58, 0x86, 0x06, 0x9e, 0x5d, 0xff, 0x04, 0x98, 0x3f, 0x3c, 0x1d, 0x9e, 0x5d, 0xe3, 0x04, 0x9e, 0x5c, 0xf3, 0x04, 0xa4, 0x14, 0x9e, 0x5d, 0xf0, 0x04, 0x1e, 0x58, 0x1e, 0x59, 0x9d, 0x40, 0x64, 0x65, 0x3c, 0x5d, 0x01, 0x5c, 0x3e, 0x59, 0x3e, 0x58, 0x86, 0x06, 0x9e, 0x5d, 0x00, 0x05, 0x98, 0x3f, 0x3c, 0x1d, 0x9e, 0x5d, 0xe3, 0x04, 0x9e, 0x5c, 0xf3, 0x04, 0xa4, 0x14, 0x9e, 0x5d, 0xf1, 0x04, 0x1e, 0x58, 0x1e, 0x59, 0x9d, 0x40, 0x64, 0x65, 0x3c, 0x5d, 0x01, 0x5c, 0x3e, 0x59, 0x3e, 0x58, 0x86, 0x06, 0x9e, 0x5d, 0x01, 0x05, 0x98, 0x3f, 0x3c, 0x1d, 0x00, 0x65, 0xdd, 0x48, 0x06, 0x96, 0x9e, 0x5d, 0x05, 0x04, 0x19, 0x15, 0xf4, 0xbf, 
+0x80, 0x1e, 0xdd, 0x48, 0x01, 0x98, 0x01, 0x9e, 0xa1, 0x5e, 0x3a, 0x38, 0x9e, 0x59, 0xdc, 0x00, 0x9e, 0x5e, 0x8b, 0x04, 0x00, 0x67, 0xdf, 0x48, 0x39, 0x8a, 0x9e, 0x59, 0x0b, 0x04, 0x38, 0x66, 0x03, 0x6e, 0xc1, 0x07, 0x48, 0xdc, 0x38, 0x66, 0x03, 0x6e, 0x28, 0x59, 0x20, 0x39, 0x38, 0x03, 0x19, 0x48, 0x03, 0x98, 0x10, 0x38, 0x8f, 0x04, 0x02, 0x9e, 0x12, 0x38, 0x8f, 0x04, 0x03, 0x5e, 0x9e, 0x59, 0xdc, 0x00, 0x01, 0xac, 0x09, 0x92, 0x9e, 0x58, 0x8c, 0x04, 0xd8, 0x48, 0x1e, 0x96, 0x01, 0xa8, 0x01, 0x60, 0xbe, 0x58, 0xdb, 0x00, 0x19, 0x9e, 0x9e, 0x58, 0x8d, 0x04, 0xd8, 0x48, 0x0b, 0x9a, 0x9e, 0x58, 0xdb, 0x00, 0x19, 0x00, 0x9e, 0x5f, 0x8e, 0x04, 0x1f, 0x48, 0x01, 0x9a, 0xe1, 0x58, 0xbe, 0x58, 0xdb, 0x00, 0x0a, 0x9e, 0x9e, 0x58, 0xdb, 0x00, 0x00, 0x67, 0x1f, 0x48, 0x04, 0x8a, 0x62, 0x98, 
+0xc0, 0x1e, 0x19, 0x10, 0xbe, 0x58, 0xdb, 0x00, 0x01, 0x9e, 0x01, 0xaa, 0xbe, 0x59, 0xdc, 0x00, 0x3a, 0x38, 0x9e, 0x5c, 0xc1, 0x03, 0x83, 0x5c, 0x9e, 0x5e, 0x04, 0x04, 0xd2, 0x3e, 0xbb, 0x04, 0x9e, 0x48, 0x12, 0x96, 0x9e, 0x58, 0xba, 0x04, 0x18, 0x30, 0x0e, 0x8a, 0x9e, 0x58, 0xbc, 0x04, 0xbe, 0x58, 0xc4, 0x03, 0x9e, 0x58, 0xbd, 0x04, 0xbe, 0x58, 0xc5, 0x03, 0x9e, 0x58, 0xbe, 0x04, 0xbe, 0x58, 0xc6, 0x03, 0xfa, 0xde, 0x16, 0x9e, 0x9e, 0x5d, 0xc0, 0x04, 0x9d, 0x48, 0x12, 0x98, 0x9e, 0x58, 0xbf, 0x04, 0x18, 0x30, 0x0e, 0x8a, 0x9e, 0x58, 0xc1, 0x04, 0xbe, 0x58, 0xc4, 0x03, 0x9e, 0x58, 0xdc, 0x04, 0xbe, 0x58, 0xc5, 0x03, 0x9e, 0x58, 0xdd, 0x04, 0xbe, 0x58, 0xc6, 0x03, 0xfa, 0xde, 0x00, 0x9e, 0x3a, 0x38, 0x9e, 0x5d, 0x05, 0x04, 0x9e, 0x5c, 0xc0, 0x03, 0x83, 0x5c, 0x9e, 0x5f, 0xf4, 0x22, 
+0x00, 0x1f, 0xc3, 0x03, 0x9e, 0x58, 0xc4, 0x03, 0x19, 0x30, 0x03, 0x8a, 0x9e, 0x5f, 0xc2, 0x03, 0xa4, 0x14, 0xe3, 0x5b, 0x25, 0x62, 0x02, 0x6a, 0x50, 0x3a, 0x03, 0x01, 0x43, 0x5a, 0x5f, 0x38, 0x48, 0x5a, 0x9e, 0x5e, 0xc5, 0x03, 0x5e, 0x40, 0x1c, 0x40, 0x3c, 0x5d, 0x60, 0x03, 0x9e, 0x5e, 0xc6, 0x03, 0x5e, 0x40, 0x60, 0x03, 0x7b, 0x5f, 0x9e, 0x5e, 0xc2, 0x03, 0x9e, 0x5f, 0xc3, 0x03, 0x9e, 0x5b, 0x05, 0x04, 0x00, 0x64, 0x41, 0xda, 0x9e, 0x5e, 0xc1, 0x03, 0xc3, 0x5e, 0x1d, 0xd7, 0x9e, 0x58, 0xc0, 0x03, 0xbb, 0x58, 0x3a, 0x38, 0x9e, 0x58, 0xd5, 0x04, 0x00, 0x61, 0x19, 0x48, 0x5e, 0x8a, 0xce, 0xdf, 0x9e, 0x58, 0xc0, 0x03, 0x9e, 0x59, 0xd6, 0x04, 0x19, 0x48, 0x57, 0x96, 0x9e, 0x58, 0xd6, 0x04, 0xbe, 0x58, 0x26, 0x01, 0x9e, 0x58, 0xd5, 0x04, 0x00, 0xac, 0x0c, 0x90, 0x9e, 0x58, 0x48, 0xe7, 
+0x40, 0x1f, 0x45, 0x01, 0x9e, 0x59, 0xd7, 0x04, 0x19, 0x48, 0x06, 0x96, 0x9e, 0x59, 0xd8, 0x04, 0x19, 0x48, 0x02, 0x98, 0x00, 0x60, 0x33, 0x9e, 0x9e, 0x58, 0xd5, 0x04, 0x08, 0xac, 0x0e, 0x90, 0xe8, 0x60, 0x03, 0x68, 0x12, 0x38, 0x45, 0x01, 0x9e, 0x59, 0x02, 0x05, 0x19, 0x48, 0x06, 0x96, 0x9e, 0x59, 0x03, 0x05, 0x19, 0x48, 0x02, 0x98, 0x01, 0x60, 0x21, 0x9e, 0x9e, 0x58, 0xd5, 0x04, 0x10, 0xac, 0x0c, 0x90, 0x9e, 0x58, 0x46, 0x01, 0x9e, 0x59, 0x04, 0x05, 0x19, 0x48, 0x06, 0x96, 0x9e, 0x59, 0x05, 0x05, 0x19, 0x48, 0x02, 0x98, 0x02, 0x60, 0x11, 0x9e, 0x9e, 0x58, 0xd5, 0x04, 0x18, 0xac, 0x1d, 0x90, 0xe8, 0x60, 0x03, 0x68, 0x12, 0x38, 0x46, 0x01, 0x9e, 0x59, 0x06, 0x05, 0x19, 0x48, 0x15, 0x96, 0x9e, 0x59, 0x07, 0x05, 0x19, 0x48, 0x11, 0x98, 0x03, 0x60, 0x0c, 0x61, 0x05, 0x69, 0xea, 0x5d, 
+0x80, 0x1f, 0x20, 0x01, 0x23, 0x59, 0xbe, 0x59, 0x26, 0x01, 0x08, 0x61, 0x05, 0x69, 0x20, 0x01, 0x23, 0x59, 0xbe, 0x59, 0x23, 0x01, 0x5c, 0x11, 0xbe, 0x59, 0x25, 0x01, 0x0c, 0x9e, 0x9e, 0x58, 0xb0, 0x04, 0xbe, 0x58, 0x26, 0x01, 0x9e, 0x58, 0x55, 0x04, 0xbe, 0x58, 0x23, 0x01, 0x9e, 0x58, 0x56, 0x04, 0xbe, 0x58, 0x25, 0x01, 0x00, 0x66, 0x9e, 0x58, 0x15, 0x05, 0x00, 0xac, 0x2c, 0x90, 0x9e, 0x58, 0x46, 0x01, 0x9e, 0x59, 0x16, 0x05, 0x19, 0x48, 0x08, 0x96, 0xe8, 0x60, 0x03, 0x68, 0x12, 0x38, 0x46, 0x01, 0x9e, 0x59, 0x17, 0x05, 0x19, 0x48, 0x1e, 0x98, 0x25, 0x61, 0x02, 0x69, 0x9e, 0x5a, 0x18, 0x05, 0x9e, 0x5b, 0x0b, 0x04, 0x00, 0x67, 0x67, 0x38, 0xba, 0x1f, 0x25, 0x5d, 0xba, 0x48, 0x01, 0x9a, 0x19, 0x07, 0x1a, 0x38, 0x40, 0x61, 0x02, 0x69, 0x9e, 0x5b, 0x0b, 0x04, 0x67, 0x38, 0xd3, 0x84, 
+0xc0, 0x1f, 0xc5, 0x1f, 0x25, 0x5d, 0xba, 0x48, 0x01, 0x9a, 0x19, 0x07, 0x1a, 0x38, 0x9e, 0x58, 0x19, 0x05, 0xf8, 0x48, 0x01, 0x98, 0x01, 0x66, 0xbe, 0x5e, 0x27, 0x01, 0x3a, 0x38, 0x9e, 0x58, 0x0b, 0x04, 0x25, 0x61, 0x02, 0x69, 0x40, 0x62, 0x02, 0x6a, 0x00, 0x63, 0x07, 0x38, 0xdd, 0x1f, 0x25, 0x5d, 0x45, 0x5e, 0xa6, 0x05, 0xbb, 0x48, 0x01, 0x96, 0xa1, 0x5b, 0x1a, 0x38, 0xbe, 0x5b, 0xc0, 0x03, 0x3a, 0x38, 0x00, 0x60, 0xfb, 0xdb, 0xfc, 0xda, 0x59, 0xdc, 0xc0, 0xdb, 0x9c, 0xda, 0x8d, 0xda, 0x75, 0x66, 0x76, 0x67, 0x9e, 0x5b, 0x05, 0x04, 0x00, 0x64, 0x41, 0xda, 0xe8, 0x61, 0x03, 0x69, 0x19, 0x40, 0x9e, 0x5a, 0x05, 0x04, 0x3c, 0x5a, 0xbe, 0x58, 0x45, 0x01, 0x9e, 0x5e, 0x6e, 0x00, 0x9e, 0x5f, 0x72, 0x00, 0x80, 0x63, 0x00, 0x64, 0x41, 0xda, 0x01, 0x5d, 0x38, 0x67, 0x03, 0x6f, 0xa4, 0x16, 
+0x00, 0x20, 0xc7, 0x16, 0xdb, 0x40, 0x05, 0x00, 0xe8, 0x61, 0x03, 0x69, 0x19, 0x40, 0x9e, 0x5a, 0x04, 0x04, 0x3c, 0x5a, 0xbe, 0x58, 0x46, 0x01, 0x9e, 0x58, 0x40, 0x01, 0x64, 0x61, 0x19, 0x48, 0x05, 0x98, 0x00, 0x60, 0xbe, 0x58, 0x45, 0x01, 0xbe, 0x58, 0x46, 0x01, 0x9e, 0x58, 0xab, 0x04, 0x08, 0x58, 0x08, 0x58, 0x09, 0x61, 0x19, 0x48, 0x0a, 0x88, 0xb3, 0x61, 0x02, 0x69, 0x30, 0x39, 0x0a, 0x04, 0x9e, 0x5a, 0x45, 0x01, 0x5d, 0x59, 0x9e, 0x5a, 0x46, 0x01, 0x5d, 0x59, 0x3a, 0x38, 0x9e, 0x58, 0x47, 0x05, 0x19, 0x10, 0x18, 0x3a, 0x2c, 0x21, 0xd8, 0xac, 0xfe, 0x92, 0x9e, 0x58, 0xb1, 0x00, 0x01, 0x61, 0x19, 0x48, 0xf9, 0x88, 0x9e, 0x58, 0x70, 0x00, 0x02, 0x38, 0x38, 0x03, 0x9e, 0x5f, 0x43, 0x01, 0x01, 0x61, 0xf9, 0x48, 0x3c, 0x8a, 0x02, 0x61, 0xf9, 0x48, 0xae, 0x8a, 0x00, 0x3b, 0xa5, 0x5b, 
+0x40, 0x20, 0x25, 0x02, 0x00, 0x3c, 0x40, 0x02, 0x63, 0x5d, 0x83, 0x5e, 0xd0, 0x3e, 0x48, 0x05, 0xbe, 0x48, 0x6f, 0x96, 0x06, 0x62, 0x1b, 0x13, 0x1b, 0x14, 0x00, 0x67, 0x47, 0x38, 0x66, 0x20, 0x25, 0x61, 0x02, 0x69, 0x79, 0x48, 0x11, 0x96, 0x30, 0x39, 0x0b, 0x04, 0x79, 0x48, 0x0d, 0x98, 0x63, 0x5d, 0x83, 0x5e, 0xb0, 0x3d, 0x4a, 0x05, 0xbe, 0x48, 0x08, 0x98, 0x01, 0x61, 0xbe, 0x59, 0x43, 0x01, 0xc5, 0x11, 0xe1, 0x07, 0x5c, 0x07, 0x01, 0x9e, 0x19, 0x02, 0x19, 0x03, 0x19, 0x04, 0x9e, 0x59, 0x43, 0x01, 0x19, 0x11, 0xc1, 0x88, 0x1e, 0x12, 0x08, 0x8a, 0x0f, 0x61, 0x1e, 0x58, 0xf9, 0x40, 0x07, 0x66, 0xc2, 0x12, 0x3c, 0x5a, 0x01, 0x5f, 0x3e, 0x58, 0xbe, 0x5f, 0x44, 0x01, 0x01, 0x9e, 0xb4, 0x9e, 0x9e, 0x5f, 0x44, 0x01, 0x1e, 0x58, 0x00, 0x3b, 0x25, 0x02, 0x00, 0x3c, 0x40, 0x02, 0x88, 0x9a, 
+0x80, 0x20, 0x63, 0x5d, 0x83, 0x5e, 0xa6, 0x15, 0xe8, 0x66, 0x03, 0x6e, 0xbe, 0x48, 0x07, 0x9a, 0x9e, 0x5e, 0x4e, 0x05, 0xdf, 0x40, 0x0a, 0x66, 0x3c, 0x5e, 0x01, 0x5f, 0x12, 0x9e, 0xda, 0x15, 0x9e, 0x5e, 0x4e, 0x05, 0xbe, 0x40, 0x1f, 0x40, 0xb6, 0x65, 0x03, 0x6d, 0x3c, 0x5d, 0x00, 0x61, 0x14, 0x65, 0x3c, 0x5d, 0x01, 0x5e, 0x9e, 0x5c, 0x4e, 0x05, 0x9f, 0x40, 0x14, 0x65, 0x3c, 0x5d, 0x06, 0x07, 0x3e, 0x58, 0xf0, 0x3f, 0x4c, 0x05, 0x00, 0x3c, 0x40, 0x02, 0x1b, 0x14, 0x06, 0x62, 0x47, 0x38, 0xb6, 0x20, 0x40, 0x61, 0x02, 0x69, 0x99, 0x48, 0x09, 0x96, 0x30, 0x39, 0x0b, 0x04, 0x99, 0x48, 0x05, 0x98, 0x83, 0x5d, 0xa7, 0x15, 0x01, 0x8c, 0x00, 0x65, 0xbb, 0x5c, 0x19, 0x04, 0x74, 0x9e, 0x63, 0x5d, 0x83, 0x5e, 0xb0, 0x3d, 0x48, 0x05, 0xdd, 0x48, 0x6e, 0x96, 0x06, 0x62, 0x1b, 0x13, 0xfc, 0x4f, 
+0xc0, 0x20, 0x1b, 0x14, 0x00, 0x67, 0x47, 0x38, 0xdb, 0x20, 0x25, 0x61, 0x02, 0x69, 0x79, 0x48, 0x11, 0x96, 0x30, 0x39, 0x0b, 0x04, 0x79, 0x48, 0x0d, 0x98, 0x63, 0x5d, 0x83, 0x5e, 0xd0, 0x3e, 0x4b, 0x05, 0xdd, 0x48, 0x08, 0x98, 0x02, 0x61, 0xbe, 0x59, 0x43, 0x01, 0xa6, 0x11, 0xe1, 0x07, 0x5c, 0x07, 0x01, 0x9e, 0x19, 0x02, 0x19, 0x03, 0x19, 0x04, 0x9e, 0x59, 0x43, 0x01, 0x1a, 0x11, 0x4c, 0x88, 0x1e, 0x12, 0x08, 0x8a, 0x0f, 0x61, 0x1e, 0x58, 0xf9, 0x40, 0x07, 0x66, 0xc2, 0x12, 0x3c, 0x5a, 0x01, 0x5f, 0x3e, 0x58, 0xbe, 0x5f, 0x44, 0x01, 0x01, 0x9e, 0x74, 0x9e, 0x9e, 0x5f, 0x44, 0x01, 0x1e, 0x58, 0x00, 0x3b, 0x25, 0x02, 0x00, 0x3c, 0x40, 0x02, 0x63, 0x5d, 0x83, 0x5e, 0xc5, 0x15, 0xe8, 0x66, 0x03, 0x6e, 0xbe, 0x48, 0x07, 0x9a, 0x9e, 0x5e, 0x4e, 0x05, 0xdf, 0x40, 0x0a, 0x66, 0x6a, 0x9b, 
+0x00, 0x21, 0x3c, 0x5e, 0x01, 0x5f, 0x12, 0x9e, 0xda, 0x15, 0x9e, 0x5e, 0x4e, 0x05, 0xbe, 0x40, 0x1f, 0x40, 0xb6, 0x65, 0x03, 0x6d, 0x3c, 0x5d, 0x00, 0x61, 0x14, 0x65, 0x3c, 0x5d, 0x01, 0x5e, 0x9e, 0x5c, 0x4e, 0x05, 0x9f, 0x40, 0x14, 0x65, 0x3c, 0x5d, 0x06, 0x07, 0x3e, 0x58, 0xf0, 0x3f, 0x4d, 0x05, 0x00, 0x3c, 0x25, 0x02, 0x1b, 0x14, 0x06, 0x62, 0x47, 0x38, 0x2b, 0x21, 0x25, 0x61, 0x02, 0x69, 0x99, 0x48, 0x09, 0x96, 0x30, 0x39, 0x0b, 0x04, 0x99, 0x48, 0x05, 0x98, 0x83, 0x5d, 0xa7, 0x15, 0x01, 0x8c, 0x00, 0x65, 0xbb, 0x5c, 0x19, 0x04, 0x3a, 0x38, 0x00, 0x61, 0xbe, 0x59, 0x43, 0x01, 0x00, 0x3b, 0x25, 0x02, 0x00, 0x3c, 0x40, 0x02, 0x63, 0x5d, 0x83, 0x5e, 0xd0, 0x3e, 0x49, 0x05, 0xbe, 0x48, 0x7e, 0x97, 0x01, 0x61, 0xbe, 0x59, 0x43, 0x01, 0x06, 0x62, 0x1b, 0x13, 0x1b, 0x14, 0x06, 0x60, 
+0x40, 0x21, 0x00, 0x67, 0x47, 0x38, 0x54, 0x21, 0x25, 0x61, 0x02, 0x69, 0x79, 0x48, 0x0b, 0x96, 0x30, 0x39, 0x0b, 0x04, 0x79, 0x48, 0x07, 0x98, 0x63, 0x5d, 0x83, 0x5e, 0xbe, 0x48, 0x04, 0x98, 0xc5, 0x11, 0xe1, 0x07, 0x01, 0x9e, 0x19, 0x02, 0x19, 0x03, 0x19, 0x04, 0x1e, 0x12, 0x08, 0x8a, 0x0f, 0x61, 0x1e, 0x58, 0xf9, 0x40, 0x07, 0x66, 0xc2, 0x12, 0x3c, 0x5a, 0x01, 0x5f, 0x3e, 0x58, 0xbe, 0x5f, 0x44, 0x01, 0x17, 0x9f, 0x00, 0x61, 0xbe, 0x59, 0x43, 0x01, 0x00, 0x3b, 0x25, 0x02, 0x00, 0x3c, 0x40, 0x02, 0x63, 0x5d, 0x83, 0x5e, 0xb0, 0x3d, 0x49, 0x05, 0xdd, 0x48, 0x98, 0x3d, 0x3f, 0x20, 0x02, 0x61, 0xbe, 0x59, 0x43, 0x01, 0x06, 0x62, 0x1b, 0x13, 0x1b, 0x14, 0x00, 0x67, 0x47, 0x38, 0x8a, 0x21, 0x25, 0x61, 0x02, 0x69, 0x79, 0x48, 0x0b, 0x96, 0x30, 0x39, 0x0b, 0x04, 0x79, 0x48, 0xec, 0x37, 
+0x80, 0x21, 0x07, 0x98, 0x63, 0x5d, 0x83, 0x5e, 0xdd, 0x48, 0x04, 0x98, 0xa6, 0x11, 0xe1, 0x07, 0x01, 0x9e, 0x19, 0x02, 0x19, 0x03, 0x19, 0x04, 0x1e, 0x12, 0x08, 0x8a, 0x0f, 0x61, 0x1e, 0x58, 0xf9, 0x40, 0x07, 0x66, 0xc2, 0x12, 0x3c, 0x5a, 0x01, 0x5f, 0x3e, 0x58, 0xbe, 0x5f, 0x44, 0x01, 0x56, 0x9f, 0x9d, 0xaa, 0x9e, 0x58, 0xa8, 0x04, 0x01, 0x62, 0x1a, 0x48, 0x29, 0x96, 0x9e, 0x58, 0x40, 0x01, 0x9e, 0x5a, 0x56, 0x04, 0x1a, 0x48, 0x23, 0x96, 0x9e, 0x58, 0xa8, 0x04, 0xe8, 0x62, 0x03, 0x6a, 0x52, 0x3a, 0x45, 0x01, 0x58, 0x48, 0x1b, 0x98, 0x25, 0x62, 0x02, 0x6a, 0x50, 0x3a, 0x03, 0x01, 0x50, 0x3a, 0x52, 0x05, 0x43, 0x5b, 0x9e, 0x5c, 0xa9, 0x04, 0x7c, 0x48, 0x10, 0x96, 0x9d, 0xa8, 0x9e, 0x5a, 0xaa, 0x04, 0x5b, 0x40, 0x0a, 0x64, 0x3c, 0x5c, 0x9e, 0x59, 0x23, 0x01, 0x20, 0x01, 0x13, 0xa4, 
+0xc0, 0x21, 0xbe, 0x59, 0x23, 0x01, 0x9e, 0x59, 0x25, 0x01, 0x20, 0x01, 0xbe, 0x59, 0x25, 0x01, 0x3a, 0x38, 0x9e, 0x58, 0x11, 0x01, 0x78, 0xa8, 0xbe, 0x58, 0x11, 0x01, 0x00, 0xac, 0x03, 0x92, 0x00, 0x60, 0x08, 0x68, 0x02, 0x9e, 0xc0, 0x60, 0x08, 0x68, 0xbe, 0x58, 0x10, 0x01, 0x01, 0x60, 0xc6, 0xb0, 0x3a, 0x38, 0x01, 0xb8, 0x41, 0xab, 0x13, 0xb8, 0x14, 0xb8, 0x15, 0xb8, 0x9e, 0x58, 0x32, 0x04, 0x18, 0x30, 0x3f, 0x88, 0x41, 0xa9, 0x45, 0xb0, 0x03, 0x61, 0x01, 0x20, 0x19, 0x48, 0x2d, 0x88, 0x9e, 0x58, 0x12, 0x01, 0x00, 0xac, 0x03, 0x92, 0x00, 0x60, 0x08, 0x68, 0x02, 0x9e, 0xc0, 0x60, 0x08, 0x68, 0xbe, 0x58, 0x15, 0x01, 0x9e, 0x59, 0x13, 0x01, 0x22, 0x38, 0x02, 0x00, 0x1d, 0x96, 0x22, 0x38, 0x40, 0x00, 0x1a, 0x98, 0x00, 0x60, 0xbe, 0x58, 0x14, 0x01, 0xbe, 0x58, 0x16, 0x01, 0x1c, 0x50, 
+0x00, 0x22, 0x9e, 0x5d, 0x13, 0x01, 0x9e, 0x5e, 0x15, 0x01, 0x9e, 0x5f, 0x16, 0x01, 0xe5, 0x40, 0xc0, 0x06, 0x0e, 0x60, 0xe0, 0x07, 0x9e, 0x5c, 0xd2, 0x04, 0x2e, 0xe3, 0x9e, 0x58, 0x16, 0x01, 0x19, 0x00, 0xbe, 0x58, 0x16, 0x01, 0x02, 0x61, 0x19, 0x48, 0xeb, 0x81, 0x9e, 0x58, 0x12, 0x01, 0x19, 0x00, 0xbe, 0x58, 0x12, 0x01, 0xed, 0xed, 0x41, 0xab, 0x95, 0xb8, 0x94, 0xb8, 0x93, 0xb8, 0x81, 0xb8, 0x3a, 0x38, 0x15, 0x60, 0x56, 0x61, 0x2f, 0x38, 0x2b, 0x22, 0x05, 0x5a, 0xfe, 0x5a, 0xff, 0x22, 0x40, 0x3a, 0xb7, 0x01, 0x43, 0x5b, 0x7d, 0x59, 0x9e, 0x58, 0x52, 0x00, 0xc1, 0xb0, 0xc8, 0xe1, 0xd9, 0xe1, 0x0e, 0x60, 0x59, 0x61, 0x2f, 0x38, 0x36, 0x22, 0x05, 0x5a, 0x5d, 0x59, 0x9e, 0x58, 0x53, 0x00, 0xc1, 0xb0, 0xc8, 0xe1, 0xd9, 0xe1, 0x0e, 0x60, 0x5c, 0x61, 0x2f, 0x38, 0x41, 0x22, 0x59, 0xe5, 
+0x40, 0x22, 0x05, 0x5a, 0x5d, 0x59, 0x00, 0x60, 0x59, 0x61, 0x5c, 0x62, 0x15, 0x63, 0x2f, 0x38, 0x54, 0x22, 0x25, 0x5c, 0x45, 0x5d, 0x65, 0x5e, 0x76, 0xac, 0x07, 0x92, 0xa4, 0x16, 0x01, 0x82, 0x85, 0x16, 0x9e, 0x5f, 0x33, 0x04, 0xdf, 0x48, 0x02, 0x82, 0x19, 0x00, 0x5b, 0x9e, 0x1e, 0x58, 0x9e, 0x58, 0x54, 0x00, 0xc1, 0xb0, 0xc8, 0xe1, 0xd9, 0xe1, 0x0e, 0x60, 0x5f, 0x61, 0x2f, 0x38, 0x61, 0x22, 0x05, 0x5a, 0x5d, 0x59, 0x3e, 0x58, 0x00, 0x3f, 0x59, 0x00, 0xe3, 0x59, 0x00, 0x3f, 0x5c, 0x00, 0xe3, 0x5a, 0x00, 0x3f, 0x5f, 0x00, 0xe3, 0x5b, 0x41, 0x14, 0x01, 0x82, 0x22, 0x14, 0x61, 0x15, 0x01, 0x82, 0x23, 0x15, 0x62, 0x16, 0x01, 0x82, 0x43, 0x16, 0xdd, 0x48, 0x05, 0x82, 0x9d, 0x48, 0x25, 0x82, 0x9e, 0x48, 0x23, 0x82, 0x04, 0x9e, 0x9e, 0x48, 0x0c, 0x82, 0x9d, 0x48, 0x0a, 0x82, 0xa0, 0x3e, 
+0x80, 0x22, 0x9e, 0x5a, 0x54, 0x00, 0x9e, 0x5b, 0x55, 0x00, 0xbe, 0x5a, 0x55, 0x00, 0xbe, 0x5b, 0x54, 0x00, 0x0c, 0x60, 0x27, 0x9e, 0x9e, 0x5b, 0x55, 0x00, 0x9e, 0x58, 0x53, 0x00, 0xbe, 0x58, 0x55, 0x00, 0x9e, 0x58, 0x54, 0x00, 0xbe, 0x58, 0x53, 0x00, 0xbe, 0x5b, 0x54, 0x00, 0x5c, 0x62, 0x5f, 0x63, 0x2f, 0x38, 0x9b, 0x22, 0x65, 0x5c, 0x9d, 0x5a, 0x1f, 0x60, 0x13, 0x9e, 0x9e, 0x5b, 0x55, 0x00, 0x9e, 0x58, 0x52, 0x00, 0xbe, 0x58, 0x55, 0x00, 0x9e, 0x58, 0x54, 0x00, 0xbe, 0x58, 0x52, 0x00, 0xbe, 0x5b, 0x54, 0x00, 0x59, 0x61, 0x5f, 0x63, 0x2f, 0x38, 0xaf, 0x22, 0x65, 0x5c, 0x9d, 0x59, 0x17, 0x60, 0x56, 0x60, 0x59, 0x61, 0x5c, 0x62, 0x2f, 0x38, 0xe6, 0x22, 0x05, 0x5b, 0x25, 0x5c, 0x45, 0x5d, 0xa4, 0x16, 0x01, 0x82, 0x85, 0x16, 0x9e, 0x5f, 0x34, 0x04, 0xfe, 0x48, 0x22, 0x82, 0xe6, 0x43, 
+0xc0, 0x22, 0x9b, 0x48, 0x02, 0x82, 0x64, 0x16, 0x01, 0x9e, 0x83, 0x16, 0xbb, 0x48, 0x02, 0x82, 0x65, 0x17, 0x01, 0x9e, 0xa3, 0x17, 0xdf, 0x48, 0x0b, 0x82, 0x9e, 0x5b, 0x36, 0x04, 0xdb, 0x48, 0x12, 0x82, 0x9e, 0x5b, 0x35, 0x04, 0x7f, 0x48, 0x0e, 0x82, 0x1e, 0x5c, 0x01, 0x63, 0x0f, 0x9e, 0x9e, 0x5b, 0x36, 0x04, 0xfb, 0x48, 0x07, 0x82, 0x9e, 0x5b, 0x35, 0x04, 0x7e, 0x48, 0x03, 0x82, 0x1e, 0x5d, 0x01, 0x63, 0x04, 0x9e, 0xa4, 0x05, 0xa8, 0x5d, 0x1e, 0x5d, 0x00, 0x63, 0x1e, 0x5b, 0x01, 0x60, 0x00, 0x39, 0x0e, 0x00, 0x00, 0x3a, 0x4f, 0x00, 0x07, 0x38, 0xf1, 0x22, 0x3e, 0x5b, 0x7f, 0x5a, 0x3e, 0x5b, 0x7f, 0x59, 0x27, 0x9f, 0x01, 0xb8, 0x41, 0xab, 0x13, 0xb8, 0x14, 0xb8, 0x15, 0xb8, 0x00, 0x60, 0xbe, 0x58, 0x18, 0x01, 0x9e, 0x5d, 0xd3, 0x04, 0x80, 0x66, 0x09, 0x6e, 0x9e, 0x5f, 0xfc, 0x12, 
+0x00, 0x23, 0x18, 0x01, 0xe5, 0x40, 0xc0, 0x06, 0x00, 0x64, 0x19, 0x61, 0x01, 0x69, 0x25, 0x02, 0xc3, 0x58, 0x1b, 0x59, 0x80, 0x04, 0x19, 0x06, 0x19, 0x01, 0x3a, 0x48, 0xf9, 0x81, 0x18, 0x04, 0x10, 0x8a, 0x18, 0x00, 0x0e, 0x8a, 0x19, 0x66, 0x01, 0x6e, 0xb7, 0x60, 0x01, 0x68, 0xe0, 0x07, 0x9e, 0x5c, 0xd4, 0x04, 0x2e, 0xe3, 0xe3, 0x58, 0x00, 0x61, 0x9e, 0x5c, 0xd3, 0x04, 0x1c, 0x5c, 0x1b, 0x5f, 0x9e, 0x5f, 0x18, 0x01, 0x19, 0x07, 0xbe, 0x5f, 0x18, 0x01, 0x36, 0x61, 0xf9, 0x48, 0xd3, 0x81, 0x41, 0xab, 0x95, 0xb8, 0x94, 0xb8, 0x93, 0xb8, 0x81, 0xb8, 0x3a, 0x38, 0xff, 0x60, 0x80, 0x24, 0x01, 0x60, 0x98, 0x48, 0x3f, 0x8a, 0x02, 0x60, 0x98, 0x48, 0x44, 0x8a, 0x03, 0x60, 0x98, 0x48, 0x52, 0x8a, 0x04, 0x60, 0x98, 0x48, 0x54, 0x8a, 0x05, 0x60, 0x98, 0x48, 0x56, 0x8a, 0x06, 0x60, 0x54, 0x9a, 
+0x40, 0x23, 0x98, 0x48, 0x78, 0x8a, 0x07, 0x60, 0x98, 0x48, 0x81, 0x8a, 0x08, 0x60, 0x98, 0x48, 0x8e, 0x8a, 0x09, 0x60, 0x98, 0x48, 0x97, 0x8a, 0x0a, 0x60, 0x98, 0x48, 0xa6, 0x8a, 0x0b, 0x60, 0x98, 0x48, 0x98, 0x3a, 0x93, 0x24, 0x0c, 0x60, 0x98, 0x48, 0x98, 0x3a, 0x97, 0x24, 0x1b, 0x9e, 0x3a, 0x38, 0xc1, 0x59, 0xc3, 0x5a, 0xc1, 0x5b, 0xc3, 0x5c, 0x1e, 0x5e, 0xa2, 0x38, 0x01, 0x00, 0x07, 0x38, 0x6c, 0x23, 0xc3, 0x58, 0x1c, 0x48, 0x06, 0x80, 0x58, 0x48, 0x01, 0x80, 0x05, 0x9e, 0xc1, 0x59, 0x01, 0x5a, 0x02, 0x9e, 0xc1, 0x5b, 0x01, 0x5c, 0x19, 0x06, 0x3b, 0x48, 0x01, 0x88, 0x19, 0x01, 0x3e, 0x5e, 0x3a, 0x38, 0x00, 0x61, 0x00, 0x60, 0x01, 0x63, 0x19, 0x15, 0xb7, 0x38, 0x66, 0x4a, 0x1b, 0x5f, 0xdd, 0x9f, 0x02, 0x60, 0xb8, 0x48, 0xf5, 0x8b, 0x58, 0xe3, 0x00, 0x60, 0x1b, 0x59, 0x50, 0x93, 
+0x80, 0x23, 0x1b, 0x5b, 0x00, 0x61, 0x00, 0x60, 0xa1, 0x5b, 0x19, 0x15, 0xb7, 0x38, 0x66, 0x4a, 0x19, 0x15, 0x1c, 0x5d, 0x1b, 0x5f, 0xcc, 0x9f, 0x58, 0xe3, 0x23, 0x58, 0x05, 0x40, 0x1b, 0x5f, 0xc7, 0x9f, 0x58, 0xe3, 0x63, 0x58, 0x05, 0x40, 0x1b, 0x5f, 0xc2, 0x9f, 0x02, 0x60, 0xb8, 0x48, 0xda, 0x8b, 0x02, 0x9e, 0x00, 0x60, 0x1b, 0x5b, 0xa5, 0xe3, 0xa2, 0x38, 0x01, 0x00, 0x08, 0x58, 0x58, 0x48, 0xf8, 0x81, 0x63, 0x58, 0x05, 0x40, 0x1b, 0x5f, 0xb2, 0x9f, 0xc1, 0x59, 0x00, 0x62, 0xc1, 0x5b, 0xff, 0x64, 0xff, 0x6c, 0xa2, 0x38, 0x01, 0x00, 0x07, 0x38, 0xb8, 0x23, 0x23, 0x58, 0x18, 0x00, 0x06, 0x8a, 0x1c, 0x48, 0x01, 0x80, 0x04, 0x9e, 0x21, 0x5b, 0x01, 0x5c, 0x01, 0x9e, 0x19, 0x02, 0x19, 0x01, 0x3a, 0x38, 0x58, 0xe3, 0x00, 0x62, 0x5b, 0x59, 0x00, 0x61, 0x00, 0x60, 0xa1, 0x5b, 0x3a, 0x0f, 
+0xc0, 0x23, 0x19, 0x15, 0xb7, 0x38, 0x66, 0x4a, 0x1c, 0x5d, 0x1b, 0x5f, 0x91, 0x9f, 0x58, 0xe3, 0x00, 0x62, 0x5b, 0x59, 0x58, 0xe3, 0x00, 0x62, 0x5b, 0x59, 0x00, 0x61, 0x00, 0x60, 0xa1, 0x5b, 0x19, 0x15, 0xb7, 0x38, 0x66, 0x4a, 0x19, 0x15, 0x1c, 0x5d, 0x1b, 0x5f, 0x81, 0x9f, 0x58, 0xe3, 0x00, 0x64, 0x9b, 0x5b, 0x00, 0x61, 0x00, 0x60, 0xa1, 0x5b, 0x19, 0x15, 0xb7, 0x38, 0x66, 0x4a, 0x1c, 0x5d, 0x1b, 0x5f, 0x75, 0x9f, 0x58, 0xe3, 0xff, 0x64, 0xff, 0x6c, 0x9b, 0x5b, 0x58, 0xe3, 0x00, 0x64, 0x9b, 0x59, 0x9b, 0x5b, 0x00, 0x61, 0x00, 0x60, 0xa1, 0x5b, 0x19, 0x15, 0xb7, 0x38, 0x66, 0x4a, 0x19, 0x15, 0x1c, 0x5d, 0x1b, 0x5f, 0x63, 0x9f, 0x01, 0x60, 0xbe, 0x58, 0xc9, 0x03, 0xbe, 0x5d, 0xc1, 0x03, 0xa1, 0x5c, 0x19, 0x14, 0xc1, 0x5b, 0x00, 0x60, 0x00, 0x61, 0xbe, 0x58, 0xc8, 0x03, 0x53, 0x69, 
+0x00, 0x24, 0x87, 0x38, 0x0c, 0x24, 0x70, 0x00, 0x18, 0x09, 0x63, 0x5a, 0x18, 0x02, 0x05, 0x88, 0x9e, 0x5a, 0xc8, 0x03, 0x19, 0x02, 0xbe, 0x5a, 0xc8, 0x03, 0x19, 0x03, 0xbe, 0x58, 0xc2, 0x03, 0xbe, 0x59, 0xc3, 0x03, 0x00, 0x60, 0x9e, 0x59, 0xc8, 0x03, 0x9e, 0x5a, 0xc1, 0x03, 0x3a, 0x48, 0x43, 0x8a, 0x52, 0x3a, 0xc8, 0x03, 0xbe, 0x5a, 0xc1, 0x03, 0x9e, 0x58, 0xc2, 0x03, 0x9e, 0x59, 0xc3, 0x03, 0x9e, 0x5a, 0xc1, 0x03, 0x1c, 0x5a, 0xbe, 0x58, 0xc4, 0x03, 0x63, 0xe4, 0x9e, 0x58, 0xc5, 0x03, 0x9e, 0x59, 0xdf, 0x04, 0x19, 0x48, 0x21, 0x80, 0xc1, 0x5a, 0x50, 0x3a, 0xc6, 0x03, 0x43, 0x5b, 0x9e, 0x58, 0xc2, 0x03, 0x9e, 0x59, 0xc3, 0x03, 0x03, 0x10, 0x18, 0x19, 0xbe, 0x58, 0xc2, 0x03, 0xbe, 0x59, 0xc3, 0x03, 0xff, 0x61, 0xff, 0x69, 0x3b, 0x5a, 0x9e, 0x58, 0xc1, 0x03, 0x19, 0x10, 0x78, 0xcf, 
+0x40, 0x24, 0xbe, 0x58, 0xc1, 0x03, 0x9e, 0x59, 0xe0, 0x04, 0x19, 0x48, 0xd6, 0x95, 0xbe, 0x59, 0xc1, 0x03, 0x9e, 0x58, 0xc9, 0x03, 0x00, 0xac, 0x01, 0x90, 0xe3, 0xa8, 0x9e, 0x58, 0xc2, 0x03, 0x9e, 0x59, 0xc3, 0x03, 0x9e, 0x5a, 0xc1, 0x03, 0x26, 0x3b, 0x00, 0x00, 0x03, 0x8a, 0x1c, 0x5a, 0x05, 0x40, 0x02, 0x9e, 0x05, 0x40, 0x1c, 0x5a, 0xbe, 0x58, 0xc2, 0x03, 0x1b, 0x5f, 0x00, 0x60, 0xbe, 0x58, 0xc3, 0x03, 0x98, 0x3f, 0x57, 0x23, 0x00, 0x60, 0xbe, 0x58, 0xc5, 0x03, 0xbe, 0x58, 0xc0, 0x03, 0xff, 0x60, 0xbe, 0x58, 0xc6, 0x03, 0xff, 0x64, 0xff, 0x6c, 0xc1, 0x5a, 0xa1, 0x58, 0x19, 0x10, 0x07, 0x38, 0x91, 0x24, 0x45, 0x59, 0x26, 0x3c, 0xff, 0xff, 0x16, 0x8a, 0x26, 0x3c, 0x00, 0x00, 0x13, 0x8a, 0x9e, 0x58, 0xc4, 0x03, 0x38, 0x48, 0x02, 0x82, 0x01, 0x10, 0x01, 0x9e, 0x20, 0x10, 0x9a, 0x79, 
+0x80, 0x24, 0xbe, 0x58, 0xc7, 0x03, 0x9e, 0x59, 0xc5, 0x03, 0x19, 0x48, 0x06, 0x9c, 0xbe, 0x58, 0xc5, 0x03, 0x9e, 0x58, 0xc0, 0x03, 0xbe, 0x58, 0xc6, 0x03, 0x9e, 0x58, 0xc0, 0x03, 0x19, 0x00, 0xbe, 0x58, 0xc0, 0x03, 0x1a, 0x38, 0x3a, 0x38, 0x00, 0x60, 0xbe, 0x58, 0xc9, 0x03, 0x60, 0x9f, 0xc5, 0x5a, 0x41, 0x58, 0x00, 0x64, 0x1a, 0x15, 0xa7, 0x38, 0xa9, 0x24, 0xc5, 0x5b, 0x03, 0x00, 0x02, 0x80, 0xff, 0x60, 0xff, 0x68, 0x43, 0x12, 0x01, 0x8c, 0x42, 0x5a, 0x82, 0x04, 0x02, 0x80, 0xff, 0x64, 0xff, 0x6c, 0x61, 0x5a, 0x1a, 0x05, 0x1b, 0x5f, 0x9e, 0x58, 0xdf, 0x04, 0x05, 0x40, 0x98, 0x48, 0x01, 0x80, 0xe3, 0xa8, 0x98, 0x3f, 0x57, 0x23, 0x9e, 0x59, 0xb1, 0x04, 0x22, 0x38, 0x01, 0x00, 0xbb, 0x88, 0xee, 0x60, 0x01, 0x68, 0xb7, 0x61, 0x01, 0x69, 0x93, 0x62, 0x02, 0x6a, 0x80, 0x63, 0xc8, 0xee, 
+0xc0, 0x24, 0x01, 0x6b, 0x00, 0x64, 0xaf, 0x3e, 0xc7, 0x24, 0x9d, 0x58, 0x9d, 0x59, 0x9d, 0x5a, 0x9d, 0x5b, 0x11, 0xc4, 0x73, 0xe8, 0x00, 0x60, 0x70, 0x68, 0x00, 0x61, 0x19, 0x10, 0x19, 0x48, 0xfd, 0x89, 0x73, 0xe8, 0x00, 0x60, 0x0a, 0x78, 0x40, 0x60, 0x3d, 0x68, 0xbe, 0x58, 0xc0, 0x03, 0xee, 0x60, 0x01, 0x68, 0xbe, 0x58, 0xc1, 0x03, 0x11, 0xc4, 0x0a, 0x70, 0x9e, 0x5f, 0xc0, 0x03, 0x07, 0x00, 0x15, 0x63, 0x2f, 0x38, 0xe8, 0x24, 0x0b, 0x59, 0x06, 0x3a, 0xc0, 0x3c, 0x01, 0x88, 0x19, 0x00, 0x3d, 0x5b, 0x07, 0x10, 0x0a, 0x78, 0xff, 0x60, 0x03, 0x68, 0xc3, 0xb0, 0x45, 0xb0, 0x28, 0xa8, 0xc5, 0xb0, 0x15, 0x70, 0xff, 0x20, 0x05, 0x38, 0x00, 0xff, 0x16, 0x71, 0xff, 0x21, 0x25, 0x39, 0x00, 0xff, 0xca, 0xb0, 0xc9, 0xb1, 0x2b, 0xe8, 0x00, 0x60, 0x20, 0x68, 0x0b, 0x78, 0x00, 0x60, 0xcc, 0x16, 
+0x00, 0x25, 0x40, 0x68, 0x11, 0x78, 0x9e, 0x58, 0x91, 0x04, 0x0d, 0x78, 0x0c, 0x78, 0x15, 0x60, 0x16, 0x61, 0x03, 0x58, 0x23, 0x59, 0xfe, 0x58, 0xfe, 0x59, 0xff, 0x20, 0xff, 0x21, 0x01, 0x5e, 0x21, 0x5f, 0x53, 0xdc, 0x02, 0x39, 0x1b, 0x00, 0x08, 0x88, 0xde, 0x16, 0x06, 0x94, 0xde, 0x17, 0x04, 0x94, 0x9e, 0x58, 0x54, 0x05, 0x0d, 0x78, 0x0c, 0x78, 0xaf, 0x39, 0x34, 0x25, 0x5a, 0xe8, 0xc8, 0xe1, 0x9e, 0x58, 0x11, 0x01, 0x78, 0xac, 0xfc, 0x93, 0xd9, 0xe1, 0x0b, 0x73, 0x0c, 0x74, 0x0d, 0x75, 0x11, 0x76, 0x0e, 0x77, 0xfc, 0x48, 0x03, 0x82, 0xc3, 0x16, 0x11, 0x7e, 0x04, 0x9e, 0xfd, 0x48, 0x02, 0x80, 0xc3, 0x06, 0x11, 0x7e, 0x68, 0x5b, 0x0b, 0x7b, 0x15, 0x60, 0x11, 0x61, 0x0e, 0x62, 0x03, 0x5b, 0x73, 0xac, 0x06, 0x92, 0xfe, 0x5b, 0xff, 0x23, 0x70, 0x3c, 0xc1, 0x03, 0x23, 0x5e, 0xb1, 0xa5, 
+0x40, 0x25, 0xdb, 0x5c, 0x15, 0x70, 0x78, 0xac, 0x97, 0x91, 0x9e, 0x58, 0xc0, 0x03, 0x40, 0x61, 0x3d, 0x69, 0x19, 0x48, 0x0b, 0x88, 0x00, 0x61, 0x0a, 0x79, 0x80, 0x61, 0x3c, 0x69, 0xbe, 0x59, 0xc0, 0x03, 0xb7, 0x61, 0x01, 0x69, 0xbe, 0x59, 0xc1, 0x03, 0x86, 0x9f, 0x80, 0x61, 0x3c, 0x69, 0x19, 0x48, 0x0b, 0x88, 0x00, 0x61, 0x0a, 0x79, 0x40, 0x61, 0x3c, 0x69, 0xbe, 0x59, 0xc0, 0x03, 0x93, 0x61, 0x02, 0x69, 0xbe, 0x59, 0xc1, 0x03, 0x77, 0x9f, 0x40, 0x61, 0x3c, 0x69, 0x19, 0x48, 0x0b, 0x88, 0x00, 0x61, 0x0a, 0x79, 0x00, 0x61, 0x3c, 0x69, 0xbe, 0x59, 0xc0, 0x03, 0x80, 0x61, 0x01, 0x69, 0xbe, 0x59, 0xc1, 0x03, 0x68, 0x9f, 0xda, 0x9e, 0x11, 0xc4, 0xed, 0xaa, 0x73, 0xe8, 0x00, 0x60, 0x70, 0x68, 0x00, 0x61, 0x19, 0x10, 0x19, 0x48, 0xfd, 0x89, 0x73, 0xe8, 0x9e, 0x5f, 0x91, 0x04, 0x06, 0x08, 
+0x80, 0x25, 0x0c, 0x7f, 0x9e, 0x5f, 0x91, 0x04, 0x0d, 0x7f, 0x00, 0x60, 0x0a, 0x78, 0xcf, 0xea, 0x2b, 0xe8, 0x00, 0x60, 0x20, 0x68, 0x0b, 0x78, 0x00, 0x60, 0x40, 0x68, 0x11, 0x78, 0x00, 0x60, 0x40, 0x68, 0x12, 0x78, 0x00, 0x60, 0x40, 0x68, 0x13, 0x78, 0xaf, 0x39, 0xf9, 0x25, 0x5a, 0xe8, 0xc8, 0xe1, 0x9e, 0x58, 0x11, 0x01, 0x78, 0xac, 0xfc, 0x93, 0xd9, 0xe1, 0x0b, 0x73, 0x0c, 0x74, 0x0d, 0x75, 0x9e, 0x5e, 0x01, 0x04, 0x18, 0x36, 0x0d, 0x8a, 0x9e, 0x5e, 0x03, 0x01, 0x9e, 0x5f, 0x04, 0x01, 0xdf, 0x48, 0x03, 0x8a, 0x7b, 0x06, 0xfe, 0x48, 0x04, 0x96, 0x9e, 0x5c, 0xc4, 0x04, 0x9e, 0x5d, 0xc4, 0x04, 0x11, 0x76, 0x0e, 0x77, 0xfc, 0x48, 0x03, 0x82, 0xc3, 0x16, 0x11, 0x7e, 0x04, 0x9e, 0xfd, 0x48, 0x02, 0x80, 0xc3, 0x06, 0x11, 0x7e, 0x0c, 0x74, 0x0d, 0x75, 0x9e, 0x5e, 0x01, 0x04, 0x82, 0x19, 
+0xc0, 0x25, 0x18, 0x36, 0x0d, 0x8a, 0x9e, 0x5e, 0x03, 0x01, 0x9e, 0x5f, 0x05, 0x01, 0xdf, 0x48, 0x03, 0x8a, 0x7b, 0x06, 0xfe, 0x48, 0x04, 0x96, 0x9e, 0x5c, 0xc4, 0x04, 0x9e, 0x5d, 0xc4, 0x04, 0x12, 0x76, 0x0f, 0x77, 0xfc, 0x48, 0x03, 0x82, 0xc3, 0x16, 0x12, 0x7e, 0x04, 0x9e, 0xfd, 0x48, 0x02, 0x80, 0xc3, 0x06, 0x12, 0x7e, 0x0c, 0x74, 0x0d, 0x75, 0x9e, 0x5e, 0x01, 0x04, 0x18, 0x36, 0x0d, 0x8a, 0x9e, 0x5e, 0x03, 0x01, 0x9e, 0x5f, 0x06, 0x01, 0xdf, 0x48, 0x03, 0x8a, 0x7b, 0x06, 0xfe, 0x48, 0x04, 0x96, 0x9e, 0x5c, 0xc4, 0x04, 0x9e, 0x5d, 0xc4, 0x04, 0x13, 0x76, 0x10, 0x77, 0xfc, 0x48, 0x03, 0x82, 0xc3, 0x16, 0x13, 0x7e, 0x04, 0x9e, 0xfd, 0x48, 0x02, 0x80, 0xc3, 0x06, 0x13, 0x7e, 0x68, 0x5b, 0x0b, 0x7b, 0x15, 0x60, 0x11, 0x61, 0x0e, 0x62, 0x2f, 0x38, 0x10, 0x26, 0x05, 0x5b, 0x1a, 0x8f, 
+0x00, 0x26, 0x73, 0xac, 0x0d, 0x92, 0xfe, 0x5b, 0xff, 0x23, 0x60, 0x3c, 0x80, 0x01, 0x60, 0x3d, 0xb7, 0x01, 0x23, 0x5e, 0x43, 0x5f, 0xdb, 0x5c, 0xfb, 0x5d, 0x60, 0x3d, 0xee, 0x01, 0xfb, 0x5d, 0x19, 0x01, 0x19, 0x02, 0x15, 0x70, 0x78, 0xac, 0x72, 0x91, 0xa1, 0xaa, 0x9e, 0x58, 0x38, 0x05, 0x18, 0x30, 0x35, 0x8a, 0x62, 0xe6, 0xb7, 0x61, 0x01, 0x69, 0x9e, 0x5b, 0x0b, 0x04, 0x9e, 0x5c, 0x02, 0x04, 0x64, 0x03, 0x9e, 0x5c, 0x01, 0x04, 0x64, 0x03, 0x9e, 0x5a, 0x39, 0x05, 0x9e, 0x5e, 0x3a, 0x05, 0x9e, 0x5f, 0x03, 0x01, 0x9e, 0x58, 0x01, 0x04, 0x18, 0x30, 0x01, 0x88, 0xff, 0x67, 0x00, 0x60, 0x67, 0x38, 0x3c, 0x26, 0x1f, 0x48, 0x07, 0x8a, 0x23, 0x5d, 0xba, 0x48, 0x01, 0x98, 0x15, 0x9e, 0xbe, 0x48, 0x01, 0x96, 0x12, 0x9e, 0x19, 0x00, 0x19, 0x01, 0xb7, 0x61, 0x01, 0x69, 0x7b, 0x01, 0xb1, 0x1b, 
+0x40, 0x26, 0x9e, 0x5b, 0x0b, 0x04, 0x67, 0x38, 0x4b, 0x26, 0x25, 0x5d, 0xba, 0x48, 0x01, 0x98, 0x05, 0x9e, 0xbe, 0x48, 0x01, 0x96, 0x02, 0x9e, 0x1a, 0x38, 0x01, 0x9e, 0xa1, 0xa8, 0x31, 0xb0, 0x04, 0x38, 0x00, 0x60, 0x05, 0x38, 0x43, 0x00, 0x9e, 0x59, 0x9d, 0x04, 0x1b, 0x21, 0x7f, 0x38, 0x26, 0x59, 0x01, 0x28, 0xb1, 0xb0, 0x00, 0x60, 0xc0, 0xb0, 0x41, 0xab, 0x94, 0xab, 0x9c, 0xab, 0xa4, 0xab, 0xe4, 0xaa, 0x3a, 0x38, 0x00, 0x60, 0x0a, 0x78, 0xcf, 0xea, 0x2b, 0xe8, 0xad, 0xe8, 0x5a, 0xe8, 0xc8, 0xe1, 0x9e, 0x58, 0x11, 0x01, 0x78, 0xac, 0xfc, 0x93, 0xd9, 0xe1, 0x15, 0x60, 0x0e, 0x61, 0x2f, 0x38, 0x7b, 0x26, 0x05, 0x5a, 0x72, 0xac, 0x06, 0x92, 0xfe, 0x5a, 0xff, 0x22, 0x40, 0x3a, 0xb7, 0x01, 0x23, 0x5b, 0x7b, 0x5a, 0x19, 0x01, 0x15, 0x70, 0x78, 0xac, 0xe5, 0x91, 0x3a, 0x38, 0x8a, 0xb1, 
+0x80, 0x26, 0x11, 0xc4, 0x73, 0xe8, 0x00, 0x60, 0x70, 0x68, 0x00, 0x61, 0x19, 0x10, 0x19, 0x48, 0xfd, 0x89, 0x73, 0xe8, 0x9e, 0x5f, 0x91, 0x04, 0x0c, 0x7f, 0x9e, 0x5f, 0x91, 0x04, 0x0d, 0x7f, 0x00, 0x60, 0x0a, 0x78, 0xcf, 0xea, 0x9e, 0x59, 0x15, 0x00, 0x9e, 0x5a, 0x16, 0x00, 0x9e, 0x5b, 0x17, 0x00, 0x9e, 0x5d, 0xe2, 0x00, 0x19, 0x15, 0x6f, 0x64, 0x03, 0x6c, 0x00, 0x67, 0xa7, 0x38, 0xdd, 0x26, 0x85, 0x5e, 0x07, 0xac, 0x12, 0x92, 0x24, 0x39, 0x00, 0x3f, 0xff, 0x38, 0x28, 0x59, 0xd9, 0x48, 0x06, 0x8a, 0x9e, 0x59, 0x15, 0x00, 0x71, 0xa8, 0xbe, 0x59, 0x15, 0x00, 0x06, 0x9e, 0x9e, 0x59, 0x15, 0x00, 0x71, 0xaa, 0xbe, 0x59, 0x15, 0x00, 0x07, 0xa8, 0x0f, 0xac, 0x12, 0x92, 0x44, 0x3a, 0x00, 0x3f, 0xff, 0x38, 0x48, 0x5a, 0xda, 0x48, 0x06, 0x8a, 0x9e, 0x5a, 0x16, 0x00, 0x72, 0xa8, 0x86, 0x05, 
+0xc0, 0x26, 0xbe, 0x5a, 0x16, 0x00, 0x06, 0x9e, 0x9e, 0x5a, 0x16, 0x00, 0x72, 0xaa, 0xbe, 0x5a, 0x16, 0x00, 0x0f, 0xa8, 0x17, 0xac, 0x12, 0x92, 0x64, 0x3b, 0x00, 0x3f, 0xff, 0x38, 0x68, 0x5b, 0xdb, 0x48, 0x06, 0x8a, 0x9e, 0x5b, 0x17, 0x00, 0x73, 0xa8, 0xbe, 0x5b, 0x17, 0x00, 0x06, 0x9e, 0x9e, 0x5b, 0x17, 0x00, 0x73, 0xaa, 0xbe, 0x5b, 0x17, 0x00, 0x17, 0xa8, 0x1a, 0x38, 0x00, 0x60, 0xf8, 0x48, 0x53, 0x8a, 0x2b, 0xe8, 0x00, 0x60, 0x20, 0x68, 0x0b, 0x78, 0x00, 0x60, 0x40, 0x68, 0x11, 0x78, 0x00, 0x60, 0x40, 0x68, 0x12, 0x78, 0x00, 0x60, 0x40, 0x68, 0x13, 0x78, 0xaf, 0x39, 0x1d, 0x27, 0x5a, 0xe8, 0xd9, 0xe1, 0x0b, 0x73, 0x0c, 0x74, 0x0d, 0x75, 0x9e, 0x58, 0x15, 0x00, 0x9e, 0x59, 0x16, 0x00, 0x9e, 0x5a, 0x17, 0x00, 0x11, 0x76, 0x0e, 0x77, 0xfc, 0x48, 0x03, 0x82, 0xc3, 0x16, 0x60, 0x07, 
+0x00, 0x27, 0x11, 0x7e, 0x04, 0x9e, 0xfd, 0x48, 0x02, 0x80, 0xc3, 0x06, 0x11, 0x7e, 0x12, 0x76, 0x0f, 0x77, 0xfc, 0x48, 0x03, 0x82, 0xc3, 0x16, 0x12, 0x7e, 0x04, 0x9e, 0xfd, 0x48, 0x02, 0x80, 0xc3, 0x06, 0x12, 0x7e, 0x13, 0x76, 0x10, 0x77, 0xfc, 0x48, 0x03, 0x82, 0xc3, 0x16, 0x13, 0x7e, 0x04, 0x9e, 0xfd, 0x48, 0x02, 0x80, 0xc3, 0x06, 0x13, 0x7e, 0x68, 0x5b, 0x0b, 0x7b, 0x15, 0x60, 0x11, 0x61, 0x0e, 0x62, 0x2f, 0x38, 0x33, 0x27, 0x05, 0x5b, 0x73, 0xac, 0x0b, 0x92, 0xfe, 0x5b, 0xff, 0x23, 0x60, 0x3c, 0x80, 0x01, 0x60, 0x3d, 0xb7, 0x01, 0x23, 0x5e, 0x43, 0x5f, 0xc8, 0x3c, 0x00, 0x00, 0xfb, 0x5d, 0x19, 0x01, 0x19, 0x02, 0x1a, 0x38, 0x15, 0x70, 0x78, 0xac, 0x5a, 0x91, 0x31, 0xb0, 0x04, 0x38, 0x00, 0x60, 0x05, 0x38, 0x43, 0x00, 0x9e, 0x59, 0x9d, 0x04, 0x1b, 0x21, 0x7f, 0x38, 0xb4, 0x6b, 
+0x40, 0x27, 0x26, 0x59, 0x01, 0x28, 0xb1, 0xb0, 0x00, 0x60, 0xc0, 0xb0, 0x41, 0xab, 0x94, 0xab, 0x9c, 0xab, 0xa4, 0xab, 0x3a, 0x38, 0xcc, 0xaa, 0x41, 0xa9, 0x73, 0xe8, 0x00, 0x60, 0x0a, 0x78, 0xc4, 0xaa, 0x08, 0x70, 0x3a, 0x10, 0x01, 0x80, 0xc4, 0xa8, 0xc4, 0xac, 0x0a, 0x90, 0x09, 0x70, 0x19, 0x00, 0x09, 0x78, 0x12, 0x38, 0xf6, 0x00, 0x03, 0x80, 0x00, 0x60, 0x09, 0x78, 0x01, 0x9e, 0xc4, 0xaa, 0x1d, 0xe9, 0x00, 0x64, 0x9e, 0x5d, 0xfd, 0x00, 0x9d, 0x48, 0x14, 0x8a, 0x6f, 0x67, 0x03, 0x6f, 0x9e, 0x5a, 0xde, 0x04, 0x47, 0x38, 0x70, 0x27, 0xe3, 0x5b, 0x9e, 0x59, 0xcb, 0x04, 0x79, 0x40, 0x1d, 0x5f, 0x8a, 0x67, 0x03, 0x6f, 0x47, 0x38, 0x79, 0x27, 0xe3, 0x5b, 0x9e, 0x59, 0xcb, 0x04, 0x79, 0x40, 0x1d, 0x5f, 0xe5, 0xeb, 0x0a, 0xee, 0x17, 0xe8, 0xed, 0xa8, 0xe4, 0xa8, 0xcc, 0xac, 0x10, 0x76, 
+0x80, 0x27, 0x01, 0x90, 0xe4, 0xaa, 0x3a, 0x38, 0xa6, 0xe8, 0xc4, 0xac, 0x35, 0x90, 0x85, 0xac, 0x33, 0x92, 0x8d, 0xac, 0x31, 0x92, 0x95, 0xac, 0x2f, 0x92, 0x9d, 0xac, 0x2d, 0x92, 0xec, 0xac, 0x2b, 0x92, 0xdc, 0xe7, 0x02, 0x60, 0x10, 0x38, 0x6c, 0x00, 0x12, 0x38, 0x4b, 0x00, 0x1b, 0x80, 0x9e, 0x58, 0x6c, 0x00, 0x1a, 0x10, 0x12, 0x38, 0x4b, 0x00, 0x1e, 0x80, 0x9e, 0x59, 0xb6, 0x04, 0x00, 0x62, 0x3a, 0x48, 0x02, 0x88, 0x4c, 0x70, 0x06, 0x9e, 0x1a, 0x00, 0x08, 0x58, 0x01, 0x61, 0x19, 0x48, 0x01, 0x94, 0x01, 0x60, 0x9e, 0x59, 0x6c, 0x00, 0x20, 0x11, 0x01, 0x82, 0x00, 0x61, 0xbe, 0x59, 0x6c, 0x00, 0x09, 0x9e, 0x9e, 0x58, 0x6c, 0x00, 0x10, 0x38, 0x4c, 0x00, 0x02, 0x88, 0x12, 0x38, 0x4c, 0x00, 0xbe, 0x58, 0x6c, 0x00, 0x9e, 0x58, 0x4b, 0x00, 0x9e, 0x59, 0x6c, 0x00, 0x18, 0x01, 0x43, 0x8e, 
+0xc0, 0x27, 0x1a, 0x38, 0x01, 0x10, 0x01, 0x82, 0x00, 0x60, 0x9e, 0x5a, 0xd1, 0x00, 0x55, 0x3a, 0xb1, 0x00, 0x18, 0x32, 0x03, 0x8a, 0x00, 0x62, 0xbe, 0x5a, 0x08, 0x00, 0xbe, 0x58, 0x6d, 0x00, 0x12, 0x39, 0xc0, 0x03, 0x02, 0x82, 0xbe, 0x58, 0xc0, 0x03, 0x12, 0x39, 0xc1, 0x03, 0x02, 0x80, 0xbe, 0x58, 0xc1, 0x03, 0xe1, 0xe8, 0xe8, 0xe8, 0x3a, 0x38, 0x9e, 0x58, 0x95, 0x04, 0xbe, 0x58, 0x4c, 0x00, 0x9e, 0x58, 0x94, 0x04, 0xbe, 0x58, 0xf6, 0x00, 0x9e, 0x58, 0x96, 0x04, 0x18, 0x10, 0x2e, 0x8a, 0xd8, 0xac, 0x2c, 0x92, 0x9e, 0x58, 0x2a, 0x05, 0x18, 0x10, 0x28, 0x88, 0x9e, 0x58, 0x4b, 0x00, 0x9e, 0x59, 0x6c, 0x00, 0x01, 0x12, 0x19, 0x48, 0x01, 0x98, 0x20, 0x12, 0x9e, 0x58, 0x99, 0x04, 0x58, 0x48, 0x02, 0x9a, 0x9e, 0x5a, 0x99, 0x04, 0x9e, 0x58, 0x98, 0x04, 0x58, 0x48, 0x02, 0x94, 0x35, 0x22, 
+0x00, 0x28, 0x9e, 0x5a, 0x98, 0x04, 0x52, 0x38, 0x98, 0x04, 0x9e, 0x59, 0x97, 0x04, 0x32, 0x39, 0x96, 0x04, 0x19, 0x40, 0x9e, 0x5a, 0x99, 0x04, 0x52, 0x3a, 0x98, 0x04, 0x3c, 0x5a, 0x10, 0x38, 0x96, 0x04, 0xbe, 0x58, 0x4c, 0x00, 0x9e, 0x58, 0x9a, 0x04, 0xbe, 0x58, 0xf6, 0x00, 0x3a, 0x38, 0x41, 0xa9, 0x31, 0xb0, 0x04, 0x38, 0x00, 0x60, 0x05, 0x38, 0x43, 0x00, 0x9e, 0x59, 0x9d, 0x04, 0x1b, 0x21, 0x7f, 0x38, 0x26, 0x59, 0x01, 0x28, 0xb1, 0xb0, 0x00, 0x60, 0xc0, 0xb0, 0x41, 0xab, 0x94, 0xab, 0x9c, 0xab, 0xa4, 0xab, 0x3a, 0x38, 0x9e, 0x58, 0x69, 0x00, 0xc1, 0xb0, 0x15, 0x70, 0xfe, 0x58, 0xff, 0x20, 0x00, 0x38, 0x00, 0x3d, 0x09, 0x59, 0x21, 0x58, 0xfe, 0x58, 0x24, 0x39, 0xff, 0x00, 0x04, 0x38, 0xff, 0x00, 0x18, 0x10, 0x08, 0x8a, 0x20, 0x62, 0x80, 0x6a, 0x08, 0x58, 0x19, 0x10, 0xec, 0xdc, 
+0x40, 0x28, 0xff, 0x38, 0x06, 0x58, 0x40, 0x28, 0xc1, 0xb0, 0x16, 0x70, 0xfe, 0x58, 0xff, 0x20, 0x00, 0x38, 0x00, 0x3d, 0x09, 0x5a, 0x17, 0x70, 0xfe, 0x58, 0xff, 0x20, 0x00, 0x38, 0x00, 0x3d, 0x09, 0x5b, 0x9f, 0x38, 0x46, 0x5a, 0x41, 0x2b, 0xbf, 0x38, 0x66, 0x5b, 0x45, 0xb0, 0xff, 0x20, 0x03, 0x28, 0xc5, 0xb0, 0x3a, 0x38, 0x11, 0x70, 0x04, 0x39, 0xff, 0x07, 0x5f, 0x39, 0x08, 0x58, 0x3f, 0x20, 0xda, 0x62, 0x31, 0x6a, 0x40, 0x00, 0x09, 0x58, 0x20, 0x28, 0xc3, 0xb0, 0x12, 0x70, 0x04, 0x39, 0xff, 0x07, 0x5f, 0x39, 0x08, 0x58, 0x3f, 0x20, 0xda, 0x62, 0x31, 0x6a, 0x40, 0x00, 0x09, 0x58, 0x20, 0x28, 0xc4, 0xb0, 0x3a, 0x38, 0x41, 0xa9, 0x31, 0xb0, 0x04, 0x38, 0x00, 0x60, 0x15, 0x38, 0x67, 0x00, 0x9e, 0x59, 0x9d, 0x04, 0x1b, 0x21, 0x7f, 0x38, 0x26, 0x59, 0x01, 0x28, 0xb1, 0xb0, 0xcd, 0x47, 
+0x80, 0x28, 0x9e, 0x58, 0x68, 0x00, 0xc0, 0xb0, 0x28, 0x60, 0xc0, 0xb0, 0x9e, 0x58, 0x69, 0x00, 0xc1, 0xb0, 0x9e, 0x58, 0x6b, 0x00, 0xc5, 0xb0, 0xcc, 0x60, 0x0c, 0x68, 0xc6, 0xb0, 0x9e, 0x58, 0x6a, 0x00, 0xc2, 0xb0, 0x9e, 0x58, 0xb1, 0x04, 0x00, 0x61, 0x19, 0x48, 0x06, 0x8a, 0xff, 0x60, 0xff, 0x68, 0x07, 0x38, 0x9b, 0x28, 0x1a, 0x38, 0x1a, 0x38, 0x2f, 0x39, 0x9f, 0x28, 0x1a, 0x38, 0x1a, 0x38, 0x41, 0xab, 0x94, 0xa9, 0x41, 0xa9, 0x00, 0x60, 0xc6, 0xb0, 0x3a, 0x38, 0x18, 0x70, 0x00, 0x38, 0xee, 0x01, 0x03, 0x59, 0xbe, 0x59, 0x6c, 0x00, 0x3a, 0x38, 0x15, 0x70, 0xfe, 0x58, 0xff, 0x20, 0x00, 0x38, 0x80, 0x01, 0x03, 0x59, 0x11, 0x79, 0x16, 0x70, 0xfe, 0x58, 0xff, 0x20, 0x00, 0x38, 0x80, 0x01, 0x03, 0x59, 0x12, 0x79, 0x17, 0x70, 0xfe, 0x58, 0xff, 0x20, 0x00, 0x38, 0x80, 0x01, 0xd5, 0xc2, 
+0xc0, 0x28, 0x03, 0x59, 0x13, 0x79, 0x3a, 0x38, 0x18, 0x70, 0x00, 0x38, 0xb7, 0x01, 0x03, 0x59, 0xbe, 0x59, 0x4b, 0x00, 0x3a, 0x38, 0x18, 0x70, 0x00, 0x38, 0xb7, 0x01, 0x9e, 0x5f, 0x4b, 0x00, 0x9e, 0x5b, 0x32, 0x04, 0x18, 0x33, 0x01, 0x88, 0x0b, 0x9e, 0x00, 0x62, 0x9e, 0x5e, 0x4e, 0x00, 0xda, 0x48, 0x06, 0x8a, 0x03, 0x5a, 0x19, 0x16, 0xc7, 0x38, 0xde, 0x28, 0xe2, 0x07, 0xe8, 0x5f, 0xfb, 0x58, 0x3a, 0x38, 0x18, 0x70, 0x00, 0x38, 0xee, 0x01, 0x9e, 0x59, 0x6c, 0x00, 0x3b, 0x58, 0x3a, 0x38, 0x18, 0x70, 0x00, 0x38, 0x93, 0x02, 0x9e, 0x59, 0xf9, 0x00, 0x19, 0x31, 0x13, 0x88, 0x9e, 0x5f, 0xc3, 0x04, 0x9e, 0x59, 0x0b, 0x04, 0x20, 0x3e, 0x93, 0x02, 0x06, 0x31, 0x03, 0x8a, 0x7b, 0x06, 0x06, 0x31, 0x08, 0x88, 0x9e, 0x58, 0x6d, 0x00, 0xe8, 0x61, 0x03, 0x69, 0x11, 0x40, 0x3c, 0x5f, 0xe2, 0x7c, 
+0x00, 0x29, 0x1b, 0x5e, 0x3a, 0x38, 0x9e, 0x59, 0x6d, 0x00, 0x3b, 0x58, 0x3a, 0x38, 0x18, 0x70, 0x00, 0x38, 0x80, 0x01, 0x14, 0x71, 0x3b, 0x58, 0x3a, 0x38, 0x00, 0x62, 0x36, 0x67, 0xb7, 0x63, 0x01, 0x6b, 0x80, 0x64, 0x09, 0x6c, 0x90, 0x3c, 0x17, 0x01, 0x63, 0x58, 0x1b, 0x5c, 0x19, 0x02, 0x19, 0x03, 0x90, 0x3c, 0xd3, 0x04, 0x5f, 0x48, 0xf8, 0x81, 0x3a, 0x38, 0x00, 0x60, 0xbe, 0x58, 0x0d, 0x01, 0xbe, 0x58, 0x11, 0x01, 0xbe, 0x58, 0x12, 0x01, 0xbe, 0x58, 0xc1, 0x03, 0xff, 0x60, 0xff, 0x68, 0xbe, 0x58, 0xc0, 0x03, 0x9e, 0x58, 0x11, 0x01, 0x78, 0xac, 0xfc, 0x93, 0xcf, 0xea, 0x37, 0xac, 0x04, 0x90, 0x9e, 0x58, 0xda, 0x00, 0x18, 0x30, 0x3a, 0x88, 0x2b, 0xe8, 0xad, 0xe8, 0x5a, 0xe8, 0xc8, 0xe1, 0x9e, 0x58, 0x11, 0x01, 0x02, 0x38, 0x00, 0x80, 0xec, 0x8b, 0x04, 0x9e, 0x9e, 0x58, 0x4d, 0xeb, 
+0x40, 0x29, 0x11, 0x01, 0x78, 0xac, 0xfc, 0x93, 0xd9, 0xe1, 0xe3, 0xac, 0x05, 0x90, 0x9e, 0x58, 0x11, 0x01, 0x78, 0xac, 0xfc, 0x93, 0x28, 0x9e, 0x0e, 0x60, 0xbe, 0x58, 0xc3, 0x03, 0x02, 0x61, 0x9e, 0x58, 0x12, 0x01, 0x19, 0x10, 0x20, 0x40, 0x00, 0x3d, 0x80, 0x3d, 0x2f, 0x38, 0x68, 0x29, 0xab, 0x5b, 0x73, 0xac, 0x09, 0x92, 0xfe, 0x5b, 0xff, 0x23, 0x18, 0x7b, 0x9e, 0x58, 0xc3, 0x03, 0x03, 0x5b, 0xbe, 0x5b, 0x4b, 0x00, 0xca, 0xe8, 0x9e, 0x58, 0xc3, 0x03, 0x19, 0x00, 0xbe, 0x58, 0xc3, 0x03, 0x1a, 0x38, 0x9e, 0x58, 0x11, 0x01, 0x9e, 0x59, 0x12, 0x01, 0x19, 0x48, 0x04, 0x8a, 0x15, 0x70, 0x78, 0xac, 0xb8, 0x91, 0xcc, 0x9f, 0x00, 0x60, 0xbe, 0x58, 0x0d, 0x01, 0xbe, 0x58, 0x11, 0x01, 0xbe, 0x58, 0x12, 0x01, 0xb4, 0xea, 0x9e, 0x59, 0xd3, 0x04, 0x02, 0x60, 0x38, 0x48, 0x1c, 0x80, 0x5c, 0x9b, 
+0x80, 0x29, 0x08, 0x60, 0x19, 0x48, 0x19, 0x80, 0x00, 0x60, 0x0a, 0x78, 0xe3, 0xac, 0x01, 0x92, 0x0c, 0xe9, 0x9e, 0x58, 0x17, 0x01, 0xe3, 0xac, 0x03, 0x92, 0x19, 0x00, 0xbe, 0x58, 0x17, 0x01, 0x9e, 0x59, 0xd3, 0x04, 0x19, 0x48, 0x04, 0x80, 0x00, 0x60, 0xbe, 0x58, 0x17, 0x01, 0x04, 0x9e, 0x9e, 0x58, 0xd4, 0x04, 0x78, 0xac, 0x8f, 0x93, 0xf3, 0xe2, 0x00, 0x60, 0xbe, 0x58, 0x18, 0x00, 0xaf, 0x3e, 0xab, 0x29, 0xc3, 0xe8, 0x4b, 0x71, 0x18, 0x01, 0x01, 0x8a, 0x83, 0xe7, 0x9e, 0x58, 0x18, 0x00, 0x19, 0x00, 0xbe, 0x58, 0x18, 0x00, 0x1a, 0x38, 0x9e, 0x58, 0xda, 0x00, 0x19, 0x00, 0x9e, 0x59, 0x57, 0x04, 0x19, 0x48, 0x01, 0x96, 0x00, 0x60, 0xbe, 0x58, 0xda, 0x00, 0x9e, 0x58, 0x7d, 0x04, 0x18, 0x30, 0x02, 0x8a, 0xf7, 0xea, 0x01, 0x9e, 0xcb, 0xeb, 0x25, 0x61, 0x02, 0x69, 0x93, 0x62, 0x93, 0x22, 
+0xc0, 0x29, 0x02, 0x6a, 0xca, 0x63, 0x02, 0x6b, 0x6f, 0x67, 0x03, 0x6f, 0xaf, 0x3e, 0xcf, 0x29, 0x45, 0x5c, 0x65, 0x5d, 0x9d, 0x5f, 0x85, 0x14, 0x00, 0x65, 0x9d, 0x48, 0x01, 0x98, 0x00, 0x64, 0x9d, 0x59, 0x97, 0xee, 0x53, 0xea, 0xdc, 0xe9, 0x9e, 0x5a, 0x08, 0x00, 0x19, 0x02, 0x46, 0x38, 0x00, 0x00, 0x02, 0x8a, 0xbe, 0x5a, 0x08, 0x00, 0x3a, 0x38, 0x9e, 0x59, 0x44, 0x05, 0x18, 0x11, 0x0c, 0x8a, 0x9e, 0x58, 0x40, 0x01, 0x19, 0x48, 0x08, 0x96, 0xe9, 0xac, 0x06, 0x92, 0x9e, 0x58, 0xb1, 0x00, 0x19, 0x10, 0x02, 0x88, 0xfb, 0xe9, 0x3a, 0xea, 0x9e, 0x58, 0xab, 0x04, 0x08, 0x58, 0x08, 0x58, 0x07, 0x63, 0x1b, 0x48, 0x07, 0x88, 0xb3, 0x61, 0x02, 0x69, 0x30, 0x39, 0x0a, 0x04, 0x9e, 0x5a, 0xc0, 0x03, 0x5d, 0x59, 0x3a, 0x38, 0x25, 0x60, 0x02, 0x68, 0x9e, 0x59, 0x0b, 0x04, 0x00, 0x62, 0x1b, 0x3e, 
+0x00, 0x2a, 0x25, 0x63, 0x02, 0x6b, 0x27, 0x38, 0x09, 0x2a, 0x03, 0x59, 0x3a, 0x48, 0x02, 0x9a, 0x21, 0x5a, 0x01, 0x5b, 0x19, 0x00, 0x40, 0x60, 0x02, 0x68, 0x9e, 0x59, 0x0b, 0x04, 0x27, 0x38, 0x15, 0x2a, 0x03, 0x59, 0x3a, 0x48, 0x02, 0x9a, 0x21, 0x5a, 0x01, 0x5b, 0x19, 0x00, 0x40, 0x60, 0x02, 0x68, 0x78, 0x48, 0x02, 0x94, 0x25, 0x60, 0x02, 0x68, 0x00, 0x61, 0x72, 0x3c, 0x45, 0x05, 0x98, 0x48, 0x01, 0x96, 0x83, 0x59, 0x10, 0x38, 0x0b, 0x04, 0x00, 0x62, 0x70, 0x3c, 0x45, 0x05, 0x98, 0x48, 0x01, 0x98, 0x83, 0x5a, 0xbe, 0x59, 0xc0, 0x03, 0x3a, 0x48, 0x02, 0x94, 0xbe, 0x5a, 0xc0, 0x03, 0x9e, 0x58, 0x46, 0x05, 0x9e, 0x59, 0xc0, 0x03, 0x19, 0x40, 0x64, 0x62, 0x3c, 0x5a, 0xbe, 0x58, 0xc0, 0x03, 0x3a, 0x38, 0x25, 0x60, 0x02, 0x68, 0x9e, 0x59, 0x0b, 0x04, 0x27, 0x38, 0x45, 0x2a, 0x3b, 0x93, 
+0x40, 0x2a, 0x03, 0x59, 0x32, 0x39, 0xc0, 0x03, 0x01, 0x94, 0x00, 0x61, 0x3d, 0x58, 0x40, 0x60, 0x02, 0x68, 0x9e, 0x59, 0x0b, 0x04, 0x27, 0x38, 0x51, 0x2a, 0x03, 0x59, 0x32, 0x39, 0xc0, 0x03, 0x01, 0x94, 0x00, 0x61, 0x3d, 0x58, 0x3a, 0x38, 0x9e, 0x58, 0x1f, 0x05, 0x18, 0x30, 0x41, 0x8a, 0xe9, 0xac, 0x3f, 0x92, 0xe8, 0xac, 0x1f, 0x92, 0x9e, 0x58, 0xc0, 0x00, 0x30, 0xac, 0x10, 0x90, 0x9e, 0x58, 0x40, 0x01, 0x9e, 0x59, 0x1f, 0x05, 0x19, 0x48, 0x0a, 0x96, 0x9e, 0x58, 0x2c, 0x01, 0x19, 0x00, 0x9e, 0x59, 0x22, 0x05, 0x19, 0x48, 0x0b, 0x9a, 0x21, 0x58, 0xe8, 0xa8, 0x08, 0x9e, 0x9e, 0x58, 0x2c, 0x01, 0x19, 0x10, 0x00, 0x61, 0x19, 0x48, 0x02, 0x94, 0x21, 0x58, 0x00, 0x9e, 0xbe, 0x58, 0x2c, 0x01, 0x1e, 0x9e, 0x9e, 0x58, 0x40, 0x01, 0x9e, 0x59, 0x23, 0x05, 0x19, 0x48, 0x0d, 0x98, 0xa8, 0xdb, 
+0x80, 0x2a, 0x9e, 0x58, 0x2e, 0x01, 0x19, 0x00, 0x9e, 0x59, 0x24, 0x05, 0x19, 0x48, 0x0e, 0x9a, 0x00, 0x60, 0xbe, 0x58, 0x2c, 0x01, 0xe8, 0xaa, 0x99, 0xa8, 0x08, 0x9e, 0x9e, 0x58, 0x2e, 0x01, 0x19, 0x10, 0x00, 0x61, 0x19, 0x48, 0x02, 0x94, 0x21, 0x58, 0x00, 0x9e, 0xbe, 0x58, 0x2e, 0x01, 0x00, 0x9e, 0x9e, 0x58, 0xab, 0x04, 0x08, 0x58, 0x08, 0x58, 0x06, 0x63, 0x1b, 0x48, 0x14, 0x88, 0xb3, 0x61, 0x02, 0x69, 0x30, 0x39, 0x0a, 0x04, 0x9e, 0x5a, 0x40, 0x01, 0x5d, 0x59, 0x9e, 0x5a, 0xc1, 0x03, 0x5d, 0x59, 0x9e, 0x5a, 0xc9, 0x03, 0x5d, 0x59, 0x00, 0x62, 0x9e, 0x58, 0xc0, 0x00, 0x30, 0xac, 0x01, 0x90, 0x01, 0x62, 0x5d, 0x59, 0x3a, 0x38, 0x9e, 0x58, 0x01, 0x04, 0x18, 0x10, 0x16, 0x8a, 0x00, 0x60, 0x00, 0x61, 0x00, 0x64, 0xd2, 0x62, 0x01, 0x6a, 0x50, 0x3a, 0x0a, 0x04, 0x45, 0x5b, 0x6c, 0xe0, 
+0xc0, 0x2a, 0x18, 0x03, 0x03, 0x8a, 0x19, 0x04, 0x03, 0x00, 0xfa, 0x9f, 0xb7, 0x62, 0x01, 0x6a, 0x50, 0x3a, 0x09, 0x04, 0x43, 0x5b, 0x19, 0x04, 0x03, 0x00, 0x1c, 0x5c, 0x1b, 0x5a, 0x3a, 0x38, 0x0a, 0x70, 0x00, 0x38, 0x80, 0x3d, 0x15, 0x63, 0xff, 0x67, 0xff, 0x6f, 0x2f, 0x38, 0xd9, 0x2a, 0x0b, 0x59, 0x3d, 0x5b, 0xe1, 0x27, 0x02, 0x38, 0x80, 0x3d, 0x0a, 0x78, 0x15, 0x71, 0x16, 0x72, 0x17, 0x73, 0xeb, 0xea, 0x15, 0x60, 0x04, 0x61, 0x01, 0x69, 0x2f, 0x38, 0xe9, 0x2a, 0x05, 0x5a, 0xfe, 0x5a, 0xff, 0x22, 0x5d, 0x59, 0x3a, 0x38, 0xff, 0x60, 0xff, 0x68, 0xca, 0xb0, 0xcb, 0xb0, 0x24, 0x38, 0x3f, 0x00, 0x44, 0x3c, 0x3f, 0x00, 0xfe, 0x5c, 0x04, 0x28, 0xc9, 0xb0, 0x3a, 0x38, 0xc1, 0xeb, 0x00, 0xac, 0x2e, 0x92, 0x76, 0xeb, 0x06, 0x39, 0x00, 0x00, 0x2e, 0x8a, 0x06, 0x39, 0x01, 0x00, 0x42, 0x5a, 
+0x00, 0x2b, 0x27, 0x8a, 0xc8, 0xac, 0x09, 0x92, 0x93, 0x60, 0x02, 0x68, 0x01, 0x61, 0x03, 0x69, 0x00, 0x66, 0x01, 0x67, 0x4e, 0xeb, 0xc8, 0xa8, 0x20, 0x9e, 0x93, 0x60, 0x02, 0x68, 0xd5, 0xeb, 0x9e, 0x59, 0x81, 0x04, 0x19, 0x48, 0x15, 0x96, 0xb4, 0xeb, 0x9e, 0x59, 0x82, 0x04, 0x19, 0x48, 0x10, 0x98, 0x9e, 0x58, 0xe1, 0x00, 0x19, 0x00, 0xbe, 0x58, 0xe1, 0x00, 0x9e, 0x59, 0x83, 0x04, 0x19, 0x48, 0x0b, 0x96, 0x01, 0x60, 0x03, 0x68, 0xca, 0x61, 0x02, 0x69, 0x00, 0x66, 0x02, 0x67, 0x4e, 0xeb, 0x00, 0x60, 0xbe, 0x58, 0xe1, 0x00, 0xc8, 0xaa, 0x9e, 0x58, 0x01, 0x04, 0x18, 0x30, 0x13, 0x8a, 0x80, 0x60, 0x01, 0x68, 0x10, 0x38, 0x03, 0x01, 0x03, 0x58, 0xbc, 0x61, 0x7f, 0x69, 0x19, 0x48, 0x0a, 0x82, 0x93, 0x60, 0x02, 0x68, 0x10, 0x38, 0x03, 0x01, 0x03, 0x58, 0x9e, 0x59, 0x84, 0x04, 0x0b, 0xfd, 
+0x40, 0x2b, 0x19, 0x48, 0x01, 0x98, 0xcb, 0xeb, 0xca, 0x60, 0x02, 0x68, 0xd5, 0xeb, 0x9e, 0x59, 0x85, 0x04, 0x19, 0x48, 0x02, 0x96, 0x95, 0xa8, 0x01, 0x9e, 0x95, 0xaa, 0x3a, 0x38, 0x9e, 0x5a, 0x0b, 0x04, 0x47, 0x38, 0x59, 0x2b, 0x1b, 0x64, 0x80, 0x04, 0x83, 0x5b, 0x1b, 0x64, 0x81, 0x04, 0x7b, 0x5c, 0x05, 0x5b, 0x7d, 0x59, 0x9e, 0x58, 0xab, 0x04, 0x00, 0xac, 0x17, 0x90, 0x08, 0xac, 0x03, 0x92, 0xe6, 0x38, 0x01, 0x00, 0x12, 0x8a, 0xca, 0x60, 0x02, 0x68, 0xd5, 0xeb, 0x01, 0x5e, 0x04, 0x60, 0x27, 0x78, 0x78, 0x60, 0x28, 0x78, 0xc1, 0x58, 0xfe, 0x58, 0x29, 0x78, 0xc1, 0x58, 0x2a, 0x78, 0xe1, 0x58, 0x2b, 0x78, 0xa2, 0xa8, 0x93, 0xc6, 0x60, 0xd1, 0x3a, 0x38, 0x9e, 0x58, 0xdd, 0x00, 0x9e, 0x59, 0x7e, 0x04, 0x19, 0x48, 0x25, 0x96, 0x00, 0x60, 0xbe, 0x58, 0xdd, 0x00, 0x9e, 0x58, 0xf6, 0x5b, 
+0x80, 0x2b, 0xde, 0x00, 0x9e, 0x59, 0xdf, 0x00, 0x9e, 0x5a, 0xde, 0x00, 0xbe, 0x5a, 0xdf, 0x00, 0x00, 0x62, 0xbe, 0x5a, 0xde, 0x00, 0x53, 0xdc, 0x00, 0x61, 0x9e, 0x5a, 0x7e, 0x04, 0x3c, 0x5a, 0x9e, 0x59, 0x7f, 0x04, 0x19, 0x48, 0x0a, 0x94, 0x9e, 0x58, 0xe0, 0x00, 0x19, 0x00, 0xbe, 0x58, 0xe0, 0x00, 0x9e, 0x59, 0x80, 0x04, 0x19, 0x48, 0x0f, 0x96, 0x12, 0x9e, 0x00, 0x60, 0xbe, 0x58, 0xe0, 0x00, 0x0c, 0x9e, 0x19, 0x00, 0xbe, 0x58, 0xdd, 0x00, 0x93, 0x60, 0x02, 0x68, 0xd5, 0xeb, 0x10, 0x38, 0xde, 0x00, 0xbe, 0x58, 0xde, 0x00, 0x00, 0x60, 0x06, 0x9e, 0x01, 0x60, 0x04, 0x9e, 0x00, 0x60, 0xbe, 0x58, 0xe0, 0x00, 0x02, 0x60, 0x3a, 0x38, 0x38, 0x62, 0x03, 0x6a, 0x9e, 0x59, 0x0b, 0x04, 0x00, 0x60, 0x27, 0x38, 0xbf, 0x2b, 0x45, 0x5b, 0x78, 0x48, 0x01, 0x96, 0x61, 0x58, 0x1a, 0x38, 0x42, 0xb8, 
+0xc0, 0x2b, 0x3a, 0x38, 0x9e, 0x58, 0xd1, 0x00, 0x15, 0x38, 0xb1, 0x00, 0x18, 0x30, 0x02, 0x88, 0x00, 0x60, 0x01, 0x9e, 0x01, 0x60, 0x3a, 0x38, 0xca, 0x60, 0x02, 0x68, 0x01, 0x61, 0x03, 0x69, 0x00, 0x62, 0xaf, 0x3e, 0xd3, 0x2b, 0x5d, 0x58, 0x5d, 0x59, 0x3a, 0x38, 0x9e, 0x59, 0x0b, 0x04, 0x00, 0x62, 0x27, 0x38, 0xe2, 0x2b, 0x03, 0x5c, 0x44, 0x02, 0x10, 0x38, 0x1b, 0x00, 0x05, 0x5c, 0x44, 0x02, 0x12, 0x38, 0x1b, 0x00, 0x1a, 0x38, 0x41, 0x58, 0x3a, 0x38, 0x00, 0x64, 0x00, 0x65, 0xd8, 0xac, 0x02, 0x92, 0xe9, 0xac, 0xf4, 0x90, 0x5b, 0xed, 0x00, 0x66, 0xbe, 0x5e, 0xca, 0x03, 0x6f, 0x60, 0x03, 0x68, 0x9e, 0x59, 0xca, 0x04, 0x9e, 0x5a, 0xce, 0x04, 0x47, 0x38, 0xff, 0x2b, 0x05, 0x5b, 0x68, 0x5f, 0xe8, 0x5f, 0xe8, 0x5f, 0xc7, 0x06, 0x79, 0x48, 0x01, 0x9a, 0x19, 0x05, 0x1a, 0x38, 0xd1, 0x2d, 
+0x00, 0x2c, 0xc1, 0x58, 0x00, 0x61, 0x1c, 0x5a, 0x01, 0x5e, 0xbe, 0x5e, 0xca, 0x03, 0x00, 0x66, 0x8a, 0x60, 0x03, 0x68, 0x9e, 0x59, 0xca, 0x04, 0x47, 0x38, 0x15, 0x2c, 0x05, 0x5b, 0x68, 0x5f, 0xe8, 0x5f, 0xe8, 0x5f, 0xc7, 0x06, 0x79, 0x48, 0x01, 0x9a, 0x19, 0x05, 0x1a, 0x38, 0xc1, 0x58, 0x00, 0x61, 0x1c, 0x5a, 0x9e, 0x5e, 0xca, 0x03, 0xc0, 0x06, 0xc8, 0x5e, 0x9e, 0x58, 0x00, 0x01, 0x01, 0x61, 0x19, 0x48, 0x0e, 0x8a, 0x9e, 0x58, 0xc9, 0x04, 0x02, 0x61, 0x19, 0x40, 0xb8, 0x48, 0x22, 0x9a, 0x01, 0x60, 0xbe, 0x58, 0x00, 0x01, 0xbe, 0x5e, 0x47, 0x01, 0xe9, 0xac, 0xe1, 0x92, 0x78, 0x9e, 0x9e, 0x59, 0x47, 0x01, 0x28, 0x5a, 0x48, 0x5f, 0x47, 0x02, 0xc2, 0x03, 0x3b, 0x48, 0x05, 0x98, 0xd9, 0x48, 0xd6, 0x9a, 0xbe, 0x5e, 0x47, 0x01, 0xd3, 0x9e, 0x9e, 0x58, 0x01, 0x01, 0x19, 0x00, 0x3a, 0x0b, 
+0x40, 0x2c, 0xbe, 0x58, 0x01, 0x01, 0x9e, 0x59, 0xcc, 0x04, 0x19, 0x48, 0xca, 0x9a, 0x00, 0x60, 0xbe, 0x58, 0x00, 0x01, 0x9c, 0x9e, 0x00, 0x60, 0xbe, 0x58, 0x01, 0x01, 0xe9, 0xac, 0x0a, 0x92, 0x12, 0xed, 0x9e, 0x58, 0xc7, 0x04, 0xf8, 0x48, 0xb9, 0x98, 0x9e, 0x58, 0xd1, 0x00, 0x00, 0x67, 0x1f, 0x48, 0xb4, 0x88, 0x00, 0x66, 0xbe, 0x5e, 0xca, 0x03, 0x6f, 0x60, 0x03, 0x68, 0x9e, 0x59, 0xb8, 0x04, 0x9e, 0x5a, 0xcd, 0x04, 0x47, 0x38, 0x6c, 0x2c, 0x05, 0x5b, 0x68, 0x5f, 0xe8, 0x5f, 0xe8, 0x5f, 0xc7, 0x06, 0x79, 0x48, 0x01, 0x9a, 0x19, 0x04, 0x1a, 0x38, 0xc1, 0x58, 0x00, 0x61, 0x1c, 0x5a, 0x01, 0x5e, 0xbe, 0x5e, 0xca, 0x03, 0x00, 0x66, 0x8a, 0x60, 0x03, 0x68, 0x47, 0x38, 0x80, 0x2c, 0x05, 0x5b, 0x68, 0x5f, 0xe8, 0x5f, 0xe8, 0x5f, 0xc7, 0x06, 0x79, 0x48, 0x01, 0x9a, 0x19, 0x04, 0x32, 0xf8, 
+0x80, 0x2c, 0x1a, 0x38, 0xc1, 0x58, 0x00, 0x61, 0x1c, 0x5a, 0x9e, 0x5e, 0xca, 0x03, 0xc0, 0x06, 0xc8, 0x5e, 0xe9, 0xac, 0x07, 0x92, 0x9e, 0x58, 0xb7, 0x04, 0x02, 0x61, 0x19, 0x40, 0x98, 0x48, 0x4f, 0x9a, 0x0d, 0x9e, 0x9e, 0x59, 0x48, 0x01, 0x28, 0x5a, 0x48, 0x5f, 0x47, 0x02, 0xc2, 0x03, 0x3b, 0x48, 0x46, 0x98, 0xd9, 0x48, 0x75, 0x9a, 0xbe, 0x5e, 0x48, 0x01, 0x72, 0x9e, 0x9e, 0x58, 0xfe, 0x00, 0x19, 0x00, 0xfe, 0x78, 0x9e, 0x59, 0xb9, 0x04, 0x19, 0x48, 0x6a, 0x9a, 0xbe, 0x5e, 0x48, 0x01, 0x00, 0x60, 0xfe, 0x78, 0xe9, 0xa8, 0x8d, 0xa8, 0x9e, 0x58, 0xb9, 0x04, 0xbe, 0x58, 0xfc, 0x00, 0x08, 0x60, 0x27, 0x78, 0x5a, 0x60, 0x28, 0x78, 0x00, 0x60, 0x29, 0x78, 0x2a, 0x78, 0x2b, 0x78, 0x2c, 0x78, 0x2d, 0x78, 0x2e, 0x78, 0x2f, 0x78, 0x30, 0x78, 0xa2, 0xa8, 0x93, 0xc6, 0x60, 0xd1, 0x23, 0x43, 
+0xc0, 0x2c, 0xf4, 0x60, 0x01, 0x68, 0xf4, 0x61, 0x01, 0x69, 0x9e, 0xed, 0xfa, 0x60, 0x28, 0x78, 0xce, 0x60, 0x29, 0x78, 0xaa, 0x60, 0x2a, 0x78, 0x2b, 0x78, 0xff, 0x60, 0x2c, 0x78, 0x2d, 0x78, 0x2e, 0x78, 0x2f, 0x78, 0x30, 0x78, 0xa2, 0xa8, 0x93, 0xc6, 0x60, 0xd1, 0x9e, 0x58, 0xfc, 0x00, 0x9e, 0x59, 0xb9, 0x04, 0x19, 0x48, 0x35, 0x94, 0x19, 0x00, 0xbe, 0x58, 0xfc, 0x00, 0x31, 0x9e, 0x00, 0x60, 0x9e, 0x59, 0xfc, 0x00, 0x38, 0x48, 0x23, 0x98, 0xe9, 0xac, 0x2a, 0x90, 0xe9, 0xaa, 0x8d, 0xaa, 0xfa, 0x60, 0x28, 0x78, 0xce, 0x60, 0x29, 0x78, 0x55, 0x60, 0x2a, 0x78, 0x2b, 0x78, 0xff, 0x60, 0x2c, 0x78, 0x2d, 0x78, 0x2e, 0x78, 0x2f, 0x78, 0x30, 0x78, 0xa2, 0xa8, 0x00, 0x60, 0xbe, 0x58, 0xfe, 0x00, 0xbe, 0x58, 0x01, 0x01, 0xbe, 0x58, 0x00, 0x01, 0x93, 0xc6, 0x60, 0xd1, 0x73, 0xed, 0x84, 0xbd, 
+0x00, 0x2d, 0x9e, 0x58, 0x1a, 0x05, 0x00, 0x61, 0x19, 0x48, 0x0b, 0x8a, 0x73, 0xed, 0x09, 0x9e, 0x9e, 0x59, 0xfc, 0x00, 0x19, 0x11, 0xbe, 0x59, 0xfc, 0x00, 0x03, 0x9e, 0x6b, 0xed, 0x00, 0x60, 0xfe, 0x78, 0x1a, 0x38, 0x3a, 0x38, 0x1e, 0x5c, 0x8f, 0xed, 0x00, 0x65, 0x38, 0x66, 0x03, 0x6e, 0x9e, 0x5f, 0x0b, 0x04, 0xe7, 0x38, 0x1f, 0x2d, 0xbe, 0x49, 0x02, 0x94, 0xc3, 0x5d, 0xc1, 0x5c, 0x19, 0x06, 0x64, 0x60, 0xb8, 0x48, 0x03, 0x98, 0x00, 0x67, 0x3e, 0x5c, 0x3a, 0x38, 0x38, 0x66, 0x03, 0x6e, 0x1a, 0x06, 0x9e, 0x48, 0x0b, 0x98, 0x00, 0x63, 0x1a, 0x04, 0x02, 0x67, 0xe7, 0x38, 0x31, 0x2d, 0x93, 0x03, 0x19, 0x04, 0x0a, 0x62, 0xba, 0x40, 0x3c, 0x5b, 0x21, 0x9e, 0x82, 0x38, 0x02, 0x00, 0x80, 0x39, 0x02, 0x00, 0x38, 0x62, 0x03, 0x6a, 0x19, 0x07, 0xe0, 0x3b, 0x38, 0x03, 0x1a, 0x48, 0x9b, 0x6b, 
+0x40, 0x2d, 0x12, 0x96, 0x1b, 0x48, 0x10, 0x98, 0x3a, 0x48, 0x10, 0x96, 0x3b, 0x48, 0x0e, 0x98, 0x03, 0x5b, 0x23, 0x5c, 0x7c, 0x48, 0x04, 0x98, 0x0a, 0x62, 0xba, 0x40, 0x3c, 0x5b, 0x08, 0x9e, 0x0a, 0x62, 0xba, 0x40, 0x3c, 0x5c, 0x04, 0x9e, 0x23, 0x5c, 0xfa, 0x9f, 0x03, 0x5b, 0xf4, 0x9f, 0x01, 0x5f, 0x3e, 0x5c, 0x3a, 0x38, 0x3a, 0x38, 0x9e, 0x58, 0xfd, 0x00, 0x01, 0x61, 0x19, 0x48, 0x07, 0x8a, 0x9e, 0x58, 0xff, 0x00, 0x19, 0x10, 0xff, 0x78, 0x00, 0x61, 0x19, 0x48, 0xa9, 0x89, 0x01, 0x60, 0xbe, 0x58, 0xfd, 0x00, 0x3a, 0x38, 0x00, 0x60, 0xbe, 0x58, 0xfd, 0x00, 0x9e, 0x58, 0xc8, 0x04, 0xbe, 0x58, 0xff, 0x00, 0x3a, 0x38, 0xb7, 0x60, 0x01, 0x68, 0xee, 0x62, 0x01, 0x6a, 0x9e, 0x5d, 0x0b, 0x04, 0x9e, 0x5e, 0x02, 0x04, 0xa6, 0x05, 0x9e, 0x5e, 0x01, 0x04, 0xa6, 0x05, 0xa7, 0x38, 0x4c, 0x93, 
+0x80, 0x2d, 0x82, 0x2d, 0x05, 0x5c, 0x9d, 0x5a, 0xd2, 0x61, 0x01, 0x69, 0x09, 0x63, 0x02, 0x6b, 0x9e, 0x5d, 0x0b, 0x04, 0xa1, 0x5d, 0xa7, 0x38, 0x8d, 0x2d, 0x25, 0x5c, 0x9d, 0x5b, 0x3a, 0x38, 0x6f, 0x63, 0x03, 0x6b, 0x8a, 0x64, 0x03, 0x6c, 0x38, 0x65, 0x03, 0x6d, 0x9e, 0x59, 0x0b, 0x04, 0x27, 0x38, 0x9c, 0x2d, 0x65, 0x58, 0x85, 0x59, 0x01, 0x00, 0x1d, 0x5d, 0x3a, 0x38, 0x01, 0x5a, 0x41, 0x58, 0x19, 0x10, 0xfe, 0x89, 0x19, 0x11, 0xfb, 0x89, 0x3a, 0x38, 0x6f, 0x65, 0x03, 0x6d, 0x00, 0x66, 0x9e, 0x5a, 0xce, 0x04, 0x47, 0x38, 0xb0, 0x2d, 0xa3, 0x58, 0x1e, 0x48, 0x01, 0x9a, 0x01, 0x5e, 0x19, 0x05, 0x8a, 0x65, 0x03, 0x6d, 0x9e, 0x5a, 0xce, 0x04, 0x47, 0x38, 0xbb, 0x2d, 0xa3, 0x58, 0x1e, 0x48, 0x01, 0x9a, 0x01, 0x5e, 0x19, 0x05, 0xc1, 0x58, 0x3a, 0x38, 0x01, 0xb8, 0x41, 0xab, 0x50, 0x21, 
+0xc0, 0x2d, 0x13, 0xb8, 0x14, 0xb8, 0x15, 0xb8, 0x00, 0x61, 0x00, 0x62, 0xef, 0x3f, 0xc8, 0x2d, 0x0b, 0x59, 0x22, 0x02, 0x03, 0x31, 0x01, 0x8a, 0xf9, 0x9f, 0x41, 0xab, 0x95, 0xb8, 0x94, 0xb8, 0x93, 0xb8, 0x81, 0xb8, 0x3a, 0x38, 0x01, 0xb8, 0x41, 0xab, 0x13, 0xb8, 0x14, 0xb8, 0x15, 0xb8, 0x00, 0x60, 0x00, 0x61, 0x00, 0x62, 0x1b, 0x63, 0x02, 0x6b, 0xef, 0x3f, 0xe2, 0x2d, 0x1b, 0x48, 0x02, 0x8a, 0x09, 0x59, 0x22, 0x02, 0x19, 0x00, 0x06, 0x39, 0x40, 0x02, 0x01, 0x8a, 0xf5, 0x9f, 0x41, 0xab, 0x95, 0xb8, 0x94, 0xb8, 0x93, 0xb8, 0x81, 0xb8, 0x3a, 0x38, 0x00, 0x62, 0x40, 0x3b, 0x0e, 0x00, 0x63, 0x58, 0x06, 0x3d, 0xff, 0xff, 0x10, 0x8a, 0x9e, 0x5d, 0xcf, 0x04, 0x18, 0x05, 0x01, 0x8a, 0x05, 0x40, 0x9e, 0x5d, 0x30, 0x04, 0xa2, 0x3c, 0x01, 0x00, 0x01, 0x8a, 0x1c, 0x5d, 0x9e, 0x59, 0xd3, 0x12, 
+0x00, 0x2e, 0x32, 0x04, 0x18, 0x31, 0x01, 0x88, 0x08, 0x58, 0x1b, 0x5b, 0x19, 0x02, 0x42, 0x3b, 0x02, 0x00, 0xe5, 0x81, 0x3a, 0x38, 0xf0, 0xac, 0x8a, 0x90, 0x9e, 0x5f, 0x2a, 0x05, 0x01, 0x60, 0xf8, 0x48, 0x85, 0x9c, 0x93, 0x61, 0x02, 0x69, 0x1b, 0x01, 0x25, 0x5c, 0x25, 0x5d, 0x25, 0x5e, 0xdd, 0x48, 0x1e, 0x9c, 0xbc, 0x48, 0x1c, 0x9c, 0xae, 0x61, 0x02, 0x69, 0x1b, 0x01, 0x25, 0x5c, 0x25, 0x5d, 0x25, 0x5e, 0xdd, 0x48, 0x14, 0x9c, 0xbc, 0x48, 0x12, 0x9c, 0x93, 0x61, 0x02, 0x69, 0x1b, 0x01, 0x23, 0x58, 0x9e, 0x5d, 0x0b, 0x04, 0x1c, 0x15, 0xb7, 0x38, 0x1d, 0x59, 0xae, 0x61, 0x02, 0x69, 0x1b, 0x01, 0x23, 0x58, 0x9e, 0x5d, 0x0b, 0x04, 0x1c, 0x15, 0xb7, 0x38, 0x1d, 0x59, 0x9e, 0x5d, 0x0b, 0x04, 0x93, 0x61, 0x02, 0x69, 0xae, 0x62, 0x02, 0x6a, 0x5c, 0x63, 0x02, 0x6b, 0x77, 0x64, 0x4b, 0x5c, 
+0x40, 0x2e, 0x02, 0x6c, 0xa7, 0x38, 0x46, 0x2e, 0x25, 0x58, 0x1d, 0x5b, 0x45, 0x58, 0x1d, 0x5c, 0x04, 0x65, 0x5c, 0x66, 0x02, 0x6e, 0x56, 0xee, 0x1e, 0x5a, 0x04, 0x65, 0x77, 0x66, 0x02, 0x6e, 0x56, 0xee, 0x3e, 0x5c, 0x41, 0x5e, 0x0b, 0x9e, 0x58, 0xe3, 0x00, 0x62, 0x5b, 0x59, 0x58, 0xe3, 0x00, 0x62, 0x5b, 0x59, 0x58, 0xe3, 0x00, 0x62, 0x5b, 0x59, 0x58, 0xe3, 0x3a, 0x38, 0x93, 0x62, 0x02, 0x6a, 0xae, 0x63, 0x02, 0x6b, 0x9e, 0x5d, 0x0b, 0x04, 0xa7, 0x38, 0x89, 0x2e, 0x0a, 0x65, 0x9e, 0x59, 0x2b, 0x05, 0x20, 0x39, 0x92, 0x02, 0x59, 0x48, 0x19, 0x80, 0x9e, 0x59, 0x2c, 0x05, 0x20, 0x39, 0x92, 0x02, 0x3a, 0x48, 0x13, 0x80, 0x43, 0x58, 0x04, 0x10, 0x04, 0x9c, 0x07, 0x40, 0x00, 0x61, 0x1c, 0x5d, 0x01, 0x9e, 0x00, 0x60, 0x1d, 0x5a, 0x63, 0x58, 0x06, 0x10, 0x04, 0x9c, 0x07, 0x40, 0x8f, 0x90, 
+0x80, 0x2e, 0x00, 0x61, 0x1c, 0x5d, 0x01, 0x9e, 0x00, 0x60, 0x1d, 0x5b, 0x03, 0x9e, 0x00, 0x60, 0x1d, 0x5a, 0x1d, 0x5b, 0x1a, 0x38, 0x9e, 0x59, 0x01, 0x04, 0x9e, 0x58, 0x02, 0x04, 0x20, 0x00, 0x06, 0x8a, 0x19, 0x10, 0x07, 0x38, 0x95, 0x2e, 0x00, 0x60, 0x1d, 0x5a, 0x1a, 0x38, 0x3a, 0x38, 0x01, 0x60, 0xfb, 0xdb, 0xfc, 0xda, 0x59, 0xdc, 0x69, 0xf0, 0xc8, 0x67, 0x03, 0x6f, 0x4f, 0x38, 0xa3, 0x2e, 0xe2, 0x38, 0xc7, 0x03, 0xae, 0xf0, 0x1d, 0x5f, 0xed, 0xf0, 0x70, 0xf1, 0x9e, 0x58, 0x42, 0x01, 0x01, 0x61, 0x19, 0x48, 0x98, 0x3a, 0x16, 0x30, 0x02, 0x61, 0x19, 0x48, 0x98, 0x3a, 0x16, 0x30, 0x03, 0x61, 0x19, 0x48, 0x98, 0x3a, 0xbf, 0x2f, 0x05, 0x61, 0x19, 0x48, 0x07, 0x8a, 0x04, 0x61, 0x19, 0x48, 0x98, 0x3a, 0xe0, 0x2f, 0x06, 0x61, 0x19, 0x48, 0x5e, 0x8a, 0x9e, 0x58, 0x10, 0x05, 0xad, 0x13, 
+0xc0, 0x2e, 0x00, 0x61, 0x38, 0x48, 0x28, 0x8a, 0x9e, 0x59, 0x40, 0x01, 0x38, 0x48, 0x15, 0x98, 0xb1, 0x70, 0x19, 0x10, 0x12, 0x98, 0x9e, 0x58, 0xca, 0x03, 0x9e, 0x59, 0x11, 0x05, 0x19, 0x48, 0x0c, 0x98, 0x9e, 0x58, 0xc0, 0x00, 0x38, 0xa8, 0x18, 0xa8, 0xbe, 0x58, 0xc0, 0x00, 0x85, 0xa8, 0x05, 0x60, 0xbe, 0x58, 0x42, 0x01, 0x98, 0x3f, 0x16, 0x30, 0x9e, 0x58, 0x42, 0x01, 0x05, 0x61, 0x19, 0x48, 0x0a, 0x88, 0x9e, 0x58, 0xc0, 0x00, 0x38, 0xaa, 0x18, 0xaa, 0xbe, 0x58, 0xc0, 0x00, 0x85, 0xaa, 0x00, 0x60, 0xbe, 0x58, 0x42, 0x01, 0x9e, 0x58, 0xa5, 0x04, 0x18, 0x10, 0x2d, 0x9a, 0xb1, 0x70, 0x19, 0x10, 0x2a, 0x98, 0x9e, 0x58, 0x0b, 0x04, 0x38, 0x61, 0x03, 0x69, 0x00, 0x62, 0x9e, 0x5b, 0xa6, 0x04, 0x00, 0x64, 0x07, 0x38, 0x04, 0x2f, 0x23, 0x58, 0x19, 0x04, 0x1b, 0x48, 0x01, 0x98, 0x87, 0x2e, 
+0x00, 0x2f, 0x00, 0x64, 0x9a, 0x48, 0x01, 0x9a, 0x81, 0x5a, 0x19, 0x01, 0xbe, 0x5a, 0xd0, 0x03, 0x9e, 0x5c, 0xa7, 0x04, 0x5c, 0x48, 0x11, 0x96, 0x9e, 0x58, 0xc9, 0x03, 0x9e, 0x59, 0xa5, 0x04, 0x19, 0x48, 0x0b, 0x98, 0x9e, 0x58, 0xc0, 0x00, 0x38, 0xa8, 0x18, 0xa8, 0xbe, 0x58, 0xc0, 0x00, 0x85, 0xa8, 0x01, 0x60, 0xbe, 0x58, 0x42, 0x01, 0xfa, 0x9e, 0x9e, 0x58, 0x50, 0x05, 0x18, 0x10, 0x49, 0x8a, 0x9e, 0x59, 0x40, 0x01, 0x38, 0x48, 0x36, 0x96, 0x9e, 0x58, 0x51, 0x05, 0x38, 0x48, 0x32, 0x98, 0x02, 0x67, 0x9e, 0x5e, 0x9b, 0x04, 0x9e, 0x58, 0x41, 0x01, 0x04, 0x38, 0xff, 0x3f, 0x38, 0x61, 0x03, 0x69, 0x30, 0x39, 0x0b, 0x04, 0xe7, 0x38, 0x3d, 0x2f, 0x03, 0x5a, 0x19, 0x00, 0x19, 0x48, 0x05, 0x98, 0x03, 0x5b, 0x43, 0x12, 0x5e, 0x48, 0x1d, 0x98, 0x1a, 0x38, 0x9e, 0x58, 0x41, 0x01, 0x8e, 0xa4, 
+0x40, 0x2f, 0x04, 0x38, 0xff, 0x3f, 0x38, 0x61, 0x03, 0x69, 0xe7, 0x38, 0x4e, 0x2f, 0x03, 0x5a, 0x19, 0x10, 0x19, 0x48, 0x05, 0x96, 0x03, 0x5b, 0x43, 0x12, 0x5e, 0x48, 0x0c, 0x98, 0x1a, 0x38, 0x9e, 0x58, 0xc0, 0x00, 0x38, 0xa8, 0x18, 0xa8, 0xbe, 0x58, 0xc0, 0x00, 0x85, 0xa8, 0x06, 0x60, 0xbe, 0x58, 0x42, 0x01, 0xbc, 0x9e, 0x9e, 0x58, 0x42, 0x01, 0x06, 0x61, 0x19, 0x48, 0x0a, 0x88, 0x9e, 0x58, 0xc0, 0x00, 0x38, 0xaa, 0x18, 0xaa, 0xbe, 0x58, 0xc0, 0x00, 0x85, 0xaa, 0x00, 0x60, 0xbe, 0x58, 0x42, 0x01, 0x0c, 0x60, 0x03, 0x68, 0xbe, 0x58, 0xcf, 0x03, 0x9e, 0x58, 0x3d, 0x05, 0x18, 0x10, 0x4e, 0x8a, 0xaf, 0xf1, 0x38, 0x48, 0x0a, 0x80, 0xbb, 0xf1, 0x9e, 0x59, 0x3e, 0x05, 0x19, 0x48, 0x05, 0x96, 0x0d, 0x60, 0x03, 0x68, 0xbe, 0x58, 0xcf, 0x03, 0x36, 0x9e, 0x9e, 0x58, 0x40, 0x01, 0x18, 0xc5, 
+0x80, 0x2f, 0x9e, 0x59, 0x3f, 0x05, 0x19, 0x48, 0x18, 0x96, 0x9e, 0x58, 0x41, 0x01, 0x04, 0x38, 0xff, 0x3f, 0x02, 0x38, 0x38, 0x03, 0x00, 0x38, 0x25, 0x02, 0x03, 0x59, 0x7b, 0x00, 0x03, 0x58, 0x21, 0x5a, 0x38, 0x48, 0x01, 0x96, 0x01, 0x5a, 0x9e, 0x58, 0x40, 0x05, 0x58, 0x48, 0x05, 0x94, 0x0e, 0x60, 0x03, 0x68, 0xbe, 0x58, 0xcf, 0x03, 0x18, 0x9e, 0x89, 0xf1, 0x9e, 0x58, 0xc6, 0x03, 0x9e, 0x59, 0x41, 0x05, 0x19, 0x48, 0x05, 0x96, 0x0f, 0x60, 0x03, 0x68, 0xbe, 0x58, 0xcf, 0x03, 0x0c, 0x9e, 0x99, 0xf1, 0x9e, 0x58, 0xc7, 0x03, 0x9e, 0x59, 0x42, 0x05, 0x19, 0x48, 0x10, 0x96, 0x10, 0x60, 0x03, 0x68, 0xbe, 0x58, 0xcf, 0x03, 0x00, 0x9e, 0x9e, 0x58, 0xc0, 0x00, 0x38, 0xa8, 0x18, 0xa8, 0xbe, 0x58, 0xc0, 0x00, 0x85, 0xa8, 0x02, 0x60, 0xbe, 0x58, 0x42, 0x01, 0x57, 0x9e, 0x9e, 0x58, 0x80, 0xec, 
+0xc0, 0x2f, 0x25, 0x05, 0x00, 0x61, 0x38, 0x48, 0x1c, 0x8a, 0x9e, 0x59, 0x40, 0x01, 0x38, 0x48, 0x0a, 0x96, 0x9e, 0x58, 0xc0, 0x00, 0x38, 0xa8, 0xbe, 0x58, 0xc0, 0x00, 0x85, 0xa8, 0x03, 0x60, 0xbe, 0x58, 0x42, 0x01, 0x44, 0x9e, 0x9e, 0x58, 0x42, 0x01, 0x03, 0x61, 0x19, 0x48, 0x09, 0x88, 0x9e, 0x58, 0xc0, 0x00, 0x38, 0xaa, 0xbe, 0x58, 0xc0, 0x00, 0x85, 0xaa, 0x00, 0x60, 0xbe, 0x58, 0x42, 0x01, 0x9e, 0x58, 0x20, 0x05, 0x18, 0x10, 0x32, 0x8a, 0x9e, 0x59, 0x40, 0x01, 0x38, 0x48, 0x16, 0x96, 0x9e, 0x58, 0xc0, 0x00, 0x30, 0xac, 0x12, 0x90, 0x9e, 0x58, 0x3f, 0x01, 0x19, 0x00, 0x9e, 0x59, 0x21, 0x05, 0x19, 0x48, 0x20, 0x9a, 0x21, 0x58, 0x9e, 0x59, 0xc0, 0x00, 0x39, 0xa8, 0xbe, 0x59, 0xc0, 0x00, 0x85, 0xa8, 0x04, 0x61, 0xbe, 0x59, 0x42, 0x01, 0x18, 0x9e, 0x9e, 0x58, 0x3f, 0x01, 0x4d, 0xbd, 
+0x00, 0x30, 0x19, 0x10, 0x00, 0x61, 0x19, 0x48, 0x0f, 0x94, 0x21, 0x58, 0x9e, 0x5f, 0x42, 0x01, 0x04, 0x66, 0xfe, 0x48, 0x09, 0x88, 0x9e, 0x59, 0xc0, 0x00, 0x39, 0xaa, 0xbe, 0x59, 0xc0, 0x00, 0x85, 0xaa, 0x00, 0x61, 0xbe, 0x59, 0x42, 0x01, 0xbe, 0x58, 0x3f, 0x01, 0x00, 0x9e, 0xb3, 0x61, 0x02, 0x69, 0x30, 0x39, 0x0a, 0x04, 0x9e, 0x5a, 0x42, 0x01, 0x5d, 0x59, 0x9e, 0x58, 0xab, 0x04, 0x08, 0x58, 0x08, 0x58, 0x02, 0x63, 0x1b, 0x48, 0x10, 0x8a, 0x01, 0x63, 0x1b, 0x48, 0x17, 0x8a, 0x05, 0x63, 0x1b, 0x48, 0x1b, 0x8a, 0x03, 0x63, 0x1b, 0x48, 0x22, 0x8a, 0x04, 0x63, 0x1b, 0x48, 0x23, 0x8a, 0x08, 0x63, 0x1b, 0x48, 0x31, 0x8a, 0x34, 0x9e, 0x9e, 0x5a, 0x40, 0x01, 0x5d, 0x59, 0x9e, 0x5a, 0xc9, 0x03, 0x5d, 0x59, 0x9e, 0x5a, 0xcf, 0x03, 0x5d, 0x59, 0x2a, 0x9e, 0x9e, 0x5a, 0xd0, 0x03, 0x6f, 0xf4, 
+0x40, 0x30, 0x5d, 0x59, 0x9e, 0x5a, 0xc9, 0x03, 0x5d, 0x59, 0x23, 0x9e, 0x9e, 0x5a, 0x40, 0x01, 0x5d, 0x59, 0x9e, 0x5a, 0xca, 0x03, 0x5d, 0x59, 0x9e, 0x5a, 0xb1, 0x00, 0x5d, 0x59, 0x19, 0x9e, 0x9e, 0x5a, 0x40, 0x01, 0x5d, 0x59, 0x15, 0x9e, 0x9e, 0x5a, 0x40, 0x01, 0x5d, 0x59, 0x9e, 0x5a, 0xc1, 0x03, 0x5d, 0x59, 0x9e, 0x5a, 0xc9, 0x03, 0x5d, 0x59, 0x00, 0x62, 0x9e, 0x58, 0xc0, 0x00, 0x30, 0xac, 0x01, 0x90, 0x01, 0x62, 0x5d, 0x59, 0x04, 0x9e, 0x9e, 0x5a, 0x40, 0x01, 0x5d, 0x59, 0x00, 0x9e, 0x3a, 0x38, 0x70, 0x65, 0x00, 0x60, 0xbe, 0x58, 0x40, 0x01, 0x9e, 0x58, 0xb1, 0x00, 0x19, 0x10, 0x01, 0x94, 0x00, 0x60, 0x07, 0x38, 0x99, 0x30, 0xa3, 0x5e, 0x00, 0x63, 0xc2, 0x39, 0x01, 0x00, 0x38, 0x62, 0x03, 0x6a, 0x3a, 0x48, 0x01, 0x96, 0x23, 0x5b, 0x00, 0x64, 0xc0, 0x39, 0x01, 0x00, 0xf1, 0x77, 
+0x80, 0x30, 0x38, 0x62, 0x03, 0x6a, 0x50, 0x3a, 0x0b, 0x04, 0x3a, 0x48, 0x01, 0x98, 0x23, 0x5c, 0xff, 0x60, 0xff, 0x68, 0x61, 0x59, 0x7c, 0x48, 0x02, 0x82, 0x01, 0x60, 0x81, 0x59, 0xc3, 0x5a, 0x22, 0x01, 0x9e, 0x5a, 0x40, 0x01, 0x3a, 0x48, 0x05, 0x96, 0xbe, 0x59, 0x40, 0x01, 0xbe, 0x5e, 0x41, 0x01, 0x01, 0x5f, 0x19, 0x05, 0x9e, 0x5e, 0x41, 0x01, 0xc3, 0x59, 0xc7, 0x00, 0x03, 0x58, 0x20, 0x11, 0x2c, 0x62, 0x01, 0x6a, 0x3a, 0x48, 0x09, 0x98, 0x9e, 0x58, 0x41, 0x01, 0x7f, 0xac, 0x02, 0x90, 0x78, 0xa8, 0x01, 0x9e, 0x70, 0xa8, 0xbe, 0x58, 0x41, 0x01, 0x3a, 0x38, 0x01, 0x5d, 0x20, 0xaa, 0x00, 0x63, 0x25, 0xac, 0x02, 0x90, 0xff, 0x63, 0x7f, 0x6b, 0x9e, 0x59, 0x41, 0x01, 0x1e, 0x58, 0x79, 0xac, 0x01, 0x90, 0x19, 0x00, 0x24, 0x39, 0xff, 0x3f, 0x20, 0x11, 0x38, 0x62, 0x03, 0x6a, 0x3e, 0x77, 
+0xc0, 0x30, 0x3a, 0x48, 0x01, 0x96, 0x23, 0x5b, 0x00, 0x64, 0x25, 0xac, 0x02, 0x90, 0xff, 0x64, 0x7f, 0x6c, 0x9e, 0x59, 0x41, 0x01, 0x3e, 0x58, 0x71, 0xac, 0x01, 0x90, 0x19, 0x00, 0x24, 0x39, 0xff, 0x3f, 0x20, 0x01, 0x38, 0x62, 0x03, 0x6a, 0x50, 0x3a, 0x0b, 0x04, 0x3a, 0x48, 0x01, 0x98, 0x23, 0x5c, 0x61, 0x5a, 0x25, 0xac, 0x04, 0x92, 0x7c, 0x48, 0x01, 0x98, 0x81, 0x5a, 0x03, 0x9e, 0x7c, 0x48, 0x01, 0x96, 0x81, 0x5a, 0x9e, 0x58, 0x41, 0x01, 0x04, 0x38, 0xff, 0x3f, 0x03, 0x58, 0xe8, 0x61, 0x03, 0x69, 0x02, 0x02, 0x19, 0x40, 0x3c, 0x5a, 0x3a, 0x38, 0xff, 0x60, 0x7f, 0x68, 0xc2, 0x61, 0x03, 0x69, 0x6f, 0x38, 0xf4, 0x30, 0x1d, 0x59, 0x1a, 0x38, 0x9e, 0x58, 0xb1, 0x00, 0x19, 0x10, 0x01, 0x94, 0x00, 0x60, 0x37, 0x61, 0x03, 0x69, 0xbe, 0x59, 0xcb, 0x03, 0x9e, 0x59, 0x71, 0x00, 0xa4, 0x6e, 
+0x00, 0x31, 0xbe, 0x59, 0xcd, 0x03, 0x9e, 0x59, 0x70, 0x00, 0xbe, 0x59, 0xcc, 0x03, 0x39, 0x61, 0x03, 0x69, 0x30, 0x39, 0x0b, 0x04, 0xbe, 0x59, 0xce, 0x03, 0x00, 0x61, 0xbe, 0x59, 0xc0, 0x03, 0x00, 0x67, 0x07, 0x38, 0x5b, 0x31, 0x70, 0x61, 0x30, 0x39, 0xc0, 0x03, 0x23, 0x58, 0x1b, 0x10, 0xcb, 0x61, 0x03, 0x69, 0x30, 0x39, 0xc0, 0x03, 0x23, 0x59, 0xff, 0x66, 0x7f, 0x6e, 0x19, 0x48, 0x14, 0x9a, 0x07, 0x5a, 0x5f, 0x48, 0x11, 0x96, 0x5e, 0x48, 0x0f, 0x98, 0xc2, 0x64, 0x03, 0x6c, 0x90, 0x3c, 0xc0, 0x03, 0x83, 0x5b, 0xff, 0x66, 0x7f, 0x6e, 0x7e, 0x48, 0x02, 0x88, 0x41, 0x5b, 0x01, 0x9e, 0x62, 0x03, 0x7b, 0x5c, 0x41, 0x5e, 0xea, 0x9f, 0x70, 0x61, 0x30, 0x39, 0xc0, 0x03, 0x23, 0x58, 0x1b, 0x00, 0xcd, 0x61, 0x03, 0x69, 0x30, 0x39, 0xc0, 0x03, 0x23, 0x59, 0xff, 0x66, 0x7f, 0x6e, 0xf3, 0x08, 
+0x40, 0x31, 0x19, 0x48, 0x14, 0x94, 0x05, 0x5a, 0x5f, 0x48, 0x11, 0x96, 0x5e, 0x48, 0x0f, 0x98, 0xc4, 0x64, 0x03, 0x6c, 0x90, 0x3c, 0xc0, 0x03, 0x83, 0x5b, 0xff, 0x66, 0x7f, 0x6e, 0x7e, 0x48, 0x02, 0x88, 0x41, 0x5b, 0x01, 0x9e, 0x62, 0x03, 0x7b, 0x5c, 0x41, 0x5e, 0xea, 0x9f, 0x9e, 0x5a, 0xc0, 0x03, 0x19, 0x02, 0xbe, 0x5a, 0xc0, 0x03, 0x1a, 0x38, 0xc2, 0x60, 0x03, 0x68, 0xff, 0x61, 0x7f, 0x69, 0x6f, 0x38, 0x66, 0x31, 0x03, 0x5a, 0x59, 0x48, 0x01, 0x94, 0x41, 0x59, 0x19, 0x00, 0x00, 0x60, 0xff, 0x62, 0x7f, 0x6a, 0x3a, 0x48, 0x01, 0x8a, 0x21, 0x58, 0xbe, 0x58, 0xc1, 0x03, 0x3a, 0x38, 0x9e, 0x58, 0xc0, 0x00, 0x30, 0xaa, 0x9e, 0x59, 0x40, 0x01, 0x9e, 0x5a, 0xad, 0x04, 0x3a, 0x48, 0x0d, 0x96, 0x9e, 0x59, 0xc1, 0x03, 0x9e, 0x5a, 0xae, 0x04, 0x3a, 0x48, 0x07, 0x96, 0x9e, 0x59, 0x2a, 0x92, 
+0x80, 0x31, 0xc9, 0x03, 0x9e, 0x5a, 0xaf, 0x04, 0x3a, 0x48, 0x01, 0x96, 0x30, 0xa8, 0xbe, 0x58, 0xc0, 0x00, 0x3a, 0x38, 0x9e, 0x58, 0x0b, 0x04, 0x38, 0x61, 0x03, 0x69, 0xff, 0x62, 0x7f, 0x6a, 0x07, 0x38, 0x95, 0x31, 0x23, 0x58, 0x1a, 0x48, 0x01, 0x94, 0x01, 0x5a, 0x19, 0x01, 0xbe, 0x5a, 0xc6, 0x03, 0x3a, 0x38, 0x00, 0x62, 0x9e, 0x58, 0x02, 0x04, 0x18, 0x10, 0x0e, 0x8a, 0x25, 0x61, 0x02, 0x69, 0x30, 0x39, 0x0a, 0x04, 0x30, 0x39, 0x01, 0x04, 0x19, 0x10, 0x07, 0x38, 0xab, 0x31, 0x23, 0x58, 0x1a, 0x48, 0x01, 0x9a, 0x01, 0x5a, 0x19, 0x01, 0xbe, 0x5a, 0xc7, 0x03, 0x3a, 0x38, 0x70, 0x66, 0xc3, 0x5e, 0x71, 0x67, 0xe3, 0x5f, 0xc1, 0x5a, 0xc3, 0x59, 0xe3, 0x5b, 0x3b, 0x48, 0x02, 0x98, 0x61, 0x59, 0xe1, 0x5a, 0x3a, 0x38, 0x00, 0x65, 0x42, 0x3b, 0x01, 0x00, 0x38, 0x64, 0x03, 0x6c, 0x2c, 0x4e, 
+0xc0, 0x31, 0x7c, 0x48, 0x01, 0x96, 0x63, 0x5d, 0x00, 0x66, 0x40, 0x3b, 0x01, 0x00, 0x38, 0x64, 0x03, 0x6c, 0x90, 0x3c, 0x0b, 0x04, 0x7c, 0x48, 0x01, 0x98, 0x63, 0x5e, 0xa1, 0x58, 0xbe, 0x48, 0x01, 0x98, 0xc1, 0x58, 0x20, 0x07, 0xe8, 0x60, 0x03, 0x68, 0x19, 0x40, 0x3c, 0x5f, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x00, 0x00, 0x00, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x20, 0x00, 0x28, 0x00, 0x40, 0x00, 0x30, 0x00, 0x48, 0x00, 0x38, 0x00, 0x50, 0x00, 0x58, 0x00, 0x60, 0x00, 0x68, 0x00, 0x70, 0x00, 0x78, 0x53, 0x60, 0x16, 0x39, 0x1c, 0x00, 0x91, 0x8a, 0x54, 0x60, 0x16, 0x39, 0x1c, 0x00, 0x98, 0x3a, 0xb3, 0x35, 0x45, 0x60, 0x16, 0x39, 0x1c, 0x00, 0x11, 0x88, 0x49, 0x60, 0x16, 0x39, 0x1d, 0x00, 0x0d, 0x88, 0x41, 0x60, 0x16, 0x39, 0x1e, 0x00, 0x09, 0x88, 0x50, 0x60, 0xc6, 0xf3, 
+0x00, 0x32, 0x16, 0x39, 0x1f, 0x00, 0x05, 0x88, 0xff, 0x60, 0xff, 0x68, 0x18, 0xc7, 0x70, 0xc0, 0x3a, 0x38, 0x77, 0xf2, 0x26, 0x38, 0x56, 0x00, 0x02, 0x88, 0x84, 0xaa, 0x3a, 0x38, 0x77, 0xf2, 0x26, 0x38, 0xa6, 0x00, 0x02, 0x88, 0x84, 0xa8, 0x3a, 0x38, 0x77, 0xf2, 0x26, 0x38, 0x57, 0x00, 0x02, 0x88, 0xca, 0xa8, 0x3a, 0x38, 0x77, 0xf2, 0x26, 0x38, 0xa7, 0x00, 0x02, 0x88, 0xca, 0xaa, 0x3a, 0x38, 0x77, 0xf2, 0x26, 0x38, 0xa8, 0x00, 0x03, 0x88, 0xa1, 0xa8, 0xbc, 0xa8, 0x3a, 0x38, 0x77, 0xf2, 0x26, 0x38, 0x77, 0x00, 0x02, 0x88, 0x83, 0xa8, 0x3a, 0x38, 0x77, 0xf2, 0x26, 0x38, 0x88, 0x00, 0x02, 0x88, 0x94, 0xa8, 0x3a, 0x38, 0x57, 0x60, 0x16, 0x39, 0x1c, 0x00, 0x98, 0x3a, 0xfd, 0x37, 0x59, 0x60, 0x16, 0x39, 0x1c, 0x00, 0x98, 0x3a, 0xff, 0x37, 0x9f, 0x60, 0x16, 0x39, 0x1c, 0x00, 0xac, 0xe7, 
+0x40, 0x32, 0x0d, 0x88, 0x00, 0x60, 0x16, 0x39, 0x1d, 0x00, 0x36, 0x38, 0x1e, 0x00, 0x06, 0x88, 0x01, 0x60, 0x16, 0x39, 0x1f, 0x00, 0x02, 0x88, 0xb9, 0xaa, 0x9b, 0xaa, 0x3a, 0x38, 0x96, 0x60, 0x16, 0x39, 0x1c, 0x00, 0x05, 0x88, 0xf1, 0x60, 0x16, 0x39, 0x21, 0x00, 0x98, 0x3a, 0xac, 0x37, 0x97, 0x60, 0x16, 0x39, 0x1c, 0x00, 0x05, 0x88, 0xf1, 0x60, 0x16, 0x39, 0x21, 0x00, 0x98, 0x3a, 0xe1, 0x37, 0x98, 0x60, 0x16, 0x39, 0x1c, 0x00, 0x05, 0x88, 0xf1, 0x60, 0x16, 0x39, 0x21, 0x00, 0x98, 0x3a, 0xc4, 0x37, 0x77, 0xf2, 0x26, 0x38, 0x55, 0x00, 0x02, 0x88, 0xba, 0xaa, 0x3a, 0x38, 0x77, 0xf2, 0x26, 0x38, 0xa5, 0x00, 0x03, 0x88, 0xba, 0xa8, 0x81, 0xaa, 0x3a, 0x38, 0x3a, 0x38, 0x1c, 0x70, 0x14, 0x39, 0x1d, 0x00, 0x34, 0x38, 0x1e, 0x00, 0x14, 0x39, 0x1f, 0x00, 0x3a, 0x38, 0xa2, 0xa8, 0x25, 0x56, 
+0x80, 0x32, 0x04, 0x60, 0x27, 0x78, 0x52, 0x60, 0x28, 0x78, 0x1d, 0x70, 0x29, 0x78, 0x00, 0x60, 0x2a, 0x78, 0x01, 0x60, 0x2b, 0x78, 0x1d, 0x70, 0x7f, 0x38, 0x08, 0x58, 0x3f, 0x20, 0x00, 0x39, 0x92, 0x32, 0x29, 0x58, 0x5e, 0x58, 0xa2, 0x32, 0x4b, 0x33, 0x79, 0x33, 0x7a, 0x33, 0x7b, 0x33, 0x7c, 0x33, 0x96, 0x33, 0xe6, 0x33, 0x07, 0x34, 0x3b, 0x34, 0x50, 0x33, 0xa4, 0x34, 0xd3, 0x34, 0xd4, 0x34, 0x02, 0x35, 0x28, 0x35, 0x1d, 0x70, 0x06, 0x39, 0x00, 0x00, 0x0d, 0x8a, 0x06, 0x39, 0x0e, 0x00, 0x3a, 0x8a, 0x06, 0x39, 0x0f, 0x00, 0x52, 0x8a, 0x06, 0x39, 0x01, 0x00, 0x53, 0x8a, 0x06, 0x39, 0x02, 0x00, 0x79, 0x8a, 0x3a, 0x38, 0xfd, 0x60, 0x3f, 0x68, 0x09, 0x59, 0x26, 0x38, 0xaa, 0x55, 0x0c, 0x88, 0xfe, 0x60, 0x3f, 0x68, 0x09, 0x59, 0x26, 0x38, 0xcc, 0x33, 0x06, 0x88, 0x11, 0x63, 0x81, 0x22, 
+0xc0, 0x32, 0x9e, 0x5c, 0x07, 0x04, 0x84, 0x3c, 0xff, 0x00, 0x03, 0x9e, 0x00, 0x63, 0x00, 0x64, 0x00, 0x9e, 0x61, 0x58, 0x04, 0x39, 0xf0, 0x00, 0x7f, 0x38, 0x28, 0x59, 0x35, 0x39, 0x29, 0x00, 0x29, 0x79, 0x04, 0x39, 0x0f, 0x00, 0x7f, 0x38, 0x26, 0x59, 0x81, 0x58, 0x04, 0x3a, 0xf0, 0x00, 0x7f, 0x38, 0x48, 0x5a, 0x41, 0x2a, 0x2a, 0x7a, 0x04, 0x39, 0x0f, 0x00, 0x7f, 0x38, 0x26, 0x59, 0x35, 0x39, 0x2b, 0x00, 0x2b, 0x79, 0x3a, 0x38, 0x06, 0x60, 0x04, 0x39, 0xf0, 0x00, 0x7f, 0x38, 0x28, 0x59, 0x35, 0x39, 0x29, 0x00, 0x29, 0x79, 0x04, 0x39, 0x0f, 0x00, 0x7f, 0x38, 0x26, 0x59, 0x20, 0x60, 0x04, 0x3a, 0xf0, 0x00, 0x7f, 0x38, 0x48, 0x5a, 0x41, 0x2a, 0x2a, 0x7a, 0x04, 0x39, 0x0f, 0x00, 0x7f, 0x38, 0x26, 0x59, 0x35, 0x39, 0x2b, 0x00, 0x2b, 0x79, 0x3a, 0x38, 0x14, 0x60, 0x7f, 0x68, 0x80, 0xee, 
+0x00, 0x33, 0x2a, 0x78, 0x3a, 0x38, 0x29, 0x70, 0x04, 0x38, 0xf0, 0x00, 0x29, 0x78, 0x1c, 0x60, 0x02, 0x68, 0x09, 0x58, 0x04, 0x38, 0x00, 0xff, 0xff, 0x38, 0x08, 0x58, 0x04, 0x39, 0xf0, 0x00, 0x7f, 0x38, 0x28, 0x59, 0x35, 0x39, 0x29, 0x00, 0x29, 0x79, 0x04, 0x39, 0x0f, 0x00, 0x7f, 0x38, 0x26, 0x59, 0x1c, 0x60, 0x02, 0x68, 0x09, 0x58, 0x04, 0x38, 0xff, 0x00, 0x04, 0x3a, 0xf0, 0x00, 0x7f, 0x38, 0x48, 0x5a, 0x41, 0x2a, 0x2a, 0x7a, 0x04, 0x39, 0x0f, 0x00, 0x7f, 0x38, 0x26, 0x59, 0x35, 0x39, 0x2b, 0x00, 0x2b, 0x79, 0x3a, 0x38, 0x9e, 0x58, 0x28, 0x05, 0xfe, 0x58, 0x04, 0x38, 0xff, 0x00, 0x04, 0x39, 0xf0, 0x00, 0x7f, 0x38, 0x28, 0x59, 0x29, 0x79, 0x04, 0x39, 0x0f, 0x00, 0x7f, 0x38, 0x26, 0x59, 0x9e, 0x58, 0x28, 0x05, 0x04, 0x38, 0xff, 0x00, 0x04, 0x3a, 0xf0, 0x00, 0x7f, 0x38, 0x02, 0xc0, 
+0x40, 0x33, 0x48, 0x5a, 0x41, 0x2a, 0x2a, 0x7a, 0x04, 0x39, 0x0f, 0x00, 0x7f, 0x38, 0x26, 0x59, 0x35, 0x39, 0x2b, 0x00, 0x2b, 0x79, 0x3a, 0x38, 0x1d, 0x70, 0x06, 0x39, 0x10, 0x00, 0x01, 0x8a, 0x3a, 0x38, 0x29, 0x70, 0x04, 0x38, 0xf0, 0x00, 0x29, 0x78, 0x1c, 0x60, 0x02, 0x68, 0x09, 0x58, 0x04, 0x38, 0x00, 0xff, 0xff, 0x38, 0x08, 0x58, 0x04, 0x39, 0xf0, 0x00, 0x7f, 0x38, 0x28, 0x59, 0x35, 0x39, 0x29, 0x00, 0x29, 0x79, 0x04, 0x39, 0x0f, 0x00, 0x7f, 0x38, 0x26, 0x59, 0x1c, 0x60, 0x02, 0x68, 0x09, 0x58, 0x04, 0x38, 0xff, 0x00, 0x04, 0x3a, 0xf0, 0x00, 0x7f, 0x38, 0x48, 0x5a, 0x41, 0x2a, 0x2a, 0x7a, 0x04, 0x39, 0x0f, 0x00, 0x7f, 0x38, 0x26, 0x59, 0x35, 0x39, 0x2b, 0x00, 0x2b, 0x79, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x1d, 0x70, 0x04, 0x39, 0xf0, 0x00, 0x06, 0x3a, 0xc2, 0xb2, 
+0x80, 0x33, 0x50, 0x00, 0x04, 0x8a, 0x06, 0x3a, 0x51, 0x00, 0x0c, 0x8a, 0x3a, 0x38, 0x00, 0x60, 0xc3, 0xac, 0x02, 0x90, 0x18, 0xa8, 0x03, 0x9e, 0xf3, 0xac, 0x01, 0x90, 0x00, 0xa8, 0x20, 0x29, 0x29, 0x79, 0x3a, 0x38, 0x29, 0x78, 0x9e, 0x59, 0x49, 0x00, 0x2a, 0x79, 0x3a, 0x38, 0xb8, 0xac, 0x04, 0x90, 0xc0, 0xac, 0x01, 0x92, 0x01, 0x9e, 0x00, 0x9e, 0x1d, 0x70, 0x3f, 0x20, 0x00, 0x38, 0xa2, 0x33, 0x09, 0x59, 0x5e, 0x59, 0xb2, 0x33, 0xc5, 0x33, 0xc6, 0x33, 0xc7, 0x33, 0xda, 0x33, 0xdb, 0x33, 0xdc, 0x33, 0xdd, 0x33, 0xde, 0x33, 0xdf, 0x33, 0xe0, 0x33, 0xe1, 0x33, 0xe2, 0x33, 0xe3, 0x33, 0xe4, 0x33, 0xe5, 0x33, 0x9e, 0x5a, 0x03, 0x04, 0x18, 0x32, 0x03, 0x88, 0x9e, 0x5a, 0xd9, 0x04, 0x02, 0x9e, 0x9e, 0x5a, 0xda, 0x04, 0x2a, 0x7a, 0x44, 0x3a, 0x00, 0x0f, 0xfe, 0x5a, 0x7f, 0x38, 0x35, 0x50, 
+0xc0, 0x33, 0x46, 0x5a, 0x55, 0x3a, 0x2b, 0x00, 0x2b, 0x7a, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x9e, 0x5a, 0x03, 0x04, 0x18, 0x32, 0x03, 0x88, 0x9e, 0x5a, 0xda, 0x04, 0x02, 0x9e, 0x9e, 0x5a, 0xd9, 0x04, 0x2a, 0x7a, 0x44, 0x3a, 0x00, 0x0f, 0xfe, 0x5a, 0x7f, 0x38, 0x46, 0x5a, 0x55, 0x3a, 0x2b, 0x00, 0x2b, 0x7a, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x1d, 0x70, 0x3f, 0x20, 0x00, 0x38, 0xec, 0x33, 0x09, 0x59, 0x5e, 0x59, 0xf0, 0x33, 0xf6, 0x33, 0xfc, 0x33, 0xfe, 0x33, 0x40, 0x60, 0x02, 0x68, 0x00, 0x63, 0x3c, 0x6b, 0xbe, 0xed, 0x0b, 0x9e, 0x00, 0x60, 0x3c, 0x68, 0x00, 0x63, 0x40, 0x6b, 0xbe, 0xed, 0x05, 0x9e, 0xd2, 0xed, 0x03, 0x9e, 0x9e, 0x5a, 0x31, 0x01, 0x93, 0x4c, 
+0x00, 0x34, 0x00, 0x9e, 0xbe, 0x5a, 0x2b, 0x00, 0xfe, 0x5a, 0xbe, 0x5a, 0x2a, 0x00, 0x3a, 0x38, 0x1d, 0x70, 0x3f, 0x20, 0x00, 0x38, 0x0e, 0x34, 0x09, 0x59, 0x01, 0x60, 0x5e, 0x59, 0x1e, 0x34, 0x1f, 0x34, 0x20, 0x34, 0x21, 0x34, 0x22, 0x34, 0x23, 0x34, 0x24, 0x34, 0x25, 0x34, 0x26, 0x34, 0x27, 0x34, 0x28, 0x34, 0x29, 0x34, 0x2a, 0x34, 0x2b, 0x34, 0x2c, 0x34, 0x2d, 0x34, 0x3a, 0x38, 0x3a, 0x38, 0x0d, 0x9e, 0x0c, 0x9e, 0x0b, 0x9e, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x07, 0x9e, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x04, 0x39, 0xff, 0x00, 0x2a, 0x79, 0x04, 0x39, 0x00, 0x03, 0xfe, 0x59, 0x7f, 0x38, 0x26, 0x59, 0x2b, 0x72, 0x3f, 0x22, 0x41, 0x2a, 0x2b, 0x7a, 0x3a, 0x38, 0x06, 0x60, 0x27, 0x78, 0x00, 0x60, 0x2b, 0x78, 0x2c, 0x78, 0x7e, 0xfb, 
+0x40, 0x34, 0x01, 0x60, 0x2d, 0x78, 0x1d, 0x70, 0x3f, 0x20, 0x00, 0x38, 0x48, 0x34, 0x09, 0x59, 0x5e, 0x59, 0x58, 0x34, 0x5b, 0x34, 0x5e, 0x34, 0x61, 0x34, 0x64, 0x34, 0x67, 0x34, 0x68, 0x34, 0x69, 0x34, 0x6a, 0x34, 0x6b, 0x34, 0x6c, 0x34, 0x6d, 0x34, 0x6e, 0x34, 0x77, 0x34, 0x7d, 0x34, 0x8a, 0x34, 0x9e, 0x58, 0x67, 0x00, 0x35, 0x9e, 0x9e, 0x58, 0x68, 0x00, 0x32, 0x9e, 0x9e, 0x58, 0x69, 0x00, 0x2f, 0x9e, 0x9e, 0x58, 0x6a, 0x00, 0x2c, 0x9e, 0x9e, 0x58, 0x6b, 0x00, 0x29, 0x9e, 0x28, 0x9e, 0x27, 0x9e, 0x26, 0x9e, 0x25, 0x9e, 0x24, 0x9e, 0x3a, 0x38, 0x3a, 0x38, 0x00, 0x60, 0xb9, 0xac, 0x01, 0x90, 0x00, 0xa8, 0xba, 0xac, 0x01, 0x90, 0x08, 0xa8, 0x2a, 0x78, 0x3a, 0x38, 0x00, 0x60, 0xbb, 0xac, 0x01, 0x90, 0x00, 0xa8, 0x2a, 0x78, 0x3a, 0x38, 0x00, 0x60, 0x00, 0x71, 0x21, 0xac, 0x83, 0xa9, 
+0x80, 0x34, 0x01, 0x90, 0x00, 0xa8, 0x29, 0xac, 0x01, 0x90, 0x08, 0xa8, 0x31, 0xac, 0x01, 0x90, 0x10, 0xa8, 0x2a, 0x78, 0x3a, 0x38, 0x00, 0x60, 0xa9, 0xac, 0x01, 0x90, 0x01, 0x60, 0x2a, 0x78, 0x3a, 0x38, 0x04, 0x39, 0x00, 0xff, 0xfe, 0x59, 0x04, 0x3a, 0xff, 0x00, 0x2a, 0x79, 0x2b, 0x7a, 0x3a, 0x38, 0x1d, 0x70, 0x06, 0x38, 0xa0, 0x00, 0x02, 0x8a, 0xa2, 0xaa, 0x3a, 0x38, 0x01, 0x60, 0xf9, 0xac, 0x01, 0x92, 0x00, 0xaa, 0x2a, 0x78, 0x3a, 0x38, 0x1d, 0x70, 0x3f, 0x20, 0x00, 0x38, 0xaa, 0x34, 0x09, 0x59, 0x5e, 0x59, 0xba, 0x34, 0xc0, 0x34, 0xc5, 0x34, 0xc6, 0x34, 0xc7, 0x34, 0xc8, 0x34, 0xc9, 0x34, 0xca, 0x34, 0xcb, 0x34, 0xcc, 0x34, 0xcd, 0x34, 0xce, 0x34, 0xcf, 0x34, 0xd0, 0x34, 0xd1, 0x34, 0xd2, 0x34, 0x01, 0x60, 0x90, 0xac, 0x01, 0x8a, 0x00, 0xaa, 0x2a, 0x78, 0x3a, 0x38, 0xfa, 0x86, 
+0xc0, 0x34, 0x03, 0x60, 0x14, 0x38, 0x00, 0x00, 0x2a, 0x78, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x1d, 0x70, 0x3f, 0x20, 0x00, 0x38, 0xda, 0x34, 0x09, 0x59, 0x5e, 0x59, 0xea, 0x34, 0xeb, 0x34, 0xec, 0x34, 0xed, 0x34, 0xf6, 0x34, 0xf7, 0x34, 0xf8, 0x34, 0xf9, 0x34, 0xfa, 0x34, 0xfb, 0x34, 0xfc, 0x34, 0xfd, 0x34, 0xfe, 0x34, 0xff, 0x34, 0x00, 0x35, 0x01, 0x35, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x1b, 0x63, 0x02, 0x6b, 0x69, 0x58, 0xbe, 0x58, 0x2b, 0x00, 0xfe, 0x58, 0xbe, 0x58, 0x2a, 0x00, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x37, 0x0c, 
+0x00, 0x35, 0x3a, 0x38, 0x3a, 0x38, 0x1d, 0x70, 0x3f, 0x20, 0x00, 0x38, 0x08, 0x35, 0x09, 0x59, 0x5e, 0x59, 0x18, 0x35, 0x19, 0x35, 0x1a, 0x35, 0x1b, 0x35, 0x1c, 0x35, 0x1d, 0x35, 0x1e, 0x35, 0x1f, 0x35, 0x20, 0x35, 0x21, 0x35, 0x22, 0x35, 0x23, 0x35, 0x24, 0x35, 0x25, 0x35, 0x26, 0x35, 0x27, 0x35, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x1d, 0x70, 0x06, 0x39, 0xf0, 0x00, 0x0e, 0x8a, 0x06, 0x39, 0xf1, 0x00, 0x2d, 0x8a, 0x06, 0x39, 0xf2, 0x00, 0x47, 0x8a, 0x06, 0x39, 0xfe, 0x00, 0x66, 0x8a, 0x06, 0x39, 0xff, 0x00, 0x6f, 0x8a, 0xa2, 0xaa, 0x3a, 0x38, 0x9e, 0x58, 0x08, 0x04, 0xfe, 0x58, 0x04, 0x38, 0xff, 0x00, 0x04, 0x39, 0xc0, 0x7a, 
+0x40, 0x35, 0xf0, 0x00, 0x7f, 0x38, 0x28, 0x59, 0x35, 0x39, 0x29, 0x00, 0x29, 0x79, 0x04, 0x39, 0x0f, 0x00, 0x7f, 0x38, 0x26, 0x59, 0x9e, 0x58, 0x08, 0x04, 0x04, 0x38, 0xff, 0x00, 0x04, 0x3a, 0xf0, 0x00, 0x7f, 0x38, 0x48, 0x5a, 0x41, 0x2a, 0x2a, 0x7a, 0x04, 0x39, 0x0f, 0x00, 0x7f, 0x38, 0x26, 0x59, 0x35, 0x39, 0x2b, 0x00, 0x2b, 0x79, 0x3a, 0x38, 0x20, 0x60, 0x04, 0x39, 0xf0, 0x00, 0x7f, 0x38, 0x28, 0x59, 0x29, 0x72, 0x44, 0x3a, 0xf0, 0x00, 0x22, 0x29, 0x29, 0x79, 0x04, 0x39, 0x0f, 0x00, 0x7f, 0x38, 0x26, 0x59, 0x01, 0x60, 0x04, 0x3a, 0xf0, 0x00, 0x7f, 0x38, 0x48, 0x5a, 0x41, 0x2a, 0x2a, 0x7a, 0x04, 0x39, 0x0f, 0x00, 0x7f, 0x38, 0x26, 0x59, 0x35, 0x39, 0x2b, 0x00, 0x2b, 0x79, 0x3a, 0x38, 0x9e, 0x58, 0x18, 0x04, 0xfe, 0x58, 0x04, 0x38, 0xff, 0x00, 0x04, 0x39, 0xf0, 0x00, 0xcc, 0xf8, 
+0x80, 0x35, 0x7f, 0x38, 0x28, 0x59, 0x25, 0x39, 0xf0, 0x00, 0x29, 0x79, 0x04, 0x39, 0x0f, 0x00, 0x7f, 0x38, 0x26, 0x59, 0x9e, 0x58, 0x18, 0x04, 0x04, 0x38, 0xff, 0x00, 0x04, 0x3a, 0xf0, 0x00, 0x7f, 0x38, 0x48, 0x5a, 0x41, 0x2a, 0x2a, 0x7a, 0x04, 0x39, 0x0f, 0x00, 0x7f, 0x38, 0x26, 0x59, 0x35, 0x39, 0x2b, 0x00, 0x2b, 0x79, 0x3a, 0x38, 0xc0, 0x60, 0x08, 0x68, 0x04, 0x39, 0xff, 0x00, 0x2b, 0x79, 0xfe, 0x58, 0x04, 0x39, 0xff, 0x00, 0x2a, 0x79, 0xfe, 0x61, 0x29, 0x79, 0x3a, 0x38, 0x30, 0x60, 0x0b, 0x68, 0x04, 0x39, 0xff, 0x00, 0x2b, 0x79, 0xfe, 0x58, 0x04, 0x39, 0xff, 0x00, 0x2a, 0x79, 0xff, 0x61, 0x29, 0x79, 0x3a, 0x38, 0x1d, 0x70, 0x7f, 0x38, 0x08, 0x58, 0x3f, 0x20, 0x00, 0x39, 0xbb, 0x35, 0x29, 0x58, 0x5e, 0x58, 0xcb, 0x35, 0xd8, 0x35, 0xd9, 0x35, 0xda, 0x35, 0xdb, 0x35, 0x47, 0x86, 
+0xc0, 0x35, 0xdc, 0x35, 0xfc, 0x35, 0x10, 0x36, 0x11, 0x36, 0x40, 0x36, 0x87, 0x36, 0x98, 0x36, 0xa2, 0x36, 0xee, 0x36, 0x58, 0x37, 0xab, 0x37, 0x1e, 0x70, 0x12, 0x61, 0x19, 0x48, 0x08, 0x88, 0x1f, 0x70, 0x34, 0x61, 0x19, 0x48, 0x04, 0x88, 0xff, 0x60, 0xff, 0x68, 0x18, 0xc7, 0x70, 0xc0, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x1d, 0x70, 0x06, 0x39, 0x58, 0x00, 0x07, 0x8a, 0x06, 0x39, 0x50, 0x00, 0x07, 0x8a, 0x06, 0x39, 0x51, 0x00, 0x0d, 0x8a, 0x3a, 0x38, 0xda, 0xa8, 0xf3, 0xaa, 0x3a, 0x38, 0xda, 0xaa, 0xc3, 0xaa, 0xf3, 0xaa, 0x00, 0x61, 0xbe, 0x59, 0x49, 0x00, 0xbe, 0x59, 0x4a, 0x00, 0x3a, 0x38, 0xda, 0xaa, 0xc3, 0xaa, 0xf3, 0xa8, 0x00, 0x61, 0xbe, 0x59, 0x49, 0x00, 0xbe, 0x59, 0x4a, 0x00, 0x3a, 0x38, 0x1d, 0x70, 0x06, 0x39, 0x60, 0x00, 0x07, 0x8a, 0xd4, 0x86, 
+0x00, 0x36, 0x06, 0x39, 0x68, 0x00, 0x07, 0x8a, 0x06, 0x39, 0x6c, 0x00, 0x07, 0x8a, 0x3a, 0x38, 0xb8, 0xa8, 0xc0, 0xaa, 0x3a, 0x38, 0xb8, 0xa8, 0xc0, 0xa8, 0x3a, 0x38, 0xb8, 0xaa, 0xc0, 0xaa, 0x3a, 0x38, 0x3a, 0x38, 0x1d, 0x70, 0x3f, 0x20, 0x00, 0x38, 0x20, 0x36, 0x09, 0x59, 0x1e, 0x70, 0x1f, 0x72, 0xd8, 0x22, 0xfe, 0x5a, 0x7f, 0x38, 0x48, 0x5a, 0x04, 0x38, 0xff, 0x00, 0x40, 0x28, 0x5e, 0x59, 0x30, 0x36, 0x31, 0x36, 0x32, 0x36, 0x33, 0x36, 0x34, 0x36, 0x35, 0x36, 0x36, 0x36, 0x37, 0x36, 0x38, 0x36, 0x39, 0x36, 0x3a, 0x36, 0x3b, 0x36, 0x3c, 0x36, 0x3d, 0x36, 0x3e, 0x36, 0x3f, 0x36, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x90, 0xbc, 
+0x40, 0x36, 0x1e, 0x70, 0xfe, 0x58, 0x15, 0x3a, 0x1f, 0x00, 0x1d, 0x70, 0x3f, 0x20, 0x00, 0x38, 0x4a, 0x36, 0x09, 0x59, 0x5e, 0x59, 0x5a, 0x36, 0x5d, 0x36, 0x60, 0x36, 0x63, 0x36, 0x66, 0x36, 0x69, 0x36, 0x6a, 0x36, 0x6b, 0x36, 0x6c, 0x36, 0x6d, 0x36, 0x6e, 0x36, 0x6f, 0x36, 0x70, 0x36, 0x71, 0x36, 0x77, 0x36, 0x78, 0x36, 0xbe, 0x5a, 0x62, 0x00, 0x3a, 0x38, 0xbe, 0x5a, 0x63, 0x00, 0x3a, 0x38, 0xbe, 0x5a, 0x64, 0x00, 0x3a, 0x38, 0xbe, 0x5a, 0x65, 0x00, 0x3a, 0x38, 0xbe, 0x5a, 0x66, 0x00, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x1e, 0x70, 0xbb, 0xaa, 0x00, 0xac, 0x01, 0x90, 0xbb, 0xa8, 0x3a, 0x38, 0x3a, 0x38, 0xa1, 0xaa, 0xa9, 0xaa, 0x1e, 0x70, 0x06, 0x39, 0x01, 0x00, 0x04, 0x8a, 0x06, 0x39, 0x00, 0x00, 0x5f, 0x25, 
+0x80, 0x36, 0x02, 0x8a, 0x3a, 0x38, 0xa9, 0xa8, 0xa9, 0xac, 0x01, 0x92, 0xa1, 0xa8, 0x3a, 0x38, 0x1d, 0x70, 0x06, 0x39, 0xa0, 0x00, 0x01, 0x8a, 0x3a, 0x38, 0x1e, 0x70, 0x06, 0x39, 0x01, 0x00, 0x04, 0x8a, 0x06, 0x39, 0x00, 0x00, 0x03, 0x8a, 0x3a, 0x38, 0xf9, 0xa8, 0x3a, 0x38, 0xf9, 0xa8, 0x3a, 0x38, 0x1d, 0x70, 0x06, 0x39, 0xb0, 0x00, 0x04, 0x8a, 0x06, 0x39, 0xb1, 0x00, 0x02, 0x8a, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x1d, 0x70, 0x06, 0x39, 0xc0, 0x00, 0x0a, 0x8a, 0x06, 0x39, 0xc1, 0x00, 0x19, 0x8a, 0x06, 0x39, 0xc2, 0x00, 0x27, 0x8a, 0x06, 0x39, 0xc3, 0x00, 0x32, 0x8a, 0x3a, 0x38, 0x1e, 0x70, 0x06, 0x39, 0x00, 0x00, 0x0d, 0x88, 0x1f, 0x70, 0x06, 0x39, 0x01, 0x00, 0x09, 0x88, 0xd8, 0xaa, 0xe9, 0xaa, 0x8d, 0xaa, 0x00, 0x60, 0xfe, 0x78, 0xfc, 0x78, 0xfd, 0x78, 0xbe, 0x58, 0x4c, 0xfc, 
+0xc0, 0x36, 0x00, 0x01, 0x3a, 0x38, 0x1e, 0x70, 0x06, 0x39, 0x00, 0x00, 0x0c, 0x88, 0x1f, 0x70, 0x06, 0x39, 0x01, 0x00, 0x08, 0x88, 0xd8, 0xa8, 0x01, 0x60, 0xfd, 0x78, 0x00, 0x60, 0xbe, 0x58, 0x43, 0x01, 0xbe, 0x58, 0x44, 0x01, 0x3a, 0x38, 0x1e, 0x70, 0x06, 0x39, 0x00, 0x00, 0x09, 0x88, 0x1f, 0x70, 0x06, 0x39, 0x01, 0x00, 0x05, 0x88, 0xf0, 0xaa, 0x9e, 0x58, 0x95, 0x04, 0xbe, 0x58, 0x4c, 0x00, 0x3a, 0x38, 0x1e, 0x70, 0x06, 0x39, 0x00, 0x00, 0x08, 0x88, 0x1f, 0x70, 0x06, 0x39, 0x01, 0x00, 0x04, 0x88, 0xf0, 0xa8, 0x00, 0x60, 0xbe, 0x58, 0x4c, 0x00, 0x3a, 0x38, 0x1d, 0x70, 0x06, 0x39, 0xd2, 0x00, 0x10, 0x8a, 0x06, 0x39, 0xd5, 0x00, 0x38, 0x8a, 0x06, 0x39, 0xd6, 0x00, 0x39, 0x8a, 0x06, 0x39, 0xd7, 0x00, 0x3a, 0x8a, 0x06, 0x39, 0xd8, 0x00, 0x43, 0x8a, 0x06, 0x39, 0xd9, 0x00, 0xf8, 0x16, 
+0x00, 0x37, 0x4d, 0x8a, 0x3a, 0x38, 0x1e, 0x70, 0xfe, 0x58, 0x15, 0x38, 0x1f, 0x00, 0xbe, 0x58, 0x3e, 0x01, 0x11, 0xc4, 0x1c, 0x70, 0xfe, 0x58, 0x15, 0x38, 0x1d, 0x00, 0xd3, 0x61, 0x54, 0x69, 0x01, 0x30, 0x41, 0xa9, 0x50, 0xb7, 0xe0, 0x2f, 0xd0, 0xb7, 0x41, 0xab, 0x1c, 0x70, 0xfe, 0x58, 0x15, 0x38, 0x1d, 0x00, 0x06, 0x39, 0xd2, 0x54, 0x09, 0x88, 0x06, 0x38, 0x88, 0xb5, 0xac, 0xb0, 0x1b, 0x60, 0x02, 0x68, 0x3e, 0x61, 0x01, 0x69, 0x1f, 0x38, 0x7a, 0x38, 0x00, 0x60, 0xac, 0xb0, 0x41, 0xa9, 0x50, 0xb7, 0x07, 0xaa, 0xd0, 0xb7, 0x41, 0xab, 0x3a, 0x38, 0x00, 0x60, 0xbe, 0x58, 0x33, 0x01, 0x3a, 0x38, 0x01, 0x60, 0xbe, 0x58, 0x33, 0x01, 0x3a, 0x38, 0x02, 0x60, 0xbe, 0x58, 0x33, 0x01, 0x00, 0x60, 0xbe, 0x58, 0x34, 0x01, 0xbe, 0x58, 0x35, 0x01, 0x1e, 0x70, 0xbe, 0x58, 0x36, 0x01, 0x06, 0xf4, 
+0x40, 0x37, 0x3a, 0x38, 0x02, 0x60, 0x01, 0x68, 0xbe, 0x58, 0x33, 0x01, 0x00, 0x60, 0xbe, 0x58, 0x34, 0x01, 0xbe, 0x58, 0x35, 0x01, 0x1e, 0x70, 0xbe, 0x58, 0x36, 0x01, 0x3a, 0x38, 0x02, 0x60, 0x03, 0x68, 0xbe, 0x58, 0x33, 0x01, 0x00, 0x60, 0xbe, 0x58, 0x34, 0x01, 0xbe, 0x58, 0x35, 0x01, 0x3a, 0x38, 0x1d, 0x70, 0x3f, 0x20, 0x00, 0x38, 0x68, 0x37, 0x09, 0x59, 0x1e, 0x70, 0x1f, 0x72, 0x44, 0x3a, 0xf0, 0x00, 0xfe, 0x5a, 0x7f, 0x38, 0x48, 0x5a, 0x04, 0x38, 0xff, 0x00, 0x40, 0x28, 0x5e, 0x59, 0x78, 0x37, 0x79, 0x37, 0x7b, 0x37, 0x94, 0x37, 0x9f, 0x37, 0xa0, 0x37, 0xa1, 0x37, 0xa2, 0x37, 0xa3, 0x37, 0xa4, 0x37, 0xa5, 0x37, 0xa6, 0x37, 0xa7, 0x37, 0xa8, 0x37, 0xa9, 0x37, 0xaa, 0x37, 0x3a, 0x38, 0x07, 0x78, 0x3a, 0x38, 0x1e, 0x70, 0xfe, 0x58, 0x15, 0x38, 0x1f, 0x00, 0x06, 0x39, 0xdf, 0xd0, 
+0x80, 0x37, 0x01, 0x00, 0x02, 0x88, 0xd1, 0xa8, 0x0f, 0x9e, 0x1e, 0x70, 0xfe, 0x58, 0x15, 0x38, 0x1f, 0x00, 0x06, 0x39, 0x01, 0x77, 0x08, 0x88, 0x9e, 0x58, 0x1b, 0x05, 0x18, 0x30, 0x04, 0x88, 0x01, 0x60, 0xbe, 0x58, 0x4a, 0x01, 0xd1, 0xa8, 0x3a, 0x38, 0xd9, 0xa8, 0x1e, 0x70, 0xfe, 0x58, 0x15, 0x38, 0x1f, 0x00, 0x06, 0x39, 0x01, 0x00, 0xf7, 0x8b, 0xbe, 0x58, 0x54, 0x05, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x3a, 0x38, 0x11, 0xc4, 0xa2, 0xa8, 0x06, 0x60, 0x27, 0x78, 0x95, 0x60, 0x28, 0x78, 0x1e, 0x70, 0x2a, 0x78, 0x1d, 0x70, 0x29, 0x78, 0xfe, 0x58, 0x15, 0x38, 0x1e, 0x00, 0x03, 0x59, 0x24, 0x38, 0x00, 0xff, 0xfe, 0x58, 0x2b, 0x78, 0x24, 0x38, 0xff, 0x00, 0xdf, 0xea, 
+0xc0, 0x37, 0x2c, 0x78, 0xf1, 0x60, 0x2d, 0x78, 0x3a, 0x38, 0x11, 0xc4, 0xa2, 0xa8, 0x06, 0x60, 0x27, 0x78, 0x97, 0x60, 0x28, 0x78, 0x1e, 0x70, 0x2a, 0x78, 0x1d, 0x70, 0x29, 0x78, 0xfe, 0x58, 0x15, 0x38, 0x1e, 0x00, 0x00, 0x61, 0x00, 0x62, 0x3c, 0x6a, 0x1a, 0x48, 0x01, 0x80, 0x09, 0x59, 0x24, 0x38, 0x00, 0xff, 0xfe, 0x58, 0x2b, 0x78, 0x24, 0x38, 0xff, 0x00, 0x2c, 0x78, 0xf1, 0x60, 0x2d, 0x78, 0x3a, 0x38, 0x11, 0xc4, 0x1d, 0x70, 0xfe, 0x58, 0x15, 0x38, 0x1e, 0x00, 0x1f, 0x71, 0xfe, 0x59, 0x35, 0x39, 0x20, 0x00, 0x06, 0x3a, 0xf0, 0xff, 0x0b, 0x8a, 0x06, 0x3a, 0xf1, 0xff, 0x06, 0x8a, 0x06, 0x3a, 0xf2, 0xff, 0x07, 0x8a, 0x00, 0x9e, 0x3b, 0x58, 0x06, 0x9e, 0xc1, 0xa8, 0x04, 0x9e, 0xc1, 0xaa, 0x02, 0x9e, 0xf1, 0xa8, 0x00, 0x9e, 0x3a, 0x38, 0x98, 0x3f, 0x76, 0x32, 0xba, 0xac, 0x80, 0x31, 
+0x00, 0x38, 0x98, 0x3c, 0x76, 0x32, 0x81, 0xaa, 0xb9, 0xaa, 0x1d, 0x70, 0x3d, 0x78, 0x1e, 0x70, 0x3e, 0x78, 0x1f, 0x70, 0x3f, 0x78, 0x20, 0x70, 0x40, 0x78, 0x21, 0x70, 0x41, 0x78, 0x22, 0x70, 0x42, 0x78, 0x23, 0x70, 0x43, 0x78, 0x24, 0x70, 0x44, 0x78, 0x25, 0x70, 0x45, 0x78, 0x26, 0x70, 0x46, 0x78, 0x00, 0x63, 0x3e, 0x70, 0x78, 0x48, 0x62, 0x88, 0x00, 0x63, 0x3d, 0x70, 0x38, 0xac, 0x03, 0x92, 0x3f, 0x7b, 0x40, 0x7b, 0x41, 0x7b, 0x30, 0xac, 0x03, 0x92, 0x42, 0x7b, 0x43, 0x7b, 0x44, 0x7b, 0x28, 0xac, 0x01, 0x92, 0x45, 0x7b, 0x20, 0xac, 0x01, 0x92, 0x46, 0x7b, 0x00, 0x63, 0x2a, 0x7b, 0x04, 0x39, 0x0f, 0x00, 0xe0, 0xaa, 0x19, 0xac, 0x01, 0x90, 0xe0, 0xa8, 0x20, 0x3a, 0x3a, 0x38, 0x49, 0x5b, 0x5e, 0x5b, 0x44, 0x38, 0x44, 0x38, 0x44, 0x38, 0x58, 0x38, 0x58, 0x38, 0x80, 0x01, 0x5b, 0x45, 
+0x40, 0x38, 0x80, 0x01, 0xee, 0x01, 0xb7, 0x01, 0x25, 0x02, 0x0f, 0x63, 0x74, 0x3c, 0x3d, 0x00, 0x7f, 0x38, 0x8a, 0x5c, 0x47, 0x7c, 0x9b, 0xa8, 0x80, 0x63, 0x01, 0x6b, 0x9e, 0x5f, 0xab, 0x04, 0x07, 0xac, 0x02, 0x90, 0xca, 0x63, 0x02, 0x6b, 0x08, 0xac, 0x25, 0x90, 0xee, 0x63, 0x01, 0x6b, 0x22, 0x9e, 0x0f, 0x63, 0x74, 0x3c, 0x3d, 0x00, 0x7f, 0x38, 0x8a, 0x5c, 0x47, 0x7c, 0x9b, 0xa8, 0xb7, 0x63, 0x01, 0x6b, 0x10, 0xac, 0x17, 0x90, 0x9e, 0x5b, 0x33, 0x01, 0x03, 0xac, 0x0e, 0x92, 0x0b, 0xac, 0x0f, 0x92, 0x9e, 0x5b, 0x49, 0x01, 0x60, 0x3b, 0x6f, 0x38, 0x69, 0x5b, 0x0b, 0x9e, 0x93, 0x02, 0x25, 0x02, 0x6f, 0x03, 0x38, 0x03, 0xca, 0x02, 0x01, 0x03, 0xc0, 0x63, 0x08, 0x6b, 0x02, 0x9e, 0x30, 0x63, 0x0b, 0x6b, 0xbe, 0x5b, 0x02, 0x01, 0xb9, 0xa8, 0x3a, 0x38, 0x3d, 0x70, 0x04, 0x39, 0xe5, 0xba, 
+0x80, 0x38, 0x07, 0x00, 0x20, 0x3a, 0x85, 0x38, 0x49, 0x5b, 0x5e, 0x5b, 0x8a, 0x38, 0x8a, 0x38, 0x8a, 0x38, 0x94, 0x38, 0x94, 0x38, 0x0f, 0x63, 0x74, 0x3c, 0x3d, 0x00, 0x7f, 0x38, 0x8a, 0x5c, 0x47, 0x7c, 0x9b, 0xa8, 0x08, 0xac, 0x0a, 0x90, 0x09, 0x9e, 0x0f, 0x63, 0x74, 0x3c, 0x3d, 0x00, 0x7f, 0x38, 0x8a, 0x5c, 0x47, 0x7c, 0x9b, 0xa8, 0x10, 0xac, 0x00, 0x90, 0x48, 0x7b, 0xb9, 0xa8, 0x3a, 0x38, 0x00, 0x63, 0x3e, 0x70, 0x78, 0x48, 0xbd, 0x88, 0x3f, 0x71, 0x26, 0x3a, 0x00, 0x00, 0x42, 0x8a, 0x24, 0x3a, 0xff, 0x00, 0x27, 0x7a, 0x48, 0x72, 0x1a, 0x7a, 0x90, 0x62, 0x28, 0x7a, 0x47, 0x72, 0x29, 0x7a, 0x81, 0xa8, 0xa2, 0xa8, 0x93, 0xc6, 0xb9, 0xac, 0xa7, 0x90, 0xa2, 0xac, 0xfc, 0x93, 0x40, 0x71, 0x26, 0x3a, 0x00, 0x00, 0x2e, 0x8a, 0x24, 0x3a, 0xff, 0x00, 0x27, 0x7a, 0x3f, 0x71, 0x14, 0xd9, 
+0xc0, 0x38, 0x1a, 0x11, 0x28, 0x59, 0x30, 0x3b, 0x1a, 0x00, 0x1a, 0x7b, 0x90, 0x62, 0x28, 0x7a, 0x47, 0x72, 0x19, 0x02, 0x29, 0x7a, 0x81, 0xa8, 0xa2, 0xa8, 0x93, 0xc6, 0xb9, 0xac, 0x8e, 0x90, 0xa2, 0xac, 0xfc, 0x93, 0x41, 0x71, 0x26, 0x3a, 0x00, 0x00, 0x15, 0x8a, 0x24, 0x3a, 0xff, 0x00, 0x27, 0x7a, 0x40, 0x71, 0x1a, 0x11, 0x28, 0x59, 0x30, 0x3b, 0x1a, 0x00, 0x1a, 0x7b, 0x90, 0x62, 0x28, 0x7a, 0x47, 0x72, 0x1a, 0x02, 0x29, 0x7a, 0x81, 0xa8, 0xa2, 0xa8, 0x93, 0xc6, 0xb9, 0xac, 0x75, 0x90, 0xa2, 0xac, 0xfc, 0x93, 0x42, 0x71, 0x26, 0x3a, 0x00, 0x00, 0x44, 0x8a, 0x24, 0x3a, 0xff, 0x00, 0x27, 0x7a, 0x48, 0x72, 0x40, 0x3b, 0x1b, 0x00, 0x1a, 0x7b, 0x91, 0x62, 0x28, 0x7a, 0x47, 0x72, 0x29, 0x7a, 0x81, 0xa8, 0xa2, 0xa8, 0x93, 0xc6, 0xb9, 0xac, 0x5f, 0x90, 0xa2, 0xac, 0xfc, 0x93, 0xfa, 0x09, 
+0x00, 0x39, 0x43, 0x71, 0x26, 0x3a, 0x00, 0x00, 0x2e, 0x8a, 0x24, 0x3a, 0xff, 0x00, 0x27, 0x7a, 0x42, 0x71, 0x1a, 0x11, 0x28, 0x59, 0x30, 0x3b, 0x1a, 0x00, 0x1a, 0x7b, 0x91, 0x62, 0x28, 0x7a, 0x47, 0x72, 0x19, 0x02, 0x29, 0x7a, 0x81, 0xa8, 0xa2, 0xa8, 0x93, 0xc6, 0xb9, 0xac, 0x46, 0x90, 0xa2, 0xac, 0xfc, 0x93, 0x44, 0x71, 0x26, 0x3a, 0x00, 0x00, 0xcd, 0x8b, 0x24, 0x3a, 0xff, 0x00, 0x27, 0x7a, 0x43, 0x71, 0x1a, 0x11, 0x28, 0x59, 0x30, 0x3b, 0x1a, 0x00, 0x1a, 0x7b, 0x91, 0x62, 0x28, 0x7a, 0x47, 0x72, 0x1a, 0x02, 0x29, 0x7a, 0x81, 0xa8, 0xa2, 0xa8, 0x93, 0xc6, 0xb9, 0xac, 0x2d, 0x90, 0xa2, 0xac, 0xfc, 0x93, 0x45, 0x71, 0x26, 0x3a, 0x00, 0x00, 0x12, 0x8a, 0x24, 0x3a, 0xff, 0x00, 0x27, 0x7a, 0x48, 0x72, 0x50, 0x3a, 0x0a, 0x04, 0x1a, 0x7a, 0x92, 0x62, 0x28, 0x7a, 0x47, 0x72, 0xc9, 0x59, 
+0x40, 0x39, 0x29, 0x7a, 0x81, 0xa8, 0xa2, 0xa8, 0x93, 0xc6, 0xb9, 0xac, 0x17, 0x90, 0xa2, 0xac, 0xfc, 0x93, 0x46, 0x71, 0x26, 0x3a, 0x00, 0x00, 0x10, 0x8a, 0x24, 0x3a, 0xff, 0x00, 0x27, 0x7a, 0x2a, 0x62, 0x1a, 0x7a, 0x94, 0x62, 0x28, 0x7a, 0x47, 0x72, 0x29, 0x7a, 0x81, 0xaa, 0xa2, 0xa8, 0x93, 0xc6, 0xb9, 0xac, 0x03, 0x90, 0xa2, 0xac, 0xfc, 0x93, 0x3a, 0x38, 0x81, 0xaa, 0xa2, 0xaa, 0x95, 0xc6, 0x3a, 0x38, 0x00, 0x62, 0x2a, 0x7a, 0x48, 0x72, 0x48, 0x76, 0x1a, 0x7a, 0xa0, 0xac, 0x4e, 0x92, 0x3f, 0x71, 0x26, 0x3a, 0x00, 0x00, 0x40, 0x8a, 0x24, 0x3a, 0xff, 0x00, 0x27, 0x7a, 0x93, 0x62, 0x28, 0x7a, 0x47, 0x72, 0x29, 0x7a, 0x81, 0xa8, 0xa2, 0xa8, 0x93, 0xc6, 0xb9, 0xac, 0xe5, 0x91, 0xa2, 0xac, 0xfc, 0x93, 0x40, 0x71, 0x26, 0x3a, 0x00, 0x00, 0x2e, 0x8a, 0x24, 0x3a, 0xff, 0x00, 0x84, 0x35, 
+0x80, 0x39, 0x27, 0x7a, 0x3f, 0x71, 0x1b, 0x11, 0x28, 0x59, 0x30, 0x3b, 0x1a, 0x00, 0x1a, 0x7b, 0x93, 0x62, 0x28, 0x7a, 0x47, 0x72, 0x19, 0x02, 0x29, 0x7a, 0x81, 0xa8, 0xa2, 0xa8, 0x93, 0xc6, 0xb9, 0xac, 0xcc, 0x91, 0xa2, 0xac, 0xfc, 0x93, 0x41, 0x71, 0x26, 0x3a, 0x00, 0x00, 0x15, 0x8a, 0x24, 0x3a, 0xff, 0x00, 0x27, 0x7a, 0x40, 0x71, 0x1b, 0x11, 0x28, 0x59, 0x30, 0x3b, 0x1a, 0x00, 0x1a, 0x7b, 0x93, 0x62, 0x28, 0x7a, 0x47, 0x72, 0x1a, 0x02, 0x29, 0x7a, 0x81, 0xa8, 0xa2, 0xa8, 0x93, 0xc6, 0xb9, 0xac, 0xb3, 0x91, 0xa2, 0xac, 0xfc, 0x93, 0x2a, 0x72, 0x19, 0x02, 0x2a, 0x7a, 0x56, 0x3a, 0x3e, 0x00, 0xaa, 0x8b, 0x1a, 0x70, 0x19, 0x00, 0x1a, 0x78, 0xb2, 0x9f, 0x3f, 0x71, 0x26, 0x3a, 0x00, 0x00, 0x40, 0x8a, 0x24, 0x3a, 0xff, 0x00, 0x27, 0x7a, 0x93, 0x62, 0x28, 0x7a, 0x47, 0x72, 0xf7, 0xfc, 
+0xc0, 0x39, 0x29, 0x7a, 0x81, 0xa8, 0xa2, 0xa8, 0x93, 0xc6, 0xb9, 0xac, 0x97, 0x91, 0xa2, 0xac, 0xfc, 0x93, 0x40, 0x71, 0x26, 0x3a, 0x00, 0x00, 0x2e, 0x8a, 0x24, 0x3a, 0xff, 0x00, 0x27, 0x7a, 0x3f, 0x71, 0x1b, 0x11, 0x28, 0x59, 0x30, 0x3b, 0x1a, 0x00, 0x1a, 0x7b, 0x93, 0x62, 0x28, 0x7a, 0x47, 0x72, 0x19, 0x02, 0x29, 0x7a, 0x81, 0xa8, 0xa2, 0xa8, 0x93, 0xc6, 0xb9, 0xac, 0x7e, 0x91, 0xa2, 0xac, 0xfc, 0x93, 0x41, 0x71, 0x26, 0x3a, 0x00, 0x00, 0x15, 0x8a, 0x24, 0x3a, 0xff, 0x00, 0x27, 0x7a, 0x40, 0x71, 0x1b, 0x11, 0x28, 0x59, 0x30, 0x3b, 0x1a, 0x00, 0x1a, 0x7b, 0x93, 0x62, 0x28, 0x7a, 0x47, 0x72, 0x1a, 0x02, 0x29, 0x7a, 0x81, 0xa8, 0xa2, 0xa8, 0x93, 0xc6, 0xb9, 0xac, 0x65, 0x91, 0xa2, 0xac, 0xfc, 0x93, 0x2a, 0x72, 0x19, 0x02, 0x2a, 0x7a, 0x56, 0x3a, 0x3e, 0x00, 0x5c, 0x8b, 0xe1, 0xbb, 
+0x00, 0x3a, 0xb5, 0x9f, 0xb2, 0xa8, 0xa2, 0xa8, 0xaa, 0xaa, 0x00, 0x60, 0x1b, 0x78, 0x82, 0xac, 0x05, 0x92, 0x52, 0xb2, 0x3a, 0xaa, 0xd2, 0xb2, 0xf9, 0xab, 0x03, 0x9e, 0xe9, 0xab, 0x28, 0x70, 0xf9, 0xb0, 0x93, 0xc6, 0x82, 0xac, 0x02, 0x92, 0xf1, 0xad, 0xfe, 0x91, 0x3e, 0x5f, 0x3e, 0x5e, 0x3e, 0x5d, 0x3e, 0x5c, 0x3e, 0x5b, 0x3e, 0x5a, 0x3e, 0x59, 0x3e, 0x58, 0x80, 0xb8, 0x81, 0xb8, 0x5a, 0x38, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xea, 0xde, 
+0x40, 0x3a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3a, 
+0x80, 0x3a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x40, 0x3a, 
+0xc0, 0x3a, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x3a, 
+0x00, 0x3b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x3a, 
+0x40, 0x3b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3b, 
+0x80, 0x3b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x40, 0x3b, 
+0xc0, 0x3b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x3b, 
+0x00, 0x3c, 0x00, 0x00, 0x22, 0x36, 0x00, 0x01, 0x22, 0x36, 0x01, 0x02, 0x21, 0x36, 0x01, 0x03, 0x21, 0x36, 0x02, 0x04, 0x20, 0x36, 0x02, 0x85, 0x20, 0xb6, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x98, 0x8f, 
+0x40, 0x3c, 0x00, 0x00, 0x22, 0x36, 0x00, 0x01, 0x22, 0x36, 0x01, 0x02, 0x21, 0x36, 0x01, 0x03, 0x21, 0x36, 0x02, 0x04, 0x20, 0x36, 0x02, 0x85, 0x20, 0xb6, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xd8, 0x8f, 
+0x80, 0x3c, 0x00, 0x00, 0x22, 0x36, 0x00, 0x01, 0x22, 0x36, 0x01, 0x02, 0x21, 0x36, 0x01, 0x03, 0x21, 0x36, 0x02, 0x04, 0x20, 0x36, 0x02, 0x85, 0x20, 0xb6, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x18, 0x90, 
+0xc0, 0x3c, 0x15, 0xea, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x96, 0x26, 
+0x00, 0x3d, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7e, 0x43, 
+0x40, 0x3d, 0x23, 0x00, 0x00, 0x1b, 0x22, 0x01, 0x01, 0x1c, 0x21, 0x02, 0x02, 0x1d, 0x20, 0x03, 0x03, 0x1e, 0x1f, 0x04, 0x04, 0x1f, 0x1e, 0x05, 0x05, 0x20, 0x1d, 0x06, 0x06, 0x21, 0x1c, 0x07, 0x07, 0x22, 0x1b, 0x08, 0x08, 0x23, 0x1a, 0x09, 0x09, 0x24, 0x19, 0x0a, 0x0a, 0x25, 0x18, 0x0b, 0x0b, 0x26, 0x17, 0x0c, 0x0c, 0x27, 0x16, 0x0d, 0x0d, 0x28, 0x15, 0x0e, 0x0e, 0x29, 0x14, 0x8f, 0x0f, 0xaa, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x50, 0xdf, 
+0x80, 0x3d, 0x0f, 0x00, 0x22, 0x1b, 0x10, 0x01, 0x21, 0x1c, 0x11, 0x02, 0x20, 0x1d, 0x12, 0x03, 0x1f, 0x1e, 0x13, 0x04, 0x1e, 0x1f, 0x14, 0x05, 0x15, 0x20, 0x4d, 0x07, 0x63, 0x08, 0x0e, 0x86, 0x24, 0xf6, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x50, 0x8a, 
+0xc0, 0x3d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x3d, 
+0x00, 0x3e, 0x0c, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x02, 0xd5, 0x01, 0x07, 0x00, 0x03, 0x11, 0xf0, 0x14, 0x06, 0x00, 0x06, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x75, 0x00, 0x5f, 0x01, 0xea, 0x00, 0x40, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x40, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x19, 0x00, 0x0f, 0x00, 0x28, 0x00, 0x00, 0x08, 0x00, 0x0b, 0x00, 0x0c, 0x00, 0x0a, 0x00, 0x09, 0x39, 0x00, 0x47, 0x02, 0x39, 0x00, 0x9c, 0x01, 0x3c, 0xa4, 
+0x40, 0x3e, 0xeb, 0x00, 0x91, 0x00, 0x91, 0x00, 0x40, 0x01, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfb, 0xff, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x01, 0x00, 0x64, 0x00, 0x64, 0x00, 0xc8, 0x00, 0x19, 0x00, 0x40, 0x00, 0x04, 0x00, 0x07, 0x00, 0x20, 0x03, 0xbc, 0x02, 0x00, 0x00, 0xc8, 0x00, 0xc8, 0x00, 0xc8, 0x00, 0xc8, 0x00, 0xc8, 0x00, 0x90, 0x01, 0x96, 0x00, 0x96, 0x00, 0x96, 0x00, 0x96, 0x00, 0x96, 0x00, 0x2c, 0x01, 0x05, 0x00, 0x05, 0x00, 0x05, 0x00, 0x05, 0x00, 0x05, 0x00, 0x04, 0x00, 0x05, 0x00, 0x05, 0x00, 0x00, 0x00, 0xb8, 0x0b, 0x32, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x30, 0x75, 0x64, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x64, 0x00, 0x1e, 0x00, 0x64, 0x00, 0x0a, 0x00, 0x0f, 0x27, 0x2c, 0x01, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x2c, 0x01, 0xfd, 0x00, 
+0x80, 0x3e, 0x01, 0x00, 0xfa, 0x00, 0x84, 0x03, 0x07, 0x00, 0x32, 0x00, 0x96, 0x00, 0x00, 0x00, 0x08, 0x00, 0x26, 0x80, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x14, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0xe8, 0x03, 0x63, 0x00, 0x63, 0x00, 0x05, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x19, 0x00, 0x2c, 0x01, 0x05, 0x00, 0xc8, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x14, 0x00, 0x20, 0x00, 0x28, 0x00, 0x32, 0x00, 0x32, 0x00, 0x32, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x50, 0x00, 0xac, 0x0d, 0x5e, 0x01, 0x20, 0x03, 0x90, 0x01, 0x00, 0x00, 0x14, 0x00, 0x14, 0x00, 0x14, 0x00, 0x14, 0x00, 0x00, 0x00, 0x03, 0x00, 0x28, 0x00, 0x0a, 0x00, 0x01, 0x00, 0x64, 0x00, 0x01, 0x00, 0x20, 0x00, 0x01, 0x00, 0x01, 0x00, 0x03, 0xe3, 
+0xc0, 0x3e, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x02, 0x2c, 0x01, 0x3e, 0x00, 0x02, 0x00, 0x28, 0x00, 0x96, 0x00, 0x03, 0x00, 0x20, 0x03, 0x04, 0x00, 0x14, 0x00, 0x03, 0x00, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x00, 0x00, 0x00, 0xfa, 0x00, 0xe6, 0x00, 0x40, 0x01, 0x00, 0x00, 0x10, 0x00, 0x01, 0x00, 0x06, 0x00, 0x64, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x4b, 
+0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x32, 0x00, 0x2c, 0x01, 0x2c, 0x01, 0x20, 0x03, 0x20, 0x03, 0xc8, 0x00, 0xc8, 0x00, 0x90, 0x01, 0x90, 0x01, 0x00, 0x00, 0x20, 0x03, 0x00, 0x00, 0x60, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32, 0x00, 0x46, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x50, 0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0xc4, 0x09, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x00, 0x46, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x46, 0x00, 0x2c, 0x01, 0x00, 0x00, 0x46, 0x00, 0x30, 0x75, 0x64, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x20, 0x03, 0xb0, 0x04, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe7, 0x03, 0xf4, 0x01, 0xb2, 0xe2, 
+0x40, 0x3f, 0x0a, 0x00, 0xe8, 0x03, 0x88, 0x13, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x46, 0x00, 0x00, 0x00, 0xf4, 0x01, 0x32, 0x00, 0x14, 0x00, 0x0a, 0x00, 0x14, 0x00, 0x32, 0x00, 0x08, 0x00, 0xd0, 0x07, 0x00, 0x00, 0xb0, 0x04, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xd2, 0x69, 
+0x80, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x40, 0x3f, 
+0xc0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xaa, 0x55, 0xcc, 0x33, 0xff, 0xff, 0xf8, 0xc8, 
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+
diff --git a/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/msg2133_driver_gesture.c b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/msg2133_driver_gesture.c
new file mode 100644
index 0000000..ad0a8b7
--- /dev/null
+++ b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/msg2133_driver_gesture.c
@@ -0,0 +1,3864 @@
+#include "tpd.h"
+#include <linux/interrupt.h>
+#include <cust_eint.h>
+#include <linux/i2c.h>
+#include <linux/sched.h>
+#include <linux/kthread.h>
+#include <linux/rtpm_prio.h>
+#include <linux/wait.h>
+#include <linux/time.h>
+#include <linux/delay.h>
+#include <mach/mt_gpio.h>//hanwc
+#include "tpd_custom_msg2133.h"
+
+#include <mach/mt_pm_ldo.h>
+#include <mach/mt_typedefs.h>
+#include <mach/mt_boot.h>
+#include "cust_gpio_usage.h"
+
+/*Open OR Close Debug Info*/
+#define __TPD_DEBUG__ 
+#define TP_DEBUG_ERR  printk
+/*Ctp Power Off In Sleep ? */
+//#define TPD_CLOSE_POWER_IN_SLEEP
+
+ //#define MSG_GESTURE_FUNCTION
+extern int ektf2k_probed;
+extern int have_ektf2k_chip_on_board;
+ 
+#ifdef __TP_PROXIMITY_SUPPORT__	// add by gpg
+#include <linux/hwmsensor.h>
+#include <linux/hwmsen_dev.h>
+#include <linux/wakelock.h>
+
+#define APS_TAG                  "[MSG2133] "
+#define APS_FUN(f)               printk(KERN_INFO APS_TAG"%s\n", __FUNCTION__)
+#define APS_ERR(fmt, args...)    printk(KERN_ERR  APS_TAG"%s %d : "fmt, __FUNCTION__, __LINE__, ##args)
+#define APS_LOG(fmt, args...)    printk(KERN_INFO APS_TAG fmt, ##args)
+#define APS_DBG(fmt, args...)    printk(KERN_INFO APS_TAG fmt, ##args)   
+
+static DEFINE_MUTEX(msg2133_sensor_mutex);
+
+static int g_bPsSensorOpen = 0;
+static int g_nPsSensorDate = 0;
+static int g_bSuspend = 0;
+static struct wake_lock ps_lock;
+
+static int msg2133_enable_ps(int enable);
+static void tpd_initialize_ps_sensor_function();
+extern bool g_call_state;
+#endif
+ 
+extern struct tpd_device *tpd;
+
+/*Use For Get CTP Data By I2C*/ 
+static struct i2c_client *i2c_client = NULL;
+
+/*Use For Firmware Update By I2C*/
+//static struct i2c_client     *msg21xx_i2c_client = NULL;
+
+//struct task_struct *thread = NULL;
+
+
+#ifdef MSG_GESTURE_FUNCTION
+#define MSG_GESTURE_FUNCTION_NODE_PROC
+#define CTP_GESTURE_FUNCTION_AUTHORITY_PROC 0777 
+
+
+#define MSG_GESTURE_FUNCTION_DOUBLECLICK_FLAG  0x01    ///0000 0001
+#define MSG_GESTURE_FUNCTION_UPDIRECT_FLAG     0x02    ///0000 0010
+#define MSG_GESTURE_FUNCTION_DOWNDIRECT_FLAG   0x04    ///0000 0100
+#define MSG_GESTURE_FUNCTION_LEFTDIRECT_FLAG   0x08    ///0000 1000
+#define MSG_GESTURE_FUNCTION_RIGHTDIRECT_FLAG  0x10    ///0001 0000
+
+static u8 tpd_gesture_flag = 0;////if 1,enter gesture mode success;
+
+///if 1; the tp return mode is this mode 
+static u8 tpd_gesture_double_click_mode = 0;
+static u8 tpd_gesture_up_direct_mode = 0;
+static u8 tpd_gesture_down_direct_mode = 0;
+static u8 tpd_gesture_left_direct_mode = 0;
+static u8 tpd_gesture_right_direct_mode = 0;
+
+static u8 set_gesture_flag = 0;  
+
+/////1:want to open this mode
+static u8 set_gesture_double_click_mode = 0x01;
+static u8 set_gesture_up_direct_mode = 0x02;
+static u8 set_gesture_down_direct_mode = 0x04;
+static u8 set_gesture_left_direct_mode = 0x08; 
+static u8 set_gesture_right_direct_mode = 0x10;
+
+////right_flag | left_flag | down_flag | up_flag | doubleclick_flag
+static u8 set_gesture_mode = 0;////
+#endif
+
+
+
+static DECLARE_WAIT_QUEUE_HEAD(waiter);
+//static DEFINE_MUTEX(i2c_access);
+//#define SWAP_X_Y
+typedef struct
+{
+    u16 X;
+    u16 Y;
+} TouchPoint_t;
+
+/*CTP Data Package*/
+typedef struct
+{
+    u8 nTouchKeyMode;
+    u8 nTouchKeyCode;
+    u8 nFingerNum;
+    TouchPoint_t Point[MAX_TOUCH_FINGER];
+} TouchScreenInfo_t;
+
+ 
+static void tpd_eint_interrupt_handler(void);
+static struct work_struct    msg21xx_wq;
+
+#ifdef TPD_HAVE_BUTTON 
+static int tpd_keys_local[TPD_KEY_COUNT] = TPD_KEYS;
+static int tpd_keys_dim_local[TPD_KEY_COUNT][4] = TPD_KEYS_DIM;
+#endif
+
+#if 0
+extern void mt65xx_eint_unmask(unsigned int line);
+extern void mt65xx_eint_mask(unsigned int line);
+extern void mt65xx_eint_set_hw_debounce(unsigned int eint_num, unsigned int ms);
+extern unsigned int mt65xx_eint_set_sens(unsigned int eint_num, unsigned int sens);
+extern void mt65xx_eint_registration(unsigned int eint_num, unsigned int is_deb_en, unsigned int pol, void (EINT_FUNC_PTR)(void), unsigned int is_auto_umask);
+#endif
+
+ 
+static int tpd_probe(struct i2c_client *client, const struct i2c_device_id *id);
+static int tpd_detect (struct i2c_client *client, struct i2c_board_info *info);
+static int tpd_remove(struct i2c_client *client);
+static int touch_event_handler(void *unused);
+ 
+
+static int tpd_flag = 0;
+static int tpd_halt=0;
+static int point_num = 0;
+static int p_point_num = 0;
+#if 0    
+#ifdef GPIO_CTP_RST_PIN
+#undef GPIO_CTP_RST_PIN
+
+#define GPIO_CTP_RST_PIN GPIO87
+#endif
+#endif
+#define TPD_OK 0
+
+ 
+ static const struct i2c_device_id msg2133_tpd_id[] = {{"msg2133",0},{}};
+
+ static struct i2c_board_info __initdata msg2133_i2c_tpd={ I2C_BOARD_INFO("msg2133", (0x26))};
+ 
+ 
+ static struct i2c_driver tpd_i2c_driver = {
+  .driver = {
+	 .name = "msg2133",//.name = TPD_DEVICE,
+//	 .owner = THIS_MODULE,
+  },
+  .probe = tpd_probe,
+  .remove = tpd_remove,
+  .id_table = msg2133_tpd_id,
+  .detect = tpd_detect,
+//  .address_data = &addr_data,
+ };
+ //start for update firmware //msz   for update firmware 20121126
+#define __FIRMWARE_UPDATE__
+#ifdef __FIRMWARE_UPDATE__
+
+#define FW_ADDR_MSG21XX   (0xC4>>1)
+#define FW_ADDR_MSG21XX_TP   (0x4C>>1)
+#define FW_UPDATE_ADDR_MSG21XX   (0x92>>1)
+
+static  char *fw_version;
+static u8 temp[94][1024];
+static int FwDataCnt;
+struct class *firmware_class;
+struct device *firmware_cmd_dev;
+
+static void HalTscrCReadI2CSeq(u8 addr, u8* read_data, u16 size)
+{
+    int ret;
+    i2c_client->addr = addr;
+    ret = i2c_master_recv(i2c_client, read_data, size);
+    i2c_client->addr = FW_ADDR_MSG21XX_TP;
+    
+    if(ret <= 0)
+    {
+		TP_DEBUG_ERR("HalTscrCReadI2CSeq error %d,addr = %d\n", ret,addr);
+	}
+}
+
+static void HalTscrCDevWriteI2CSeq(u8 addr, u8* data, u16 size)
+{
+    int ret;
+    i2c_client->addr = addr;
+    ret = i2c_master_send(i2c_client, data, size);
+    i2c_client->addr = FW_ADDR_MSG21XX_TP;
+
+    if(ret <= 0)
+    {
+		TP_DEBUG_ERR("HalTscrCDevWriteI2CSeq error %d,addr = %d\n", ret,addr);
+	}
+}
+
+
+static void dbbusDWIICEnterSerialDebugMode( void )
+{
+    u8 data[5];
+
+    // Enter the Serial Debug Mode
+    data[0] = 0x53;
+    data[1] = 0x45;
+    data[2] = 0x52;
+    data[3] = 0x44;
+    data[4] = 0x42;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, data, 5 );
+}
+
+static void dbbusDWIICStopMCU( void )
+{
+    u8 data[1];
+
+    // Stop the MCU
+    data[0] = 0x37;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, data, 1 );
+}
+
+static void dbbusDWIICIICUseBus( void )
+{
+    u8 data[1];
+
+    // IIC Use Bus
+    data[0] = 0x35;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, data, 1 );
+}
+
+static void dbbusDWIICIICReshape( void )
+{
+    u8 data[1];
+
+    // IIC Re-shape
+    data[0] = 0x71;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, data, 1 );
+}
+
+static void dbbusDWIICIICNotUseBus( void )
+{
+    u8 data[1];
+
+    // IIC Not Use Bus
+    data[0] = 0x34;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, data, 1 );
+}
+
+static void dbbusDWIICNotStopMCU( void )
+{
+    u8 data[1];
+
+    // Not Stop the MCU
+    data[0] = 0x36;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, data, 1 );
+}
+
+static void dbbusDWIICExitSerialDebugMode( void )
+{
+    u8 data[1];
+
+    // Exit the Serial Debug Mode
+    data[0] = 0x45;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, data, 1 );
+
+    // Delay some interval to guard the next transaction
+    //udelay ( 200 );        // delay about 0.2ms
+}
+
+static void drvISP_EntryIspMode( void )
+{
+    u8 bWriteData[5] =
+    {
+        0x4D, 0x53, 0x54, 0x41, 0x52
+    };
+
+    HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, bWriteData, 5 );
+}
+
+static u8 drvISP_Read( u8 n, u8* pDataToRead )  //First it needs send 0x11 to notify we want to get flash data back.
+{
+    u8 Read_cmd = 0x11;
+    unsigned char dbbus_rx_data[2] = {0xFF, 0xFF};
+    HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, &Read_cmd, 1 );
+    msleep(1);         // delay about 1000us*****
+    if( n == 1 )
+    {
+        HalTscrCReadI2CSeq( FW_UPDATE_ADDR_MSG21XX, &dbbus_rx_data[0], 2 );
+
+        // Ideally, the obtained dbbus_rx_data[0~1] stands for the following meaning:
+        //  dbbus_rx_data[0]  |  dbbus_rx_data[1]  | status
+        // -------------------+--------------------+--------
+        //       0x00         |       0x00         |  0x00
+        // -------------------+--------------------+--------
+        //       0x??         |       0x00         |  0x??
+        // -------------------+--------------------+--------
+        //       0x00         |       0x??         |  0x??
+        //                 
+        // Therefore, we build this field patch to return the status to *pDataToRead.
+        *pDataToRead = ( (dbbus_rx_data[0] >= dbbus_rx_data[1] )? \
+                          dbbus_rx_data[0]  : dbbus_rx_data[1] );
+    }
+    else
+    {
+        HalTscrCReadI2CSeq( FW_UPDATE_ADDR_MSG21XX, pDataToRead, n );
+    }
+
+    return 0;
+}
+
+static void drvISP_WriteEnable( void )
+{
+    u8 bWriteData[2] =
+    {
+        0x10, 0x06
+    };
+    u8 bWriteData1 = 0x12;
+    HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, bWriteData, 2 );
+    HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, &bWriteData1, 1 );
+}
+
+
+static void drvISP_ExitIspMode( void )
+{
+    u8 bWriteData = 0x24;
+    HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, &bWriteData, 1 );
+}
+
+static u8 drvISP_ReadStatus( void )
+{
+    u8 bReadData = 0;
+    u8 bWriteData[2] =
+    {
+        0x10, 0x05
+    };
+    u8 bWriteData1 = 0x12;
+
+    HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, bWriteData, 2 );
+    udelay(100);         // delay about 100us*****
+    drvISP_Read( 1, &bReadData );
+    HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, &bWriteData1, 1 );
+    return bReadData;
+}
+
+
+static void drvISP_ChipErase()
+{
+    u8 bWriteData[5] = { 0x00, 0x00, 0x00, 0x00, 0x00 };
+    u8 bWriteData1 = 0x12;
+    u32 timeOutCount = 0;
+    drvISP_WriteEnable();
+
+    //Enable write status register
+    bWriteData[0] = 0x10;
+    bWriteData[1] = 0x50;
+    HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, bWriteData, 2 );
+    HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, &bWriteData1, 1 );
+
+    //Write Status
+    bWriteData[0] = 0x10;
+    bWriteData[1] = 0x01;
+    bWriteData[2] = 0x00;
+    HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, bWriteData, 3 );
+    HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, &bWriteData1, 1 );
+
+    //Write disable
+    bWriteData[0] = 0x10;
+    bWriteData[1] = 0x04;
+    HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, bWriteData, 2 );
+    HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, &bWriteData1, 1 );
+    udelay( 100 );         // delay about 100us*****
+    timeOutCount = 0;
+    while( ( drvISP_ReadStatus() & 0x01 ) == 0x01 )
+    {
+        timeOutCount++;
+        if( timeOutCount >= 100000 ) break;  /* around 1 sec timeout */
+    }
+    drvISP_WriteEnable();
+
+    bWriteData[0] = 0x10;
+    bWriteData[1] = 0xC7;
+
+    HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, bWriteData, 2 );
+    HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, &bWriteData1, 1 );
+    udelay( 100 );         // delay about 100us*****
+    timeOutCount = 0;
+    while( ( drvISP_ReadStatus() & 0x01 ) == 0x01 )
+    {
+        timeOutCount++;
+        if( timeOutCount >= 500000 ) break;  /* around 5 sec timeout */
+    }
+}
+
+static void drvISP_Program( u16 k, u8* pDataToWrite )
+{
+    u16 i = 0;
+    u16 j = 0;
+    //u16 n = 0;
+    u8 TX_data[133];
+    u8 bWriteData1 = 0x12;
+    u32 addr = k * 1024;
+    u32 timeOutCount = 0;
+    for( j = 0; j < 8; j++ )  //128*8 cycle
+    {
+        TX_data[0] = 0x10;
+        TX_data[1] = 0x02;// Page Program CMD
+        TX_data[2] = ( addr + 128 * j ) >> 16;
+        TX_data[3] = ( addr + 128 * j ) >> 8;
+        TX_data[4] = ( addr + 128 * j );
+        for( i = 0; i < 128; i++ )
+        {
+            TX_data[5 + i] = pDataToWrite[j * 128 + i];
+        }
+        udelay( 100 );         // delay about 100us*****
+
+        timeOutCount = 0;
+        while( ( drvISP_ReadStatus() & 0x01 ) == 0x01 )
+        {
+            timeOutCount++;
+            if( timeOutCount >= 100000 ) break;  /* around 1 sec timeout */
+        }
+
+
+
+        drvISP_WriteEnable();
+        HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, TX_data, 133 ); //write 133 byte per cycle
+        HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, &bWriteData1, 1 );
+    }
+}
+
+
+static void drvISP_Verify( u16 k, u8* pDataToVerify )
+{
+    u16 i = 0, j = 0;
+    u8 bWriteData[5] =
+    {
+        0x10, 0x03, 0, 0, 0
+    };
+    u8 RX_data[256];
+    u8 bWriteData1 = 0x12;
+    u32 addr = k * 1024;
+    u8 index = 0;
+    u32 timeOutCount;
+    for( j = 0; j < 8; j++ )  //128*8 cycle
+    {
+        bWriteData[2] = ( u8 )( ( addr + j * 128 ) >> 16 );
+        bWriteData[3] = ( u8 )( ( addr + j * 128 ) >> 8 );
+        bWriteData[4] = ( u8 )( addr + j * 128 );
+        udelay( 100 );         // delay about 100us*****
+
+
+        timeOutCount = 0;
+        while( ( drvISP_ReadStatus() & 0x01 ) == 0x01 )
+        {
+            timeOutCount++;
+            if( timeOutCount >= 100000 ) break;  /* around 1 sec timeout */
+        }
+
+
+
+        HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, bWriteData, 5 );  //write read flash addr
+        udelay( 100 );          // delay about 100us*****
+        drvISP_Read( 128, RX_data );
+        HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, &bWriteData1, 1 );  //cmd end
+        for( i = 0; i < 128; i++ )  //log out if verify error
+        {
+            if( ( RX_data[i] != 0 ) && index < 10 )
+            {
+                //TPD_DEBUG("j=%d,RX_data[%d]=0x%x\n",j,i,RX_data[i]);
+                index++;
+            }
+            if( RX_data[i] != pDataToVerify[128 * j + i] )
+            {
+                TPD_DEBUG( "k=%d,j=%d,i=%d===============Update Firmware Error================", k, j, i );
+            }
+        }
+    }
+}
+
+static ssize_t firmware_update_show( struct device *dev,
+                                     struct device_attribute *attr, char *buf )
+{
+    return sprintf( buf, "%s\n", fw_version );
+}
+
+static void _HalTscrHWReset( void )
+{
+#if 0
+    gpio_direction_output( MSG21XX_RESET_GPIO, 1 );
+    gpio_set_value( MSG21XX_RESET_GPIO, 1 );
+    gpio_set_value( MSG21XX_RESET_GPIO, 0 );
+    mdelay( 10 ); /* Note that the RST must be in LOW 10ms at least */
+    gpio_set_value( MSG21XX_RESET_GPIO, 1 );
+    /* Enable the interrupt service thread/routine for INT after 50ms */
+    mdelay( 50 );
+#endif
+	mt_set_gpio_mode(GPIO_CTP_RST_PIN, GPIO_CTP_RST_PIN_M_GPIO);
+	mt_set_gpio_dir(GPIO_CTP_RST_PIN, GPIO_DIR_OUT);
+	mt_set_gpio_out(GPIO_CTP_RST_PIN, GPIO_OUT_ONE);
+
+	mt_set_gpio_mode(GPIO_CTP_RST_PIN, GPIO_CTP_RST_PIN_M_GPIO);
+	mt_set_gpio_dir(GPIO_CTP_RST_PIN, GPIO_DIR_OUT);
+	mt_set_gpio_out(GPIO_CTP_RST_PIN, GPIO_OUT_ZERO);  
+	msleep(10);
+	TPD_DMESG("############# msg2133 reset\n");
+	mt_set_gpio_mode(GPIO_CTP_RST_PIN, GPIO_CTP_RST_PIN_M_GPIO);
+	mt_set_gpio_dir(GPIO_CTP_RST_PIN, GPIO_DIR_OUT);
+	mt_set_gpio_out(GPIO_CTP_RST_PIN, GPIO_OUT_ONE);
+	msleep(300);
+
+}
+
+
+/* update the firmware part, used by apk*/
+/*show the fw version*/
+#define _FW_UPDATE_C3_
+#ifdef _FW_UPDATE_C3_
+#define u8         unsigned char
+#define u32        unsigned int
+#define s32        signed int
+
+u32 crc_tab[256];
+static u8 g_dwiic_info_data[1024];   // Buffer for info data
+#define N_BYTE_PER_TIME (8)//adai
+#define UPDATE_TIMES (1024/N_BYTE_PER_TIME)
+
+static ssize_t firmware_update_c2 ( struct device *dev,
+                                    struct device_attribute *attr, const char *buf, size_t size )
+	{
+		u8 i;
+		u8 dbbus_tx_data[4];
+		unsigned char dbbus_rx_data[2] = {0};
+	
+	
+		_HalTscrHWReset();
+		//1.Erase TP Flash first
+		dbbusDWIICEnterSerialDebugMode();
+		dbbusDWIICStopMCU();
+		dbbusDWIICIICUseBus();
+		dbbusDWIICIICReshape();
+		msleep( 300 );
+	
+	
+		// Disable the Watchdog
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x3C;
+		dbbus_tx_data[2] = 0x60;
+		dbbus_tx_data[3] = 0x55;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x3C;
+		dbbus_tx_data[2] = 0x61;
+		dbbus_tx_data[3] = 0xAA;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	
+		//Stop MCU
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x0F;
+		dbbus_tx_data[2] = 0xE6;
+		dbbus_tx_data[3] = 0x01;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	
+	
+		//set FRO to 50M
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x11;
+		dbbus_tx_data[2] = 0xE2;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 3 );
+		dbbus_rx_data[0] = 0;
+		dbbus_rx_data[1] = 0;
+		HalTscrCReadI2CSeq( FW_ADDR_MSG21XX, &dbbus_rx_data[0], 2 );
+		TPD_DEBUG( "dbbus_rx_data[0]=0x%x", dbbus_rx_data[0] );
+		dbbus_tx_data[3] = dbbus_rx_data[0] & 0xF7;  //Clear Bit 3
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	
+	
+	
+		//set MCU clock,SPI clock =FRO
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x1E;
+		dbbus_tx_data[2] = 0x22;
+		dbbus_tx_data[3] = 0x00;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x1E;
+		dbbus_tx_data[2] = 0x23;
+		dbbus_tx_data[3] = 0x00;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	
+	
+		// Enable slave's ISP ECO mode
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x08;
+		dbbus_tx_data[2] = 0x0c;
+		dbbus_tx_data[3] = 0x08;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	
+		//Enable SPI Pad
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x1E;
+		dbbus_tx_data[2] = 0x02;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 3 );
+		HalTscrCReadI2CSeq( FW_ADDR_MSG21XX, &dbbus_rx_data[0], 2 );
+		TPD_DEBUG( "dbbus_rx_data[0]=0x%x", dbbus_rx_data[0] );
+		dbbus_tx_data[3] = ( dbbus_rx_data[0] | 0x20 ); //Set Bit 5
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	
+	
+		//WP overwrite
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x1E;
+		dbbus_tx_data[2] = 0x0E;
+		dbbus_tx_data[3] = 0x02;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	
+	
+		//set pin high
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x1E;
+		dbbus_tx_data[2] = 0x10;
+		dbbus_tx_data[3] = 0x08;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	
+		dbbusDWIICIICNotUseBus();
+		dbbusDWIICNotStopMCU();
+		dbbusDWIICExitSerialDebugMode();
+	
+	
+	
+		drvISP_EntryIspMode();
+		drvISP_ChipErase();
+		_HalTscrHWReset();
+		mdelay( 300 );
+	
+		//2.Program and Verify
+		dbbusDWIICEnterSerialDebugMode();
+		dbbusDWIICStopMCU();
+		dbbusDWIICIICUseBus();
+		dbbusDWIICIICReshape();
+	
+	
+	
+		// Disable the Watchdog
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x3C;
+		dbbus_tx_data[2] = 0x60;
+		dbbus_tx_data[3] = 0x55;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x3C;
+		dbbus_tx_data[2] = 0x61;
+		dbbus_tx_data[3] = 0xAA;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	
+		//Stop MCU
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x0F;
+		dbbus_tx_data[2] = 0xE6;
+		dbbus_tx_data[3] = 0x01;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	
+	
+		//set FRO to 50M
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x11;
+		dbbus_tx_data[2] = 0xE2;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 3 );
+		dbbus_rx_data[0] = 0;
+		dbbus_rx_data[1] = 0;
+		HalTscrCReadI2CSeq( FW_ADDR_MSG21XX, &dbbus_rx_data[0], 2 );
+		TPD_DEBUG( "dbbus_rx_data[0]=0x%x", dbbus_rx_data[0] );
+		dbbus_tx_data[3] = dbbus_rx_data[0] & 0xF7;  //Clear Bit 3
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	
+	
+	
+		//set MCU clock,SPI clock =FRO
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x1E;
+		dbbus_tx_data[2] = 0x22;
+		dbbus_tx_data[3] = 0x00;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x1E;
+		dbbus_tx_data[2] = 0x23;
+		dbbus_tx_data[3] = 0x00;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	
+		// Enable slave's ISP ECO mode
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x08;
+		dbbus_tx_data[2] = 0x0c;
+		dbbus_tx_data[3] = 0x08;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	
+		//Enable SPI Pad
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x1E;
+		dbbus_tx_data[2] = 0x02;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 3 );
+		HalTscrCReadI2CSeq( FW_ADDR_MSG21XX, &dbbus_rx_data[0], 2 );
+		TPD_DEBUG( "dbbus_rx_data[0]=0x%x", dbbus_rx_data[0] );
+		dbbus_tx_data[3] = ( dbbus_rx_data[0] | 0x20 ); //Set Bit 5
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	
+	
+		//WP overwrite
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x1E;
+		dbbus_tx_data[2] = 0x0E;
+		dbbus_tx_data[3] = 0x02;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	
+	
+		//set pin high
+		dbbus_tx_data[0] = 0x10;
+		dbbus_tx_data[1] = 0x1E;
+		dbbus_tx_data[2] = 0x10;
+		dbbus_tx_data[3] = 0x08;
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	
+		dbbusDWIICIICNotUseBus();
+		dbbusDWIICNotStopMCU();
+		dbbusDWIICExitSerialDebugMode();
+	
+		///////////////////////////////////////
+		// Start to load firmware
+		///////////////////////////////////////
+		drvISP_EntryIspMode();
+	
+		for( i = 0; i < 94; i++ )  // total  94 KB : 1 byte per R/W
+		{
+			drvISP_Program( i, temp[i] );  // program to slave's flash
+			drvISP_Verify( i, temp[i] );  //verify data
+		}
+		TPD_DEBUG( "update OK\n" );
+		drvISP_ExitIspMode();
+		FwDataCnt = 0;
+		return size;
+	}
+
+
+static u32 Reflect ( u32 ref, char ch ) //unsigned int Reflect(unsigned int ref, char ch)
+{
+    u32 value = 0;
+    u32 i = 0;
+
+    for ( i = 1; i < ( ch + 1 ); i++ )
+    {
+        if ( ref & 1 )
+        {
+            value |= 1 << ( ch - i );
+        }
+        ref >>= 1;
+    }
+    return value;
+}
+
+u32 Get_CRC ( u32 text, u32 prevCRC, u32 *crc32_table )
+{
+    u32  ulCRC = prevCRC;
+	ulCRC = ( ulCRC >> 8 ) ^ crc32_table[ ( ulCRC & 0xFF ) ^ text];
+    return ulCRC ;
+}
+static void Init_CRC32_Table ( u32 *crc32_table )
+{
+    u32 magicnumber = 0x04c11db7;
+    u32 i = 0, j;
+
+    for ( i = 0; i <= 0xFF; i++ )
+    {
+        crc32_table[i] = Reflect ( i, 8 ) << 24;
+        for ( j = 0; j < 8; j++ )
+        {
+            crc32_table[i] = ( crc32_table[i] << 1 ) ^ ( crc32_table[i] & ( 0x80000000L ) ? magicnumber : 0 );
+        }
+        crc32_table[i] = Reflect ( crc32_table[i], 32 );
+    }
+}
+
+typedef enum
+{
+	EMEM_ALL = 0,
+	EMEM_MAIN,
+	EMEM_INFO,
+} EMEM_TYPE_t;
+
+static void drvDB_WriteReg8Bit ( u8 bank, u8 addr, u8 data )
+{
+    u8 tx_data[4] = {0x10, bank, addr, data};
+    HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX, tx_data, 4 );
+}
+
+static void drvDB_WriteReg ( u8 bank, u8 addr, u16 data )
+{
+    u8 tx_data[5] = {0x10, bank, addr, data & 0xFF, data >> 8};
+    HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX, tx_data, 5 );
+}
+
+static unsigned short drvDB_ReadReg ( u8 bank, u8 addr )
+{
+    u8 tx_data[3] = {0x10, bank, addr};
+    u8 rx_data[2] = {0};
+
+    HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX, tx_data, 3 );
+    HalTscrCReadI2CSeq ( FW_ADDR_MSG21XX, &rx_data[0], 2 );
+    return ( rx_data[1] << 8 | rx_data[0] );
+}
+
+static int drvTP_erase_emem_c32 ( void )
+{
+    /////////////////////////
+    //Erase  all
+    /////////////////////////
+    
+    //enter gpio mode
+    drvDB_WriteReg ( 0x16, 0x1E, 0xBEAF );
+
+    // before gpio mode, set the control pin as the orginal status
+    drvDB_WriteReg ( 0x16, 0x08, 0x0000 );
+    drvDB_WriteReg8Bit ( 0x16, 0x0E, 0x10 );
+    mdelay ( 10 ); //MCR_CLBK_DEBUG_DELAY ( 10, MCU_LOOP_DELAY_COUNT_MS );
+
+    // ptrim = 1, h'04[2]
+    drvDB_WriteReg8Bit ( 0x16, 0x08, 0x04 );
+    drvDB_WriteReg8Bit ( 0x16, 0x0E, 0x10 );
+    mdelay ( 10 ); //MCR_CLBK_DEBUG_DELAY ( 10, MCU_LOOP_DELAY_COUNT_MS );
+
+    // ptm = 6, h'04[12:14] = b'110
+    drvDB_WriteReg8Bit ( 0x16, 0x09, 0x60 );
+    drvDB_WriteReg8Bit ( 0x16, 0x0E, 0x10 );
+
+    // pmasi = 1, h'04[6]
+    drvDB_WriteReg8Bit ( 0x16, 0x08, 0x44 );
+    // pce = 1, h'04[11]
+    drvDB_WriteReg8Bit ( 0x16, 0x09, 0x68 );
+    // perase = 1, h'04[7]
+    drvDB_WriteReg8Bit ( 0x16, 0x08, 0xC4 );
+    // pnvstr = 1, h'04[5]
+    drvDB_WriteReg8Bit ( 0x16, 0x08, 0xE4 );
+    // pwe = 1, h'04[9]
+    drvDB_WriteReg8Bit ( 0x16, 0x09, 0x6A );
+    // trigger gpio load
+    drvDB_WriteReg8Bit ( 0x16, 0x0E, 0x10 );
+
+    return ( 1 );
+}
+
+static ssize_t firmware_update_c32 ( struct device *dev, struct device_attribute *attr,
+                                     const char *buf, size_t size,  EMEM_TYPE_t emem_type )
+{
+    u8  dbbus_tx_data[4];
+    u8  dbbus_rx_data[2] = {0};
+      // Buffer for slave's firmware
+
+    u32 i, j;
+    u32 crc_main, crc_main_tp;
+    u32 crc_info, crc_info_tp;
+    u16 reg_data = 0;
+
+    crc_main = 0xffffffff;
+    crc_info = 0xffffffff;
+
+#if 1
+    /////////////////////////
+    // Erase  all
+    /////////////////////////
+    drvTP_erase_emem_c32();
+    mdelay ( 1000 ); //MCR_CLBK_DEBUG_DELAY ( 1000, MCU_LOOP_DELAY_COUNT_MS );
+
+    //ResetSlave();
+    _HalTscrHWReset();
+    //drvDB_EnterDBBUS();
+    dbbusDWIICEnterSerialDebugMode();
+    dbbusDWIICStopMCU();
+    dbbusDWIICIICUseBus();
+    dbbusDWIICIICReshape();
+    mdelay ( 300 );
+
+    // Reset Watchdog
+    drvDB_WriteReg8Bit ( 0x3C, 0x60, 0x55 );
+    drvDB_WriteReg8Bit ( 0x3C, 0x61, 0xAA );
+
+    /////////////////////////
+    // Program
+    /////////////////////////
+/*
+    //polling 0x3CE4 is 0x1C70
+    do
+    {
+        reg_data = drvDB_ReadReg ( 0x3C, 0xE4 );
+    }
+    while ( reg_data != 0x1C70 );
+
+
+    drvDB_WriteReg ( 0x3C, 0xE4, 0xE38F );  // for all-blocks
+
+    //polling 0x3CE4 is 0x2F43
+    do
+    {
+        reg_data = drvDB_ReadReg ( 0x3C, 0xE4 );
+    }
+    while ( reg_data != 0x2F43 );
+
+*/
+    //calculate CRC 32
+    Init_CRC32_Table ( &crc_tab[0] );
+
+    for ( i = 0; i < 33; i++ ) // total  33 KB : 2 byte per R/W
+    {
+        if ( i < 32 )   //emem_main
+        {
+            if ( i == 31 )
+            {
+                temp[i][1014] = 0x5A; //Fmr_Loader[1014]=0x5A;
+                temp[i][1015] = 0xA5; //Fmr_Loader[1015]=0xA5;
+
+                for ( j = 0; j < 1016; j++ )
+                {
+                    //crc_main=Get_CRC(Fmr_Loader[j],crc_main,&crc_tab[0]);
+                    crc_main = Get_CRC ( temp[i][j], crc_main, &crc_tab[0] );
+                }
+            }
+            else
+            {
+                for ( j = 0; j < 1024; j++ )
+                {
+                    //crc_main=Get_CRC(Fmr_Loader[j],crc_main,&crc_tab[0]);
+                    crc_main = Get_CRC ( temp[i][j], crc_main, &crc_tab[0] );
+                }
+            }
+        }
+        else  // emem_info
+        {
+            for ( j = 0; j < 1024; j++ )
+            {
+                //crc_info=Get_CRC(Fmr_Loader[j],crc_info,&crc_tab[0]);
+                crc_info = Get_CRC ( temp[i][j], crc_info, &crc_tab[0] );
+            }
+        }
+
+        //drvDWIIC_MasterTransmit( DWIIC_MODE_DWIIC_ID, 1024, Fmr_Loader );
+        //HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX_TP, temp[i], 1024 );
+        #if 1
+        {
+            u32 n = 0;
+            for(n=0;n<UPDATE_TIMES;n++)
+            {
+                TP_DEBUG_ERR("i=%d,n=%d",i,n);
+                HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX_TP, temp[i]+n*N_BYTE_PER_TIME, N_BYTE_PER_TIME );
+            }
+        }
+        #else
+        HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX_TP, temp[i], 1024 );
+        #endif
+        // polling 0x3CE4 is 0xD0BC
+        do
+        {
+            reg_data = drvDB_ReadReg ( 0x3C, 0xE4 );
+        }
+        while ( reg_data != 0xD0BC );
+
+        drvDB_WriteReg ( 0x3C, 0xE4, 0x2F43 );
+    }
+
+    //write file done
+    drvDB_WriteReg ( 0x3C, 0xE4, 0x1380 );
+
+    mdelay ( 10 ); //MCR_CLBK_DEBUG_DELAY ( 10, MCU_LOOP_DELAY_COUNT_MS );
+    // polling 0x3CE4 is 0x9432
+    do
+    {
+        reg_data = drvDB_ReadReg ( 0x3C, 0xE4 );
+    }
+    while ( reg_data != 0x9432 );
+
+    crc_main = crc_main ^ 0xffffffff;
+    crc_info = crc_info ^ 0xffffffff;
+
+    // CRC Main from TP
+    crc_main_tp = drvDB_ReadReg ( 0x3C, 0x80 );
+    crc_main_tp = ( crc_main_tp << 16 ) | drvDB_ReadReg ( 0x3C, 0x82 );
+ 
+    //CRC Info from TP
+    crc_info_tp = drvDB_ReadReg ( 0x3C, 0xA0 );
+    crc_info_tp = ( crc_info_tp << 16 ) | drvDB_ReadReg ( 0x3C, 0xA2 );
+
+    //TP_DEBUG ( "crc_main=0x%x, crc_info=0x%x, crc_main_tp=0x%x, crc_info_tp=0x%x\n",
+      //         crc_main, crc_info, crc_main_tp, crc_info_tp );
+
+    //drvDB_ExitDBBUS();
+    if ( ( crc_main_tp != crc_main ) || ( crc_info_tp != crc_info ) )
+    {
+        //TP_DEBUG_ERR ( "update_C32 FAILED\n" );
+		_HalTscrHWReset();
+        FwDataCnt = 0;
+		mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM);
+        return ( 0 );
+    }
+
+    //TP_DEBUG_ERR ( "update_C32 OK\n" );
+	_HalTscrHWReset();
+    FwDataCnt = 0;
+	mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM);
+
+    return size;
+#endif
+}
+
+static int drvTP_erase_emem_c33 ( EMEM_TYPE_t emem_type )
+{
+    // stop mcu
+    drvDB_WriteReg ( 0x0F, 0xE6, 0x0001 );
+
+    //disable watch dog
+    drvDB_WriteReg8Bit ( 0x3C, 0x60, 0x55 );
+    drvDB_WriteReg8Bit ( 0x3C, 0x61, 0xAA );
+
+    // set PROGRAM password
+    drvDB_WriteReg8Bit ( 0x16, 0x1A, 0xBA );
+    drvDB_WriteReg8Bit ( 0x16, 0x1B, 0xAB );
+
+    //proto.MstarWriteReg(F1.loopDevice, 0x1618, 0x80);
+    drvDB_WriteReg8Bit ( 0x16, 0x18, 0x80 );
+
+    if ( emem_type == EMEM_ALL )
+    {
+        drvDB_WriteReg8Bit ( 0x16, 0x08, 0x10 ); //mark
+    }
+
+    drvDB_WriteReg8Bit ( 0x16, 0x18, 0x40 );
+    mdelay ( 10 );
+
+    drvDB_WriteReg8Bit ( 0x16, 0x18, 0x80 );
+
+    // erase trigger
+    if ( emem_type == EMEM_MAIN )
+    {
+        drvDB_WriteReg8Bit ( 0x16, 0x0E, 0x04 ); //erase main
+    }
+    else
+    {
+        drvDB_WriteReg8Bit ( 0x16, 0x0E, 0x08 ); //erase all block
+    }
+
+    return ( 1 );
+}
+
+static int drvTP_read_emem_dbbus_c33 ( EMEM_TYPE_t emem_type, u16 addr, size_t size, u8 *p, size_t set_pce_high )
+{
+    u32 i;
+
+    // Set the starting address ( must before enabling burst mode and enter riu mode )
+    drvDB_WriteReg ( 0x16, 0x00, addr );
+
+    // Enable the burst mode ( must before enter riu mode )
+    drvDB_WriteReg ( 0x16, 0x0C, drvDB_ReadReg ( 0x16, 0x0C ) | 0x0001 );
+
+    // Set the RIU password
+    drvDB_WriteReg ( 0x16, 0x1A, 0xABBA );
+
+    // Enable the information block if pifren is HIGH
+    if ( emem_type == EMEM_INFO )
+    {
+        // Clear the PCE
+        drvDB_WriteReg ( 0x16, 0x18, drvDB_ReadReg ( 0x16, 0x18 ) | 0x0080 );
+        mdelay ( 10 );
+
+        // Set the PIFREN to be HIGH
+        drvDB_WriteReg ( 0x16, 0x08, 0x0010 );
+    }
+
+    // Set the PCE to be HIGH
+    drvDB_WriteReg ( 0x16, 0x18, drvDB_ReadReg ( 0x16, 0x18 ) | 0x0040 );
+    mdelay ( 10 );
+
+    // Wait pce becomes 1 ( read data ready )
+    while ( ( drvDB_ReadReg ( 0x16, 0x10 ) & 0x0004 ) != 0x0004 );
+
+    for ( i = 0; i < size; i += 4 )
+    {
+        // Fire the FASTREAD command
+        drvDB_WriteReg ( 0x16, 0x0E, drvDB_ReadReg ( 0x16, 0x0E ) | 0x0001 );
+
+        // Wait the operation is done
+        while ( ( drvDB_ReadReg ( 0x16, 0x10 ) & 0x0001 ) != 0x0001 );
+
+        p[i + 0] = drvDB_ReadReg ( 0x16, 0x04 ) & 0xFF;
+        p[i + 1] = ( drvDB_ReadReg ( 0x16, 0x04 ) >> 8 ) & 0xFF;
+        p[i + 2] = drvDB_ReadReg ( 0x16, 0x06 ) & 0xFF;
+        p[i + 3] = ( drvDB_ReadReg ( 0x16, 0x06 ) >> 8 ) & 0xFF;
+    }
+
+    // Disable the burst mode
+    drvDB_WriteReg ( 0x16, 0x0C, drvDB_ReadReg ( 0x16, 0x0C ) & ( ~0x0001 ) );
+
+    // Clear the starting address
+    drvDB_WriteReg ( 0x16, 0x00, 0x0000 );
+
+    //Always return to main block
+    if ( emem_type == EMEM_INFO )
+    {
+        // Clear the PCE before change block
+        drvDB_WriteReg ( 0x16, 0x18, drvDB_ReadReg ( 0x16, 0x18 ) | 0x0080 );
+        mdelay ( 10 );
+        // Set the PIFREN to be LOW
+        drvDB_WriteReg ( 0x16, 0x08, drvDB_ReadReg ( 0x16, 0x08 ) & ( ~0x0010 ) );
+
+        drvDB_WriteReg ( 0x16, 0x18, drvDB_ReadReg ( 0x16, 0x18 ) | 0x0040 );
+        while ( ( drvDB_ReadReg ( 0x16, 0x10 ) & 0x0004 ) != 0x0004 );
+    }
+
+    // Clear the RIU password
+    drvDB_WriteReg ( 0x16, 0x1A, 0x0000 );
+
+    if ( set_pce_high )
+    {
+        // Set the PCE to be HIGH before jumping back to e-flash codes
+        drvDB_WriteReg ( 0x16, 0x18, drvDB_ReadReg ( 0x16, 0x18 ) | 0x0040 );
+        while ( ( drvDB_ReadReg ( 0x16, 0x10 ) & 0x0004 ) != 0x0004 );
+    }
+
+    return ( 1 );
+}
+
+
+static int drvTP_read_info_dwiic_c33 ( void )
+{
+    u8  dwiic_tx_data[5];
+    u8  dwiic_rx_data[4];
+    u16 dwiic_info_addrss,i;
+    u16 reg_data=0;
+    mdelay ( 300 );
+
+    // Stop Watchdog
+    drvDB_WriteReg8Bit ( 0x3C, 0x60, 0x55 );
+    drvDB_WriteReg8Bit ( 0x3C, 0x61, 0xAA );
+
+    drvDB_WriteReg ( 0x3C, 0xE4, 0xA4AB );
+
+	drvDB_WriteReg ( 0x1E, 0x04, 0x7d60 );
+
+    // TP SW reset
+    drvDB_WriteReg ( 0x1E, 0x04, 0x829F );
+	mdelay ( 1 );
+    dwiic_tx_data[0] = 0x10;
+    dwiic_tx_data[1] = 0x0F;
+    dwiic_tx_data[2] = 0xE6;
+    dwiic_tx_data[3] = 0x00;
+    HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX, dwiic_tx_data, 4 );	
+    mdelay ( 100 );
+TP_DEBUG_ERR("MSG21332222222222");
+    do{
+        reg_data = drvDB_ReadReg ( 0x3C, 0xE4 );
+    }
+    while ( reg_data != 0x5B58 );
+	dwiic_tx_data[0] = 0x72;
+	dwiic_tx_data[1] = 0x80;
+	dwiic_tx_data[2] = 0x00;
+	dwiic_tx_data[3] = 0x04;
+	dwiic_tx_data[4] = 0x00;
+	HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX_TP , dwiic_tx_data, 5 );
+	TP_DEBUG_ERR("4444444444444");
+	mdelay ( 50 );
+
+	// recive info data
+	//HalTscrCReadI2CSeq ( FW_ADDR_MSG21XX_TP, &g_dwiic_info_data[0], 1024 );
+	HalTscrCReadI2CSeq ( FW_ADDR_MSG21XX_TP, &g_dwiic_info_data[0], 8 );
+
+
+    // recive info data
+    //HalTscrCReadI2CSeq ( FW_ADDR_MSG21XX_TP, &g_dwiic_info_data[0], 1024 );
+    /*
+    for(i=0;i<128;i++)
+{
+TP_DEBUG_ERR("MSG213333333333333333");
+    dwiic_info_addrss = 0x8000+8*i;
+    dwiic_tx_data[0] = 0x72;
+    dwiic_tx_data[1] = dwiic_info_addrss >>8;
+    dwiic_tx_data[2] = dwiic_info_addrss & 0xFF;
+    dwiic_tx_data[3] = 0x00;
+    dwiic_tx_data[4] = 0x08;
+    HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX_TP , &dwiic_tx_data[0], 5 );
+    //TP_DEBUG_ERR("MSG21334444444444444");
+    mdelay ( 5 );
+    HalTscrCReadI2CSeq ( FW_ADDR_MSG21XX_TP, &g_dwiic_info_data[i*8], 8 );
+}
+	*/
+    TP_DEBUG_ERR("MSG213355555555555555");
+    return ( 1 );
+}
+
+static int drvTP_info_updata_C33 ( u16 start_index, u8 *data, u16 size )
+{
+    // size != 0, start_index+size !> 1024
+    u16 i;
+    for ( i = 0; i < size; i++ )
+    {
+        g_dwiic_info_data[start_index] = * ( data + i );
+        start_index++;
+    }
+    return ( 1 );
+}
+
+static ssize_t firmware_update_c33 ( struct device *dev, struct device_attribute *attr,
+                                     const char *buf, size_t size, EMEM_TYPE_t emem_type )
+{
+    u8  dbbus_tx_data[4];
+    u8  dbbus_rx_data[2] = {0};
+    u8  life_counter[2];
+    u32 i, j;
+    u32 crc_main, crc_main_tp;
+    u32 crc_info, crc_info_tp;
+    u8 data[5];
+
+    int update_pass = 1;
+    u16 reg_data = 0;
+
+    crc_main = 0xffffffff;
+    crc_info = 0xffffffff;
+    TP_DEBUG_ERR("MSG2133111111111111");
+    drvTP_read_info_dwiic_c33();
+	
+    if (0)//( g_dwiic_info_data[0] == 'M' && g_dwiic_info_data[1] == 'S' && g_dwiic_info_data[2] == 'T' && g_dwiic_info_data[3] == 'A' && g_dwiic_info_data[4] == 'R' && g_dwiic_info_data[5] == 'T' && g_dwiic_info_data[6] == 'P' && g_dwiic_info_data[7] == 'C')
+    {
+        // updata FW Version
+        //drvTP_info_updata_C33 ( 8, &temp[32][8], 5 );
+
+		g_dwiic_info_data[8]=temp[32][8];
+		g_dwiic_info_data[9]=temp[32][9];
+		g_dwiic_info_data[10]=temp[32][10];
+		g_dwiic_info_data[11]=temp[32][11];
+        // updata life counter
+        life_counter[1] = (( ( (g_dwiic_info_data[13] << 8 ) | g_dwiic_info_data[12]) + 1 ) >> 8 ) & 0xFF;
+        life_counter[0] = ( ( (g_dwiic_info_data[13] << 8 ) | g_dwiic_info_data[12]) + 1 ) & 0xFF;
+		g_dwiic_info_data[12]=life_counter[0];
+		g_dwiic_info_data[13]=life_counter[1];
+        //drvTP_info_updata_C33 ( 10, &life_counter[0], 3 );
+        drvDB_WriteReg ( 0x3C, 0xE4, 0x78C5 );
+		drvDB_WriteReg ( 0x1E, 0x04, 0x7d60 );
+        // TP SW reset
+        drvDB_WriteReg ( 0x1E, 0x04, 0x829F );
+
+        mdelay ( 50 );
+        //TP_DEBUG_ERR("666666666666");
+        //polling 0x3CE4 is 0x2F43
+        do
+        {
+            reg_data = drvDB_ReadReg ( 0x3C, 0xE4 );
+
+        }
+        while ( reg_data != 0x2F43 );
+        //TP_DEBUG_ERR("777777777777");
+        // transmit lk info data
+        HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX_TP , &g_dwiic_info_data[0], 1024 );
+        //TP_DEBUG_ERR("88888888888");
+        //polling 0x3CE4 is 0xD0BC
+        do
+        {
+            reg_data = drvDB_ReadReg ( 0x3C, 0xE4 );
+        }
+        while ( reg_data != 0xD0BC );
+        //TP_DEBUG_ERR("9999999999999");
+    }
+
+    //erase main
+    TP_DEBUG_ERR("MSG2133aaaaaaaaaaa");
+    drvTP_erase_emem_c33 ( EMEM_MAIN );
+    mdelay ( 1000 );
+
+    //ResetSlave();
+    _HalTscrHWReset();
+#if 0
+    //drvDB_EnterDBBUS();
+    dbbusDWIICEnterSerialDebugMode();
+    mdelay ( 10 );
+    dbbusDWIICEnterSerialDebugMode();
+    mdelay ( 10 );
+    dbbusDWIICEnterSerialDebugMode();
+#endif
+
+#if 0
+    // Enter the Serial Debug Mode
+    data[0] = 0x53;
+    data[1] = 0x45;
+    data[2] = 0x52;
+    data[3] = 0x44;
+    data[4] = 0x42;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, data, 1 );
+
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, &data[1], 1 );
+
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, &data[2], 1 );
+   HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, &data[3], 1 );
+   HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, &data[4], 1 );
+#endif
+//drvDB_EnterDBBUS();
+    dbbusDWIICEnterSerialDebugMode();
+    dbbusDWIICStopMCU();
+    dbbusDWIICIICUseBus();
+    dbbusDWIICIICReshape();
+    mdelay ( 600 );
+
+    /////////////////////////
+    // Program
+    /////////////////////////
+
+    //polling 0x3CE4 is 0x1C70
+    if ( ( emem_type == EMEM_ALL ) || ( emem_type == EMEM_MAIN ) )
+    {
+        do
+        {
+            reg_data = drvDB_ReadReg ( 0x3C, 0xE4 );
+        }
+        while ( reg_data != 0x1C70 );
+    }
+
+    switch ( emem_type )
+    {
+        case EMEM_ALL:
+            drvDB_WriteReg ( 0x3C, 0xE4, 0xE38F );  // for all-blocks
+            break;
+        case EMEM_MAIN:
+            drvDB_WriteReg ( 0x3C, 0xE4, 0x7731 );  // for main block
+            break;
+        case EMEM_INFO:
+            drvDB_WriteReg ( 0x3C, 0xE4, 0x7731 );  // for info block
+
+            drvDB_WriteReg8Bit ( 0x0F, 0xE6, 0x01 );
+
+            drvDB_WriteReg8Bit ( 0x3C, 0xE4, 0xC5 ); //
+            drvDB_WriteReg8Bit ( 0x3C, 0xE5, 0x78 ); //
+
+            drvDB_WriteReg8Bit ( 0x1E, 0x04, 0x9F );
+            drvDB_WriteReg8Bit ( 0x1E, 0x05, 0x82 );
+
+            drvDB_WriteReg8Bit ( 0x0F, 0xE6, 0x00 );
+            mdelay ( 100 );
+            break;
+    }
+TP_DEBUG_ERR("MSG2133bbbbbbbbbbbbbb");
+    // polling 0x3CE4 is 0x2F43
+    do
+    {
+        reg_data = drvDB_ReadReg ( 0x3C, 0xE4 );
+    }
+    while ( reg_data != 0x2F43 );
+TP_DEBUG_ERR("MSG2133ccccccccccccc");
+    // calculate CRC 32
+    Init_CRC32_Table ( &crc_tab[0] );
+
+    for ( i = 0; i < 33; i++ ) // total  33 KB : 2 byte per R/W
+    {
+        if ( emem_type == EMEM_INFO )
+			i = 32;
+
+        if ( i < 32 )   //emem_main
+        {
+            if ( i == 31 )
+            {
+                temp[i][1014] = 0x5A; //Fmr_Loader[1014]=0x5A;
+                temp[i][1015] = 0xA5; //Fmr_Loader[1015]=0xA5;
+
+                for ( j = 0; j < 1016; j++ )
+                {
+                    //crc_main=Get_CRC(Fmr_Loader[j],crc_main,&crc_tab[0]);
+                    crc_main = Get_CRC ( temp[i][j], crc_main, &crc_tab[0] );
+                }
+            }
+            else
+            {
+                for ( j = 0; j < 1024; j++ )
+                {
+                    //crc_main=Get_CRC(Fmr_Loader[j],crc_main,&crc_tab[0]);
+                    crc_main = Get_CRC ( temp[i][j], crc_main, &crc_tab[0] );
+                }
+            }
+        }
+        else  //emem_info
+        {
+            for ( j = 0; j < 1024; j++ )
+            {
+                //crc_info=Get_CRC(Fmr_Loader[j],crc_info,&crc_tab[0]);
+                crc_info = Get_CRC ( g_dwiic_info_data[j], crc_info, &crc_tab[0] );
+            }
+            if ( emem_type == EMEM_MAIN ) break;
+        }
+        //drvDWIIC_MasterTransmit( DWIIC_MODE_DWIIC_ID, 1024, Fmr_Loader );
+        TP_DEBUG_ERR("MSG2133dddddddddddddd");
+        #if 1
+        {
+            u32 n = 0;
+            for(n=0;n<UPDATE_TIMES;n++)
+            {
+                TP_DEBUG_ERR("i=%d,n=%d",i,n);
+                HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX_TP, temp[i]+n*N_BYTE_PER_TIME, N_BYTE_PER_TIME );
+            }
+        }
+        #else
+        HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX_TP, temp[i], 1024 );
+        #endif
+        TP_DEBUG_ERR("MSG2133eeeeeeeeeeee");
+        // polling 0x3CE4 is 0xD0BC
+        do
+        {
+            reg_data = drvDB_ReadReg ( 0x3C, 0xE4 );
+        }
+        while ( reg_data != 0xD0BC );
+        TP_DEBUG_ERR("MSG2133ffffffffffffff");
+        drvDB_WriteReg ( 0x3C, 0xE4, 0x2F43 );
+    }
+        TP_DEBUG_ERR("MSG2133ggggggggg");
+    if ( ( emem_type == EMEM_ALL ) || ( emem_type == EMEM_MAIN ) )
+    {
+        // write file done and check crc
+        drvDB_WriteReg ( 0x3C, 0xE4, 0x1380 );
+        TP_DEBUG_ERR("MSG2133hhhhhhhhhhhhhh");
+    }
+    mdelay ( 10 ); //MCR_CLBK_DEBUG_DELAY ( 10, MCU_LOOP_DELAY_COUNT_MS );
+
+    if ( ( emem_type == EMEM_ALL ) || ( emem_type == EMEM_MAIN ) )
+    {
+        // polling 0x3CE4 is 0x9432
+        TP_DEBUG_ERR("MSG2133iiiiiiiiii");
+        do
+        {
+            reg_data = drvDB_ReadReg ( 0x3C, 0xE4 );
+        }while ( reg_data != 0x9432 );
+        TP_DEBUG_ERR("MSG2133jjjjjjjjjjjjj");
+    }
+
+    crc_main = crc_main ^ 0xffffffff;
+    crc_info = crc_info ^ 0xffffffff;
+
+    if ( ( emem_type == EMEM_ALL ) || ( emem_type == EMEM_MAIN ) )
+    {
+        TP_DEBUG_ERR("MSG2133kkkkkkkkkkk");
+        // CRC Main from TP
+        crc_main_tp = drvDB_ReadReg ( 0x3C, 0x80 );
+        crc_main_tp = ( crc_main_tp << 16 ) | drvDB_ReadReg ( 0x3C, 0x82 );
+
+        // CRC Info from TP
+        crc_info_tp = drvDB_ReadReg ( 0x3C, 0xA0 );
+        crc_info_tp = ( crc_info_tp << 16 ) | drvDB_ReadReg ( 0x3C, 0xA2 );
+    }
+  //TP_DEBUG ( "crc_main=0x%x, crc_info=0x%x, crc_main_tp=0x%x, crc_info_tp=0x%x\n",
+    //           crc_main, crc_info, crc_main_tp, crc_info_tp );
+
+    //drvDB_ExitDBBUS();
+    TP_DEBUG_ERR("MSG2133lllllllllllll");
+    update_pass = 1;
+	if ( ( emem_type == EMEM_ALL ) || ( emem_type == EMEM_MAIN ) )
+    {
+        if ( crc_main_tp != crc_main )
+            update_pass = 0;
+
+        if ( crc_info_tp != crc_info )
+            update_pass = 0;
+    }
+
+    if ( !update_pass )
+    {
+        TP_DEBUG_ERR ( "MSG2133update_C33 ok111\n" );
+		_HalTscrHWReset();
+        FwDataCnt = 0;
+		(CUST_EINT_TOUCH_PANEL_NUM);
+        return size;
+    }
+
+    TP_DEBUG_ERR ( "MSG2133update_C33 OK\n" );
+	_HalTscrHWReset();
+    FwDataCnt = 0;
+	mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM);
+    return size;
+}
+
+
+static ssize_t firmware_update_store ( struct device *dev,
+                                       struct device_attribute *attr, const char *buf, size_t size )
+{
+    u8 i;
+    u8 dbbus_tx_data[4];
+    unsigned char dbbus_rx_data[2] = {0};
+	mt_eint_mask(CUST_EINT_TOUCH_PANEL_NUM);
+
+    _HalTscrHWReset();
+
+    // Erase TP Flash first
+    dbbusDWIICEnterSerialDebugMode();
+    dbbusDWIICStopMCU();
+    dbbusDWIICIICUseBus();
+    dbbusDWIICIICReshape();
+    mdelay ( 300 );
+
+    // Disable the Watchdog
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x3C;
+    dbbus_tx_data[2] = 0x60;
+    dbbus_tx_data[3] = 0x55;
+    HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x3C;
+    dbbus_tx_data[2] = 0x61;
+    dbbus_tx_data[3] = 0xAA;
+    HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+    // Stop MCU
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x0F;
+    dbbus_tx_data[2] = 0xE6;
+    dbbus_tx_data[3] = 0x01;
+    HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+    /////////////////////////
+    // Difference between C2 and C3
+    /////////////////////////
+	// c2:2133 c32:2133a(2) c33:2138
+    //check id
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x1E;
+    dbbus_tx_data[2] = 0xCC;
+    HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX, dbbus_tx_data, 3 );
+    HalTscrCReadI2CSeq ( FW_ADDR_MSG21XX, &dbbus_rx_data[0], 2 );
+    TP_DEBUG_ERR ( "MSG2133111dbbus_rx version[0]=0x%x", dbbus_rx_data[0] );
+    if ( dbbus_rx_data[0] == 2 )
+    {
+        // check version
+        dbbus_tx_data[0] = 0x10;
+        dbbus_tx_data[1] = 0x3C;
+        dbbus_tx_data[2] = 0xEA;
+        HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX, dbbus_tx_data, 3 );
+        HalTscrCReadI2CSeq ( FW_ADDR_MSG21XX, &dbbus_rx_data[0], 2 );
+        TP_DEBUG_ERR ( "MSG2133dbbus_rx version[0]=0x%x", dbbus_rx_data[0] );
+
+        if ( dbbus_rx_data[0] == 3 ){
+
+            return firmware_update_c33 ( dev, attr, buf, size, EMEM_MAIN );
+
+		}
+        else{
+
+            return firmware_update_c32 ( dev, attr, buf, size, EMEM_ALL );
+        }
+    }
+    else
+    {
+        return firmware_update_c2 ( dev, attr, buf, size );
+    } 
+
+}
+#else
+
+
+
+static ssize_t firmware_update_store( struct device *dev,
+                                      struct device_attribute *attr, const char *buf, size_t size )
+{
+    u8 i;
+    u8 dbbus_tx_data[4];
+    unsigned char dbbus_rx_data[2] = {0};
+
+
+    _HalTscrHWReset();
+    //1.Erase TP Flash first
+    dbbusDWIICEnterSerialDebugMode();
+    dbbusDWIICStopMCU();
+    dbbusDWIICIICUseBus();
+    dbbusDWIICIICReshape();
+    msleep( 300 );
+
+
+    // Disable the Watchdog
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x3C;
+    dbbus_tx_data[2] = 0x60;
+    dbbus_tx_data[3] = 0x55;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x3C;
+    dbbus_tx_data[2] = 0x61;
+    dbbus_tx_data[3] = 0xAA;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+    //Stop MCU
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x0F;
+    dbbus_tx_data[2] = 0xE6;
+    dbbus_tx_data[3] = 0x01;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+
+    //set FRO to 50M
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x11;
+    dbbus_tx_data[2] = 0xE2;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 3 );
+    dbbus_rx_data[0] = 0;
+    dbbus_rx_data[1] = 0;
+    HalTscrCReadI2CSeq( FW_ADDR_MSG21XX, &dbbus_rx_data[0], 2 );
+    TPD_DEBUG( "dbbus_rx_data[0]=0x%x", dbbus_rx_data[0] );
+    dbbus_tx_data[3] = dbbus_rx_data[0] & 0xF7;  //Clear Bit 3
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+
+
+    //set MCU clock,SPI clock =FRO
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x1E;
+    dbbus_tx_data[2] = 0x22;
+    dbbus_tx_data[3] = 0x00;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x1E;
+    dbbus_tx_data[2] = 0x23;
+    dbbus_tx_data[3] = 0x00;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+
+    // Enable slave's ISP ECO mode
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x08;
+    dbbus_tx_data[2] = 0x0c;
+    dbbus_tx_data[3] = 0x08;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+    //Enable SPI Pad
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x1E;
+    dbbus_tx_data[2] = 0x02;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 3 );
+    HalTscrCReadI2CSeq( FW_ADDR_MSG21XX, &dbbus_rx_data[0], 2 );
+    TPD_DEBUG( "dbbus_rx_data[0]=0x%x", dbbus_rx_data[0] );
+    dbbus_tx_data[3] = ( dbbus_rx_data[0] | 0x20 ); //Set Bit 5
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+
+    //WP overwrite
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x1E;
+    dbbus_tx_data[2] = 0x0E;
+    dbbus_tx_data[3] = 0x02;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+
+    //set pin high
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x1E;
+    dbbus_tx_data[2] = 0x10;
+    dbbus_tx_data[3] = 0x08;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+    dbbusDWIICIICNotUseBus();
+    dbbusDWIICNotStopMCU();
+    dbbusDWIICExitSerialDebugMode();
+
+
+
+    drvISP_EntryIspMode();
+    drvISP_ChipErase();
+    _HalTscrHWReset();
+    mdelay( 300 );
+
+    //2.Program and Verify
+    dbbusDWIICEnterSerialDebugMode();
+    dbbusDWIICStopMCU();
+    dbbusDWIICIICUseBus();
+    dbbusDWIICIICReshape();
+
+
+
+    // Disable the Watchdog
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x3C;
+    dbbus_tx_data[2] = 0x60;
+    dbbus_tx_data[3] = 0x55;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x3C;
+    dbbus_tx_data[2] = 0x61;
+    dbbus_tx_data[3] = 0xAA;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+    //Stop MCU
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x0F;
+    dbbus_tx_data[2] = 0xE6;
+    dbbus_tx_data[3] = 0x01;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+
+    //set FRO to 50M
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x11;
+    dbbus_tx_data[2] = 0xE2;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 3 );
+    dbbus_rx_data[0] = 0;
+    dbbus_rx_data[1] = 0;
+    HalTscrCReadI2CSeq( FW_ADDR_MSG21XX, &dbbus_rx_data[0], 2 );
+    TPD_DEBUG( "dbbus_rx_data[0]=0x%x", dbbus_rx_data[0] );
+    dbbus_tx_data[3] = dbbus_rx_data[0] & 0xF7;  //Clear Bit 3
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+
+
+    //set MCU clock,SPI clock =FRO
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x1E;
+    dbbus_tx_data[2] = 0x22;
+    dbbus_tx_data[3] = 0x00;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x1E;
+    dbbus_tx_data[2] = 0x23;
+    dbbus_tx_data[3] = 0x00;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+    // Enable slave's ISP ECO mode
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x08;
+    dbbus_tx_data[2] = 0x0c;
+    dbbus_tx_data[3] = 0x08;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+    //Enable SPI Pad
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x1E;
+    dbbus_tx_data[2] = 0x02;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 3 );
+    HalTscrCReadI2CSeq( FW_ADDR_MSG21XX, &dbbus_rx_data[0], 2 );
+    TPD_DEBUG( "dbbus_rx_data[0]=0x%x", dbbus_rx_data[0] );
+    dbbus_tx_data[3] = ( dbbus_rx_data[0] | 0x20 ); //Set Bit 5
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+
+    //WP overwrite
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x1E;
+    dbbus_tx_data[2] = 0x0E;
+    dbbus_tx_data[3] = 0x02;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+
+    //set pin high
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x1E;
+    dbbus_tx_data[2] = 0x10;
+    dbbus_tx_data[3] = 0x08;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+    dbbusDWIICIICNotUseBus();
+    dbbusDWIICNotStopMCU();
+    dbbusDWIICExitSerialDebugMode();
+
+    ///////////////////////////////////////
+    // Start to load firmware
+    ///////////////////////////////////////
+    drvISP_EntryIspMode();
+
+    for( i = 0; i < 94; i++ )  // total  94 KB : 1 byte per R/W
+    {
+        drvISP_Program( i, temp[i] );  // program to slave's flash
+        drvISP_Verify( i, temp[i] );  //verify data
+    }
+    TPD_DEBUG( "update OK\n" );
+    drvISP_ExitIspMode();
+    FwDataCnt = 0;
+    return size;
+}
+#endif
+static DEVICE_ATTR( update, 0777, firmware_update_show, firmware_update_store );
+
+/*test=================*/
+static ssize_t firmware_clear_show( struct device *dev,
+                                    struct device_attribute *attr, char *buf )
+{
+    u16 k = 0, i = 0, j = 0;
+    u8 bWriteData[5] =
+    {
+        0x10, 0x03, 0, 0, 0
+    };
+    u8 RX_data[256];
+    u8 bWriteData1 = 0x12;
+    u32 addr = 0;
+    u32 timeOutCount = 0;
+    for( k = 0; k < 94; i++ )  // total  94 KB : 1 byte per R/W
+    {
+        addr = k * 1024;
+        for( j = 0; j < 8; j++ )  //128*8 cycle
+        {
+            bWriteData[2] = ( u8 )( ( addr + j * 128 ) >> 16 );
+            bWriteData[3] = ( u8 )( ( addr + j * 128 ) >> 8 );
+            bWriteData[4] = ( u8 )( addr + j * 128 );
+            udelay( 100 );         // delay about 100us*****
+
+            timeOutCount = 0;
+            while( ( drvISP_ReadStatus() & 0x01 ) == 0x01 )
+            {
+                timeOutCount++;
+                if( timeOutCount >= 100000 ) break;  /* around 1 sec timeout */
+            }
+
+
+            HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, bWriteData, 5 );  //write read flash addr
+            udelay( 100 );         // delay about 100us*****
+            drvISP_Read( 128, RX_data );
+            HalTscrCDevWriteI2CSeq( FW_UPDATE_ADDR_MSG21XX, &bWriteData1, 1 );  //cmd end
+            for( i = 0; i < 128; i++ )  //log out if verify error
+            {
+                if( RX_data[i] != 0xFF )
+                {
+                    TPD_DEBUG( "k=%d,j=%d,i=%d===============erase not clean================", k, j, i );
+                }
+            }
+        }
+    }
+    TPD_DEBUG( "read finish\n" );
+    return sprintf( buf, "%s\n", fw_version );
+}
+
+static ssize_t firmware_clear_store( struct device *dev,
+                                     struct device_attribute *attr, const char *buf, size_t size )
+{
+
+    u8 dbbus_tx_data[4];
+    unsigned char dbbus_rx_data[2] = {0};
+
+    _HalTscrHWReset();
+    dbbusDWIICEnterSerialDebugMode();
+    dbbusDWIICStopMCU();
+    dbbusDWIICIICUseBus();
+    dbbusDWIICIICReshape();
+
+
+
+    // Disable the Watchdog
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x3C;
+    dbbus_tx_data[2] = 0x60;
+    dbbus_tx_data[3] = 0x55;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x3C;
+    dbbus_tx_data[2] = 0x61;
+    dbbus_tx_data[3] = 0xAA;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+    //Stop MCU
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x0F;
+    dbbus_tx_data[2] = 0xE6;
+    dbbus_tx_data[3] = 0x01;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+
+    //set FRO to 50M
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x11;
+    dbbus_tx_data[2] = 0xE2;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 3 );
+    dbbus_rx_data[0] = 0;
+    dbbus_rx_data[1] = 0;
+    HalTscrCReadI2CSeq( FW_ADDR_MSG21XX, &dbbus_rx_data[0], 2 );
+    TPD_DEBUG( "dbbus_rx_data[0]=0x%x", dbbus_rx_data[0] );
+    dbbus_tx_data[3] = dbbus_rx_data[0] & 0xF7;  //Clear Bit 3
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+
+
+    //set MCU clock,SPI clock =FRO
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x1E;
+    dbbus_tx_data[2] = 0x22;
+    dbbus_tx_data[3] = 0x00;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x1E;
+    dbbus_tx_data[2] = 0x23;
+    dbbus_tx_data[3] = 0x00;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+
+    // Enable slave's ISP ECO mode
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x08;
+    dbbus_tx_data[2] = 0x0c;
+    dbbus_tx_data[3] = 0x08;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+    //Enable SPI Pad
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x1E;
+    dbbus_tx_data[2] = 0x02;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 3 );
+    HalTscrCReadI2CSeq( FW_ADDR_MSG21XX, &dbbus_rx_data[0], 2 );
+    TPD_DEBUG( "dbbus_rx_data[0]=0x%x", dbbus_rx_data[0] );
+    dbbus_tx_data[3] = ( dbbus_rx_data[0] | 0x20 ); //Set Bit 5
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+
+    //WP overwrite
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x1E;
+    dbbus_tx_data[2] = 0x0E;
+    dbbus_tx_data[3] = 0x02;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+
+    //set pin high
+    dbbus_tx_data[0] = 0x10;
+    dbbus_tx_data[1] = 0x1E;
+    dbbus_tx_data[2] = 0x10;
+    dbbus_tx_data[3] = 0x08;
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+
+    dbbusDWIICIICNotUseBus();
+    dbbusDWIICNotStopMCU();
+    dbbusDWIICExitSerialDebugMode();
+
+
+    ///////////////////////////////////////
+    // Start to load firmware
+    ///////////////////////////////////////
+    drvISP_EntryIspMode();
+    TPD_DEBUG( "chip erase+\n" );
+    drvISP_ChipErase();
+    TPD_DEBUG( "chip erase-\n" );
+    drvISP_ExitIspMode();
+    return size;
+}
+
+static DEVICE_ATTR( clear, 0777, firmware_clear_show, firmware_clear_store );
+
+/*test=================*/
+/*Add by Tracy.Lin for update touch panel firmware and get fw version*/
+
+static ssize_t firmware_version_show( struct device *dev,
+                                      struct device_attribute *attr, char *buf )
+{
+    TPD_DEBUG( "*** firmware_version_show fw_version = %s***\n", fw_version );
+    return sprintf( buf, "%s\n", fw_version );
+}
+kal_bool Check_msg2133_I2C_state(void)
+{
+    int ret;
+unsigned char dbbus_rx_data[4] ;
+
+    i2c_client->addr = FW_ADDR_MSG21XX_TP;
+    ret = i2c_master_recv(i2c_client, &dbbus_rx_data[0], 4);
+    i2c_client->addr = FW_ADDR_MSG21XX_TP;
+    if(ret <= 0)
+
+    	{
+		return 0;
+	}
+	else
+	{
+		return 1;
+	}
+}
+static ssize_t firmware_version_store( struct device *dev,
+                                       struct device_attribute *attr, const char *buf, size_t size )
+{
+    unsigned char dbbus_tx_data[3];
+    unsigned char dbbus_rx_data[4] ;
+    unsigned short major = 0, minor = 0;
+
+    fw_version = kzalloc( sizeof( char ), GFP_KERNEL );
+    //SM-BUS GET FW VERSION
+    dbbus_tx_data[0] = 0x53;
+    dbbus_tx_data[1] = 0x00;
+    dbbus_tx_data[2] = 0x2a;// 2A
+    HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX_TP, &dbbus_tx_data[0], 3 );
+    HalTscrCReadI2CSeq( FW_ADDR_MSG21XX_TP, &dbbus_rx_data[0], 4 );
+
+    major = ( dbbus_rx_data[1] << 8 ) + dbbus_rx_data[0];
+    minor = ( dbbus_rx_data[3] << 8 ) + dbbus_rx_data[2];
+
+    TPD_DEBUG( "***major = %d ***\n", major );
+    TPD_DEBUG( "***minor = %d ***\n", minor );
+    sprintf( fw_version, "%03d%03d", major, minor );
+    TPD_DEBUG( "***fw_version = %s ***\n", fw_version );
+
+
+    return size;
+}
+static DEVICE_ATTR( version, 0777, firmware_version_show, firmware_version_store );
+
+static ssize_t firmware_data_show( struct device *dev,
+                                   struct device_attribute *attr, char *buf )
+{
+    return FwDataCnt;
+}
+
+static ssize_t firmware_data_store( struct device *dev,
+                                    struct device_attribute *attr, const char *buf, size_t size )
+{
+
+    int i;
+    TPD_DEBUG( "***FwDataCnt = %d ***\n", FwDataCnt );
+    memcpy( temp[FwDataCnt], buf, 1024 );
+    FwDataCnt++;
+    return size;
+}
+static DEVICE_ATTR( data, 0777, firmware_data_show, firmware_data_store );
+#endif
+
+//end for update firmware
+
+#ifdef MSG_GESTURE_FUNCTION
+/////enable 0:no open ; 1:open
+/////if return 0,parameter 'enable' is wrong!
+
+////the first bit
+#define CTP_UPDATE_GESTURE_AUTHORITY_SYS 0777
+
+static int msg_SetGestureDoubleClickDirectValue( int enable )
+{
+	if(enable != 0 && enable != 1)
+		return 0;
+	if(enable)
+		set_gesture_double_click_mode = MSG_GESTURE_FUNCTION_DOUBLECLICK_FLAG;
+	else
+		set_gesture_double_click_mode = 0;
+	
+	return 1;
+}
+////the second bit
+static int msg_SetGestureUpDirectValue( int enable )
+{
+	if(enable != 0 && enable != 1)
+		return 0;
+	if(enable)
+		set_gesture_up_direct_mode = MSG_GESTURE_FUNCTION_UPDIRECT_FLAG;
+	else
+		set_gesture_up_direct_mode = 0;
+	
+	return 1;
+}
+////the third bit
+static int msg_SetGestureDownDirectValue( int enable )
+{
+	if(enable != 0 && enable != 1)
+		return 0;
+	if(enable)
+		set_gesture_down_direct_mode = MSG_GESTURE_FUNCTION_DOWNDIRECT_FLAG;
+	else
+		set_gesture_down_direct_mode = 0;
+	
+	return 1;
+}
+////the fourth bit
+static int msg_SetGestureLeftDirectValue( int enable )
+{
+	if(enable != 0 && enable != 1)
+		return 0;
+	if(enable)
+		set_gesture_left_direct_mode = MSG_GESTURE_FUNCTION_LEFTDIRECT_FLAG;
+	else
+		set_gesture_left_direct_mode = 0;
+	
+	return 1;
+}
+////the fivth bit
+static int msg_SetGestureRightDirectValue( int enable )
+{
+	if(enable != 0 && enable != 1)
+		return 0;
+	if(enable)
+		set_gesture_right_direct_mode = MSG_GESTURE_FUNCTION_RIGHTDIRECT_FLAG;
+	else
+		set_gesture_right_direct_mode = 0;
+	
+	return 1;
+}
+
+static void msg_GetGestureModeValue( void )
+{
+	set_gesture_mode = (set_gesture_right_direct_mode)|(set_gesture_left_direct_mode)|(set_gesture_down_direct_mode)|(set_gesture_up_direct_mode)|(set_gesture_double_click_mode);
+	//TP_DEBUG("***msg_GetGestureModeValue set_gesture_mode = %x ***\n", set_gesture_mode);
+}
+
+///return flage
+int msg_GetDoubleClickModeFlage( void )
+{
+	return tpd_gesture_double_click_mode;
+}
+int msg_GetUpDirectModeFlage( void )
+{
+	return tpd_gesture_up_direct_mode;
+}
+int msg_GetDownDirectModeFlage( void )
+{
+	return tpd_gesture_down_direct_mode;
+}
+int msg_GetLeftDirectModeFlage( void )
+{
+	return tpd_gesture_left_direct_mode;
+}
+int msg_GetRightDirectModeFlage( void )
+{
+	return tpd_gesture_right_direct_mode;
+}
+
+
+/*
+	the result 1: open corection
+			 0: error
+*/
+int msg_OpenGestureFunction( int g_Mode )
+{
+	unsigned char dbbus_tx_data[3];
+	unsigned char dbbus_rx_data[2] = {0};
+
+#ifdef __MSG_DMA_MODE__
+	msg_dma_alloct();
+#endif
+
+	/**********open command*********/
+	dbbus_tx_data[0] = 0x58;
+	
+	dbbus_tx_data[1] = 0xFF;//00
+	/*
+	0000 0001 DoubleClick
+	0000 0010 Up Direction
+	0000 0100 Down Direction
+	0000 1000 Left Direction
+	0001 0000 Right Direction
+	0001 1111 All Of Five Funciton
+	*/
+	dbbus_tx_data[2] = (0xFF&g_Mode);
+	
+	//TP_DEBUG("***msg_OpenGestureFunction MSG_Gesture_Function_type = %x ***\n", dbbus_tx_data[2]);
+	/*if(
+		(dbbus_tx_data[2] >= 0x01)&&
+		(dbbus_tx_data[2] <= 0x1F)
+		)*/
+	{
+		HalTscrCDevWriteI2CSeq(FW_ADDR_MSG21XX_TP, &dbbus_tx_data[0], 3);//
+		//TP_DEBUG("***msg_OpenGestureFunction write success***\n");
+		tpd_gesture_flag = 1;
+	}
+	
+	/**********open command*********/
+	msleep(20);
+	/**********check command*********/
+  
+	/**********check command*********/
+#ifdef __MSG_DMA_MODE__
+	msg_dma_release();
+#endif
+	return 1;
+}	
+/*
+	the result 1: close corection
+			 0: error
+*/
+int msg_CloseGestureFunction( void )
+{
+	unsigned char dbbus_tx_data[3];
+	unsigned char dbbus_rx_data[2] = {0};
+#ifdef __MSG_DMA_MODE__
+	msg_dma_alloct();
+#endif
+
+	tpd_gesture_flag = 0;
+
+	/*******close command********/
+	dbbus_tx_data[0] = 0x59;
+	
+	dbbus_tx_data[1] = 0x00;
+	//close command is 0x00
+	dbbus_tx_data[2] = 0x00;
+	HalTscrCDevWriteI2CSeq(FW_ADDR_MSG21XX_TP, &dbbus_tx_data[0], 3);
+	/*******close command********/
+	msleep(20);
+
+	/*******check command**************/
+    dbbus_tx_data[0] = 0x53;
+	
+    dbbus_tx_data[1] = 0x00;
+	///just for Mstar Modefy     u16Reserved10
+    dbbus_tx_data[2] = 0x5e;
+	
+    HalTscrCDevWriteI2CSeq(FW_ADDR_MSG21XX_TP, &dbbus_tx_data[0], 3);
+    HalTscrCReadI2CSeq(FW_ADDR_MSG21XX_TP, &dbbus_rx_data[0], 2);
+
+	if(((dbbus_rx_data[1]<<8)+dbbus_rx_data[0]) != 0)
+	{
+		//TP_DEBUG("***msg_CloseGestureFunction fail:The Close mode is = %x ***\n", ((dbbus_rx_data[1]<<8)+dbbus_rx_data[0]));
+		return 0;
+	}
+	else
+	{	
+		//TP_DEBUG("***msg_CloseGestureFunction success!***\n");
+		return 1;
+	}
+	/*******check command ***************/
+	#ifdef __MSG_DMA_MODE__
+	msg_dma_release();
+	#endif
+
+}
+
+#if 0
+////////////////device node for APP to turn on/off these functions//////////////
+static ssize_t msg_Gesture_Function_Show(struct device *dev,
+                                     struct device_attribute *attr, char *buf)
+{
+	msg_GetGestureModeValue( );
+    return sprintf(buf, "%d\n", set_gesture_mode);
+}
+
+static ssize_t msg_Gesture_Function_Store(struct device *dev,
+                                   struct device_attribute *attr, const char *buf, size_t size)
+{
+	int g_ON_OFF = 0;
+	
+    if(NULL!=buf)
+    {
+        sscanf(buf,"%d",&g_ON_OFF);
+    }
+	
+    if( g_ON_OFF&MSG_GESTURE_FUNCTION_DOUBLECLICK_FLAG == MSG_GESTURE_FUNCTION_DOUBLECLICK_FLAG ) ///turn on 
+    {
+        msg_SetGestureDoubleClickDirectValue(1);
+        TPD_DEBUG("msg_Gesture_Function_Store msg_SetGestureDoubleClickDirectValue mode =%d",set_gesture_double_click_mode);
+    }
+    else//turn off
+    {
+        msg_SetGestureDoubleClickDirectValue(0);
+        TPD_DEBUG("msg_Gesture_Function_Store msg_SetGestureDoubleClickDirectValue mode =%d",set_gesture_double_click_mode);
+    }
+	
+    if( g_ON_OFF&MSG_GESTURE_FUNCTION_UPDIRECT_FLAG  == MSG_GESTURE_FUNCTION_UPDIRECT_FLAG ) ///turn on 
+    {
+        msg_SetGestureUpDirectValue(1);
+        TPD_DEBUG("msg_Gesture_Function_Store msg_SetGestureUpDirectValue mode =%d",set_gesture_up_direct_mode);
+    }
+    else//turn off
+    {
+        msg_SetGestureUpDirectValue(0);
+        TPD_DEBUG("msg_Gesture_Function_Store msg_SetGestureUpDirectValue mode =%d",set_gesture_up_direct_mode);
+    }
+	
+    if( g_ON_OFF&MSG_GESTURE_FUNCTION_DOWNDIRECT_FLAG == MSG_GESTURE_FUNCTION_DOWNDIRECT_FLAG ) ///turn on 
+    {
+        msg_SetGestureDownDirectValue(1);
+        TPD_DEBUG("msg_Gesture_Function_Store msg_SetGestureDownDirectValue mode =%d",set_gesture_down_direct_mode);
+    }
+    else//turn off
+    {
+        msg_SetGestureDownDirectValue(0);
+        TPD_DEBUG("msg_Gesture_Function_Store msg_SetGestureDownDirectValue mode =%d",set_gesture_down_direct_mode);
+    }
+
+    if( g_ON_OFF&MSG_GESTURE_FUNCTION_LEFTDIRECT_FLAG == MSG_GESTURE_FUNCTION_LEFTDIRECT_FLAG ) ///turn on 
+    {
+        msg_SetGestureLeftDirectValue(1);
+        TPD_DEBUG("msg_Gesture_Function_Store msg_SetGestureLeftDirectValue mode =%d",set_gesture_left_direct_mode);
+    }
+    else//turn off
+    {
+        msg_SetGestureLeftDirectValue(0);
+        TPD_DEBUG("msg_Gesture_Function_Store msg_SetGestureLeftDirectValue mode =%d",set_gesture_left_direct_mode);
+    }
+
+    if( g_ON_OFF&MSG_GESTURE_FUNCTION_RIGHTDIRECT_FLAG == MSG_GESTURE_FUNCTION_RIGHTDIRECT_FLAG ) ///turn on 
+    {
+        msg_SetGestureRightDirectValue(1);
+        TPD_DEBUG("msg_Gesture_Function_Store msg_SetGestureRightDirectValue mode =%d",set_gesture_right_direct_mode);
+    }
+    else//turn off
+    {
+        msg_SetGestureRightDirectValue(0);
+        TPD_DEBUG("msg_Gesture_Function_Store msg_SetGestureRightDirectValue mode =%d",set_gesture_right_direct_mode);
+    }
+	return size;
+	
+}
+
+static DEVICE_ATTR(msgGestureFunction, CTP_UPDATE_GESTURE_AUTHORITY_SYS, msg_Gesture_Function_Show, msg_Gesture_Function_Store);
+#endif
+static ssize_t msg_Gesture_Function_DoubleClick_Show(struct device *dev,
+                                     struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n", set_gesture_double_click_mode);
+}
+static ssize_t msg_Gesture_Function_DoubleClick_Store(struct device *dev,
+                                   struct device_attribute *attr, const char *buf, size_t size)
+{
+	int g_ON_OFF = 0;
+    if(NULL!=buf)
+    {
+        sscanf(buf,"%d",&g_ON_OFF);
+    }
+    if( g_ON_OFF == 1 ) ///turn on 
+    {
+        msg_SetGestureDoubleClickDirectValue(1);
+        TPD_DEBUG("msg_Gesture_Function_DoubleClick_Store set_gesture_double_click_mode =%d",set_gesture_double_click_mode);
+    }
+    else if( g_ON_OFF == 0 ) //turn off
+    {
+        msg_SetGestureDoubleClickDirectValue(0);
+        TPD_DEBUG("msg_Gesture_Function_DoubleClick_Store set_gesture_double_click_mode =%d",set_gesture_double_click_mode);
+    }
+    else
+    {
+        TPD_DEBUG("msg_Gesture_Function_DoubleClick_Store Wrong Command!!!");
+    }
+	return size;
+}
+static DEVICE_ATTR(doubleclick, CTP_UPDATE_GESTURE_AUTHORITY_SYS, msg_Gesture_Function_DoubleClick_Show, msg_Gesture_Function_DoubleClick_Store);
+/////////////
+static ssize_t msg_Gesture_Function_UpDirect_Show(struct device *dev,
+                                     struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n", set_gesture_up_direct_mode);
+}
+
+static ssize_t msg_Gesture_Function_UpDirect_Store(struct device *dev,
+                                   struct device_attribute *attr, const char *buf, size_t size)
+{
+	int g_ON_OFF = 0;
+	
+    if(NULL!=buf)
+    {
+        sscanf(buf,"%d",&g_ON_OFF);
+    }
+    if( g_ON_OFF == 1 ) ///turn on 
+    {
+        msg_SetGestureUpDirectValue(1);
+        TPD_DEBUG("msg_SetGestureUpDirectValue turn on mode =%d",set_gesture_up_direct_mode);
+    }
+    else if( g_ON_OFF == 0 ) //turn off
+    {
+        msg_SetGestureUpDirectValue(0);
+        TPD_DEBUG("msg_SetGestureUpDirectValue turn off mode =%d",set_gesture_up_direct_mode);
+    }
+    else
+    {
+        TPD_DEBUG("msg_SetGestureUpDirectValue Wrong Command!!!");
+    }
+	return size;
+	
+}
+
+static DEVICE_ATTR(updirect, CTP_UPDATE_GESTURE_AUTHORITY_SYS, msg_Gesture_Function_UpDirect_Show, msg_Gesture_Function_UpDirect_Store);
+/////////////
+static ssize_t msg_Gesture_Function_DownDirect_Show(struct device *dev,
+                                     struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n", set_gesture_down_direct_mode);
+}
+
+static ssize_t msg_Gesture_Function_DownDirect_Store(struct device *dev,
+                                   struct device_attribute *attr, const char *buf, size_t size)
+{
+	int g_ON_OFF = 0;
+	
+    if(NULL!=buf)
+    {
+        sscanf(buf,"%d",&g_ON_OFF);
+    }
+    if( g_ON_OFF == 1 ) ///turn on 
+    {
+        msg_SetGestureDownDirectValue(1);
+        TPD_DEBUG("msg_Gesture_Function_DownDirect_Store turn on mode =%d",set_gesture_down_direct_mode);
+    }
+    else if( g_ON_OFF == 0 ) //turn off
+    {
+        msg_SetGestureDownDirectValue(0);
+        TPD_DEBUG("msg_Gesture_Function_DownDirect_Store turn off mode =%d",set_gesture_down_direct_mode);
+    }
+    else
+    {
+        TPD_DEBUG("msg_Gesture_Function_DownDirect_Store Wrong Command!!!");
+    }
+	return size;
+	
+}
+
+static DEVICE_ATTR(downdirect, CTP_UPDATE_GESTURE_AUTHORITY_SYS, msg_Gesture_Function_DownDirect_Show, msg_Gesture_Function_DownDirect_Store);
+/////////////
+static ssize_t msg_Gesture_Function_LeftDirect_Show(struct device *dev,
+                                     struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n", set_gesture_left_direct_mode);
+}
+
+static ssize_t msg_Gesture_Function_LeftDirect_Store(struct device *dev,
+                                   struct device_attribute *attr, const char *buf, size_t size)
+{
+	int g_ON_OFF = 0;
+	
+    if(NULL!=buf)
+    {
+        sscanf(buf,"%d",&g_ON_OFF);
+    }
+    if( g_ON_OFF == 1 ) ///turn on 
+    {
+        msg_SetGestureLeftDirectValue(1);
+        TPD_DEBUG("msg_SetGestureLeftDirectValue turn on mode =%d",set_gesture_left_direct_mode);
+    }
+    else if( g_ON_OFF == 0 ) //turn off
+    {
+        msg_SetGestureLeftDirectValue(0);
+        TPD_DEBUG("msg_SetGestureLeftDirectValue turn off mode =%d",set_gesture_left_direct_mode);
+    }
+    else
+    {
+        TPD_DEBUG("msg_SetGestureLeftDirectValue Wrong Command!!!");
+    }
+	return size;
+	
+}
+
+static DEVICE_ATTR(leftdirect, CTP_UPDATE_GESTURE_AUTHORITY_SYS, msg_Gesture_Function_LeftDirect_Show, msg_Gesture_Function_LeftDirect_Store);
+/////////////
+static ssize_t msg_Gesture_Function_RightDirect_Show(struct device *dev,
+                                     struct device_attribute *attr, char *buf)
+{
+    return sprintf(buf, "%d\n", set_gesture_right_direct_mode);
+}
+
+static ssize_t msg_Gesture_Function_RightDirect_Store(struct device *dev,
+                                   struct device_attribute *attr, const char *buf, size_t size)
+{
+	int g_ON_OFF = 0;
+	
+    if(NULL!=buf)
+    {
+        sscanf(buf,"%d",&g_ON_OFF);
+    }
+    if( g_ON_OFF == 1 ) ///turn on 
+    {
+        msg_SetGestureRightDirectValue(1);
+        TPD_DEBUG("msg_SetGestureRightDirectValue turn on mode =%d",set_gesture_right_direct_mode);
+    }
+    else if( g_ON_OFF == 0 ) //turn off
+    {
+        msg_SetGestureRightDirectValue(0);
+        TPD_DEBUG("msg_SetGestureRightDirectValue turn off mode =%d",set_gesture_right_direct_mode);
+    }
+    else
+    {
+        TPD_DEBUG("msg_SetGestureRightDirectValue Wrong Command!!!");
+    }
+	return size;
+	
+}
+
+static DEVICE_ATTR(rightdirect, CTP_UPDATE_GESTURE_AUTHORITY_SYS, msg_Gesture_Function_RightDirect_Show, msg_Gesture_Function_RightDirect_Store);
+#ifdef MSG_GESTURE_FUNCTION_NODE_PROC
+static int proc_Gesture_Function_DoubleClick_read(char *page, char **start, off_t off, int count, int *eof, void *data)
+{
+    int cnt= 0;
+    
+    cnt=msg_Gesture_Function_DoubleClick_Show(NULL,NULL, page);
+    
+    *eof = 1;
+    return cnt;
+}
+
+static int proc_Gesture_Function_DoubleClick_write(struct file *file, const char *buffer, unsigned long count, void *data)
+{    
+    msg_Gesture_Function_DoubleClick_Store(NULL, NULL, buffer, 0);
+    return count;
+}
+
+static int proc_Gesture_Function_UpDirect_read(char *page, char **start, off_t off, int count, int *eof, void *data)
+{
+    int cnt= 0;
+    
+    cnt=msg_Gesture_Function_UpDirect_Show(NULL,NULL, page);
+    
+    *eof = 1;
+    return cnt;
+}
+
+static int proc_Gesture_Function_UpDirect_write(struct file *file, const char *buffer, unsigned long count, void *data)
+{    
+    msg_Gesture_Function_UpDirect_Store(NULL, NULL, buffer, 0);
+    return count;
+}
+
+static int proc_Gesture_Function_DownDirect_read(char *page, char **start, off_t off, int count, int *eof, void *data)
+{
+    int cnt= 0;
+    
+    cnt=msg_Gesture_Function_DownDirect_Show(NULL,NULL, page);
+    
+    *eof = 1;
+    return cnt;
+}
+
+static int proc_Gesture_Function_DownDirect_write(struct file *file, const char *buffer, unsigned long count, void *data)
+{    
+    msg_Gesture_Function_DownDirect_Store(NULL, NULL, buffer, 0);
+    return count;
+}
+static int proc_Gesture_Function_LeftDirect_read(char *page, char **start, off_t off, int count, int *eof, void *data)
+{
+    int cnt= 0;
+    
+    cnt=msg_Gesture_Function_LeftDirect_Show(NULL,NULL, page);
+    
+    *eof = 1;
+    return cnt;
+}
+
+static int proc_Gesture_Function_LeftDirect_write(struct file *file, const char *buffer, unsigned long count, void *data)
+{    
+    msg_Gesture_Function_LeftDirect_Store(NULL, NULL, buffer, 0);
+    return count;
+}
+static int proc_Gesture_Function_RightDirect_read(char *page, char **start, off_t off, int count, int *eof, void *data)
+{
+    int cnt= 0;
+    
+    cnt=msg_Gesture_Function_RightDirect_Show(NULL,NULL, page);
+    
+    *eof = 1;
+    return cnt;
+}
+
+static int proc_Gesture_Function_RightDirect_write(struct file *file, const char *buffer, unsigned long count, void *data)
+{    
+    msg_Gesture_Function_RightDirect_Store(NULL, NULL, buffer, 0);
+    return count;
+}
+#endif
+#ifdef PROC_FIRMWARE_UPDATE
+ static int proc_version_read(char *page, char **start, off_t off, int count, int *eof, void *data)
+ {
+	 int cnt= 0;
+	 
+	 cnt=firmware_version_show(NULL,NULL, page);
+	 
+	 *eof = 1;
+	 return cnt;
+ }
+ 
+ static int proc_version_write(struct file *file, const char *buffer, unsigned long count, void *data)
+ {	  
+	 firmware_version_store(NULL, NULL, NULL, 0);
+	 return count;
+ }
+ 
+ static int proc_update_write(struct file *file, const char *buffer, unsigned long count, void *data)
+ {
+	 count = (unsigned long)firmware_update_store(NULL, NULL, NULL, (size_t)count);  
+	 return count;
+ }
+ 
+ static int proc_data_read(char *page, char **start, off_t off, int count, int *eof, void *data)
+ {
+	 int cnt= 0;
+	 
+	 cnt=firmware_data_show(NULL, NULL, page);
+	 
+	 *eof = 1;	  
+	 return cnt;
+ }
+ 
+ static int proc_data_write(struct file *file, const char *buffer, unsigned long count, void *data)
+ {
+	 firmware_data_store(NULL, NULL, buffer, 0);
+	 return count;
+ }
+#endif
+
+#if defined( PROC_FIRMWARE_UPDATE )||defined( MSG_GESTURE_FUNCTION_NODE_PROC )
+ static void msg_Update_Gesture_Fucntion_Proc_File(void)
+ {	
+	 struct proc_dir_entry *msg_class_proc = NULL;
+	 struct proc_dir_entry *msg_msg20xx_proc = NULL;
+	 struct proc_dir_entry *msg_device_proc = NULL;
+	 //////gesture function
+	 #ifdef MSG_GESTURE_FUNCTION_NODE_PROC
+	 struct proc_dir_entry *msg_gesture_function_doubleclick_proc = NULL; 
+	 struct proc_dir_entry *msg_gesture_funciton_updirect_proc = NULL;
+	 struct proc_dir_entry *msg_gesture_funciton_downdirect_proc = NULL;
+	 struct proc_dir_entry *msg_gesture_funciton_leftdirect_proc = NULL;
+	 struct proc_dir_entry *msg_gesture_funciton_rightdirect_proc = NULL;
+	 #endif
+	 ///////update
+	 #ifdef PROC_FIRMWARE_UPDATE
+	 struct proc_dir_entry *msg_version_proc = NULL;
+	 struct proc_dir_entry *msg_update_proc = NULL;
+	 struct proc_dir_entry *msg_data_proc = NULL;
+	 #endif
+	 msg_class_proc = proc_mkdir("class", NULL);
+	 msg_msg20xx_proc = proc_mkdir("ms-touchscreen-msg20xx",msg_class_proc);
+	 msg_device_proc = proc_mkdir("device",msg_msg20xx_proc);
+	 
+#ifdef MSG_GESTURE_FUNCTION_NODE_PROC
+	 msg_gesture_function_doubleclick_proc = create_proc_entry("doubleclick", CTP_GESTURE_FUNCTION_AUTHORITY_PROC, msg_device_proc);
+	 if (msg_gesture_function_doubleclick_proc == NULL) 
+	 {
+		 TPD_DEBUG("msg_Gesture_Fucntion_Proc_File msg_gesture_function_doubleclick_proc failed\n");
+	 } 
+	 else 
+	 {
+		 msg_gesture_function_doubleclick_proc->read_proc = proc_Gesture_Function_DoubleClick_read;
+		 msg_gesture_function_doubleclick_proc->write_proc = proc_Gesture_Function_DoubleClick_write;
+		 TPD_DEBUG("msg_Gesture_Fucntion_Proc_File msg_gesture_function_doubleclick_proc success\n");
+	 }
+
+	 msg_gesture_funciton_updirect_proc = create_proc_entry("updirect", CTP_GESTURE_FUNCTION_AUTHORITY_PROC, msg_device_proc);
+	 if (msg_gesture_funciton_updirect_proc == NULL) 
+	 {
+		 TPD_DEBUG("msg_Gesture_Fucntion_Proc_File msg_gesture_funciton_updirect_proc failed\n");
+	 } 
+	 else 
+	 {
+		 msg_gesture_funciton_updirect_proc->read_proc = proc_Gesture_Function_UpDirect_read;
+		 msg_gesture_funciton_updirect_proc->write_proc = proc_Gesture_Function_UpDirect_write;
+		 TPD_DEBUG("msg_Gesture_Fucntion_Proc_File msg_gesture_funciton_updirect_proc success\n");
+	 }
+	 msg_gesture_funciton_downdirect_proc = create_proc_entry("downdirect", CTP_GESTURE_FUNCTION_AUTHORITY_PROC, msg_device_proc);
+	 if (msg_gesture_funciton_downdirect_proc == NULL) 
+	 {
+		 TPD_DEBUG("msg_Gesture_Fucntion_Proc_File msg_gesture_funciton_downdirect_proc failed\n");
+	 } 
+	 else 
+	 {
+		 msg_gesture_funciton_downdirect_proc->read_proc = proc_Gesture_Function_DownDirect_read;
+		 msg_gesture_funciton_downdirect_proc->write_proc = proc_Gesture_Function_DownDirect_write;
+		 TPD_DEBUG("msg_Gesture_Fucntion_Proc_File msg_gesture_funciton_downdirect_proc success\n");
+	 }	
+	 
+	 msg_gesture_funciton_leftdirect_proc = create_proc_entry("leftdirect", CTP_GESTURE_FUNCTION_AUTHORITY_PROC, msg_device_proc);
+	 if (msg_gesture_funciton_leftdirect_proc == NULL) 
+	 {
+		 TPD_DEBUG("msg_Gesture_Fucntion_Proc_File msg_gesture_funciton_leftdirect_proc failed\n");
+	 } 
+	 else 
+	 {
+		 msg_gesture_funciton_leftdirect_proc->read_proc = proc_Gesture_Function_LeftDirect_read;
+		 msg_gesture_funciton_leftdirect_proc->write_proc = proc_Gesture_Function_LeftDirect_write;
+		 TPD_DEBUG("msg_Gesture_Fucntion_Proc_File msg_gesture_funciton_leftdirect_proc success\n");
+	 }
+	 msg_gesture_funciton_rightdirect_proc = create_proc_entry("rightdirect", CTP_GESTURE_FUNCTION_AUTHORITY_PROC, msg_device_proc);
+	 if (msg_gesture_funciton_rightdirect_proc == NULL) 
+	 {
+		 TPD_DEBUG("msg_Gesture_Fucntion_Proc_File msg_gesture_funciton_rightdirect_proc failed\n");
+	 } 
+	 else 
+	 {
+		 msg_gesture_funciton_rightdirect_proc->read_proc = proc_Gesture_Function_RightDirect_read;
+		 msg_gesture_funciton_rightdirect_proc->write_proc = proc_Gesture_Function_RightDirect_write;
+		 TPD_DEBUG("msg_Gesture_Fucntion_Proc_File msg_gesture_funciton_rightdirect_proc success\n");
+	 }	
+#endif
+
+///////////////uupdate
+#ifdef PROC_FIRMWARE_UPDATE
+	 msg_version_proc = create_proc_entry("version", CTP_UPDATE_GESTURE_AUTHORITY_SYS, msg_device_proc);
+	 if (msg_version_proc == NULL) 
+	 {
+		 TPD_DEBUG("create_proc_entry msg_version_proc failed\n");
+	 } 
+	 else 
+	 {
+		 msg_version_proc->read_proc = proc_version_read;
+		 msg_version_proc->write_proc = proc_version_write;
+		 TPD_DEBUG("create_proc_entry msg_version_proc success\n");
+	 }
+	 msg_data_proc = create_proc_entry("data", CTP_UPDATE_GESTURE_AUTHORITY_SYS, msg_device_proc);
+	 if (msg_data_proc == NULL) 
+	 {
+		 TPD_DEBUG("create_proc_entry msg_data_proc failed\n");
+	 } 
+	 else 
+	 {
+		 msg_data_proc->read_proc = proc_data_read;
+		 msg_data_proc->write_proc = proc_data_write;
+		 TPD_DEBUG("create_proc_entry msg_data_proc success\n");
+	 }
+	 msg_update_proc = create_proc_entry("update", CTP_UPDATE_GESTURE_AUTHORITY_SYS, msg_device_proc);
+	 if (msg_update_proc == NULL) 
+	 {
+		 TPD_DEBUG("create_proc_entry msg_update_proc failed\n");
+	 } 
+	 else 
+	 {
+		 msg_update_proc->read_proc = NULL;
+		 msg_update_proc->write_proc = proc_update_write;
+		 TPD_DEBUG("create_proc_entry msg_update_proc success\n");
+	 }	  
+#endif
+ }
+#endif
+
+
+#endif
+
+
+ static u8 Calculate_8BitsChecksum( u8 *msg, s32 s32Length )
+ {
+	 s32 s32Checksum = 0;
+	 s32 i;
+ 
+	 for( i = 0 ; i < s32Length; i++ )
+	 {
+		 s32Checksum += msg[i];
+	 }
+ 
+	 return ( u8 )( ( -s32Checksum ) & 0xFF );
+ }
+#ifdef MSG_GESTURE_FUNCTION
+void gesture_key_down(int x, int y)
+{
+	tpd_button(x, y, 1); 
+	tpd_button(x, y, 0);
+}
+#endif
+ static int tpd_touchinfo(TouchScreenInfo_t *touchData)
+ {
+
+    u8 val[8] = {0};
+    u8 Checksum = 0;
+    u8 i;
+    u32 delta_x = 0, delta_y = 0;
+    u32 u32X = 0;
+    u32 u32Y = 0;
+    u8 flag=0;
+#ifdef MSG_GESTURE_FUNCTION
+		int closeGesturnRetval = 0;
+	int temp=0;
+#endif
+    TPD_DEBUG(KERN_ERR "[msg2133]==tpd_touchinfo() \n");
+
+#ifdef SWAP_X_Y
+    int tempx;
+    int tempy;
+#endif
+
+    /*Get Touch Raw Data*/
+    i2c_master_recv( i2c_client, &val[0], REPORT_PACKET_LENGTH );
+    TPD_DEBUG(KERN_ERR"[tpd_touchinfo]--val[0]:%x, REPORT_PACKET_LENGTH:%x \n",val[0], REPORT_PACKET_LENGTH);
+
+    Checksum = Calculate_8BitsChecksum( &val[0], 7 ); //calculate checksum
+    TPD_DEBUG(KERN_ERR"[tpd_touchinfo]--Checksum:%x, val[7]:%x, val[0]:%x \n",Checksum, val[7], val[0]);
+
+#ifdef MSG_GESTURE_FUNCTION
+if (tpd_gesture_flag == 1)
+{							
+	if(( val[0] == 0x52 ) && ( val[1] == 0xFF ) && ( val[2] == 0xFF ) && ( val[3] == 0xFF ) && ( val[4] == 0xFF ) && ( val[6] == 0xFF ) && ( Checksum == val[7] ))
+	{
+		switch(val[5])
+		{
+			case KEY_UP_VALUE:
+			gesture_key_down(KEY_UP_P);
+			break;
+			case KEY_DOWN_VALUE:
+			gesture_key_down(KEY_DOWN_P);
+			break;
+			case KEY_LEFT_VALUE:
+			gesture_key_down(KEY_LEFT_P);
+			break;
+			case KEY_RIGHT_VALUE:
+			gesture_key_down(KEY_RIGHT_P);
+			break;
+			case KEY_DOUBLE_VALUE:
+			gesture_key_down(KEY_DOUBLE_P);
+			temp=1;
+			break;
+			case KEY_M_VALUE:
+			gesture_key_down(KEY_M_P);
+			break;
+			case KEY_O_VALUE:
+			gesture_key_down(KEY_O_P);
+			break;
+			case KEY_W_VALUE:
+			gesture_key_down(KEY_W_P);
+			temp=2;
+			break;
+			case KEY_C_VALUE:
+			gesture_key_down(KEY_C_P);
+			break;
+			case KEY_E_VALUE:
+			gesture_key_down(KEY_E_P);
+			break;
+			case KEY_L_VALUE:
+			gesture_key_down(KEY_L_P);
+			break;
+			case KEY_S_VALUE:
+			gesture_key_down(KEY_S_P);
+			break;
+			case KEY_V_VALUE:
+			gesture_key_down(KEY_V_P);
+			break;
+			case KEY_Z_VALUE:
+			gesture_key_down(KEY_Z_P);
+			break;
+		}
+		return 1;
+	 }
+}  
+#endif
+
+    if( ( Checksum == val[7] ) && ( val[0] == 0x52 )) //check the checksum  of packet
+    #ifdef __TP_PROXIMITY_SUPPORT__
+		if(val[5] == 0x80&&(val[1]==0xFF) &&(val[4]==0xFF) ) // 接近触摸屏  =----->  灭屏
+		{
+			if((g_bPsSensorOpen == 1) && (g_nPsSensorDate == 1))
+			{
+				mutex_lock(&msg2133_sensor_mutex);
+				g_nPsSensorDate = 0;
+				mutex_unlock(&msg2133_sensor_mutex);
+			}
+			return 0;
+								
+		}
+		else if(val[5] == 0x40&&(val[1]==0xFF) &&(val[4]==0xFF) ) // 远离触摸屏---->开屏
+		{			
+			if(/*(g_bPsSensorOpen == 1) && */(g_nPsSensorDate == 0))
+			{
+				mutex_lock(&msg2133_sensor_mutex);
+				g_nPsSensorDate = 1;
+				mutex_unlock(&msg2133_sensor_mutex);
+			}
+			return 0;
+		}
+		else
+#endif
+    {
+        u32X = ( ( ( val[1] & 0xF0 ) << 4 ) | val[2] );   //parse the packet to coordinates
+        u32Y = ( ( ( val[1] & 0x0F ) << 8 ) | val[3] );
+
+        delta_x = ( ( ( val[4] & 0xF0 ) << 4 ) | val[5] );
+        delta_y = ( ( ( val[4] & 0x0F ) << 8 ) | val[6] );
+TPD_DEBUG(KERN_ERR"[tpd_touchinfo]--u32X:%d, u32Y:%d, delta_x:%d, delta_y:%d \n",u32X, u32Y,delta_x, delta_y);
+
+#ifdef SWAP_X_Y
+        tempy = u32X;
+        tempx = u32Y;
+        u32X = tempx;
+        u32Y = tempy;
+
+        tempy = delta_x;
+        tempx = delta_y;
+        delta_x = tempx;
+        delta_y = tempy;
+#endif
+
+#if 0
+#ifdef REVERSE_X
+        u32X = 2047 - u32X;
+        delta_x = 4095 - delta_x;
+#endif
+#ifdef REVERSE_Y
+        u32Y = 2047 - u32Y;
+        delta_y = 4095 - delta_y;
+#endif
+#endif
+	if(temp==1)
+	{
+        u32X = 2047 - u32X;
+        delta_x = 4095 - delta_x;
+	}
+	else if(temp==2)
+	{
+        u32Y = 2047 - u32Y;
+        delta_y = 4095 - delta_y;
+	}
+	
+
+
+TPD_DEBUG(KERN_ERR"[tpd_touchinfo]--u32X:%d, u32Y:%d, delta_x:%d, delta_y:%d \n",u32X, u32Y,delta_x, delta_y);
+
+        if( ( val[1] == 0xFF ) && ( val[2] == 0xFF ) && ( val[3] == 0xFF ) && ( val[4] == 0xFF ) && ( val[6] == 0xFF ) )
+        { 
+            touchData->Point[0].X = 0; // final X coordinate
+            touchData->Point[0].Y = 0; // final Y coordinate
+
+            if( ( val[5] == 0x0 ) || ( val[5] == 0xFF ) )
+            {
+                touchData->nFingerNum = 0; //touch end
+                touchData->nTouchKeyCode = 0; //TouchKeyMode
+                touchData->nTouchKeyMode = 0; //TouchKeyMode
+            }
+            else
+            {
+                touchData->nTouchKeyMode = 1; //TouchKeyMode
+                touchData->nTouchKeyCode = val[5]; //TouchKeyCode
+                touchData->nFingerNum = 1;
+            }
+        }
+        else
+        {
+            touchData->nTouchKeyMode = 0; //Touch on screen...
+
+#if 0
+#ifdef REVERSE_X
+                ( delta_x == 4095 )
+#else
+                ( delta_x == 0 )
+#endif
+                &&
+#ifdef REVERSE_Y
+                ( delta_y == 4095 )
+#else
+                ( delta_y == 0 )
+#endif
+            )
+#endif
+
+	if( ( delta_x == 0 )&&( delta_y == 0 ))
+		flag = 1;
+
+	
+            if(flag)
+            {
+                touchData->nFingerNum = 1; //one touch
+                touchData->Point[0].X = ( u32X * MS_TS_MSG21XX_X_MAX ) / 2048;
+                touchData->Point[0].Y = ( u32Y * MS_TS_MSG21XX_Y_MAX ) / 2048;
+		TPD_DEBUG(KERN_ERR"[tpd_touchinfo]--FingerNum = 1 \n");
+            }
+            else
+            {
+                u32 x2, y2;
+
+                touchData->nFingerNum = 2; //two touch
+
+                /* Finger 1 */
+                touchData->Point[0].X = ( u32X * MS_TS_MSG21XX_X_MAX ) / 2048;
+                touchData->Point[0].Y = ( u32Y * MS_TS_MSG21XX_Y_MAX ) / 2048;
+
+                /* Finger 2 */
+                if( delta_x > 2048 )    //transform the unsigh value to sign value
+                {
+                    delta_x -= 4096;
+                }
+                if( delta_y > 2048 ) 
+                {
+                    delta_y -= 4096;
+                }
+
+                x2 = ( u32 )( u32X + delta_x );
+                y2 = ( u32 )( u32Y + delta_y );
+
+                touchData->Point[1].X = ( x2 * MS_TS_MSG21XX_X_MAX ) / 2048;
+                touchData->Point[1].Y = ( y2 * MS_TS_MSG21XX_Y_MAX ) / 2048;
+				TPD_DEBUG(KERN_ERR"[tpd_touchinfo]--FingerNum = 2 \n");
+            }
+        }	
+		return true;
+
+       
+    }
+    else
+    {
+    
+		return false;
+        //DBG("Packet error 0x%x, 0x%x, 0x%x", val[0], val[1], val[2]);
+        //DBG("             0x%x, 0x%x, 0x%x", val[3], val[4], val[5]);
+        //DBG("             0x%x, 0x%x, 0x%x", val[6], val[7], Checksum);
+        TPD_DEBUG( KERN_ERR "err status in tp\n" );
+    }
+
+    //enable_irq( msg21xx_irq );
+  ///
+
+ };
+ 
+ static  void tpd_down(int x, int y, int p) {
+ 	
+	 // input_report_abs(tpd->dev, ABS_PRESSURE, p);
+	  input_report_key(tpd->dev, BTN_TOUCH, 1);
+	  input_report_abs(tpd->dev, ABS_MT_TOUCH_MAJOR, 25);
+	  input_report_abs(tpd->dev, ABS_MT_POSITION_X, x);
+	  input_report_abs(tpd->dev, ABS_MT_POSITION_Y, y);
+
+	  /* track id Start 0 */
+		//input_report_abs(tpd->dev, ABS_MT_TRACKING_ID, p); 
+	  input_mt_sync(tpd->dev);
+	  if (FACTORY_BOOT == get_boot_mode()|| RECOVERY_BOOT == get_boot_mode())
+	  {   
+		tpd_button(x, y, 1);  
+	  }
+	  TPD_EM_PRINT(x, y, x, y, p-1, 1);
+  }
+  
+ static  void tpd_up(int x, int y,int *count) {
+
+	  input_report_key(tpd->dev, BTN_TOUCH, 0);
+	  input_mt_sync(tpd->dev);
+	  TPD_EM_PRINT(x, y, x, y, 0, 0);
+		  
+	  if(FACTORY_BOOT == get_boot_mode()|| RECOVERY_BOOT == get_boot_mode())
+	  {   
+	  	 TPD_DEBUG(KERN_ERR "[msg2133]--tpd_up-BOOT MODE--X:%d, Y:%d; \n", x, y);
+		 tpd_button(x, y, 0); 
+	  } 		  
+ 
+  }
+
+ static int touch_event_handler(void *unused)
+ {
+  
+    TouchScreenInfo_t touchData;
+	u8 touchkeycode = 0;
+	static u32 preKeyStatus = 0;
+	int i=0;
+
+    TPD_DEBUG(KERN_ERR "[msg2133]touch_event_handler() do while \n");
+
+	touchData.nFingerNum = 0;
+	TPD_DEBUG(KERN_ERR "[msg2133]touch_event_handler() do while \n");
+	 
+	if (tpd_touchinfo(&touchData)) 
+	{
+	 
+		TPD_DEBUG(KERN_ERR "[msg2133]--KeyMode:%d, KeyCode:%d, FingerNum =%d \n", touchData.nTouchKeyMode, touchData.nTouchKeyCode, touchData.nFingerNum );
+		//key...
+		if( touchData.nTouchKeyMode )
+		{
+	    	//key mode change virtual key mode
+			touchData.nFingerNum = 1;
+			if( touchData.nTouchKeyCode == 1 )
+			{
+				//touchkeycode = KEY_MENU;
+				touchData.Point[0].X = 250;
+				touchData.Point[0].Y = 900;
+			}
+			if( touchData.nTouchKeyCode == 2 )
+			{
+				//touchkeycode = KEY_HOMEPAGE ;
+				touchData.Point[0].X = 400;//fwvga
+				touchData.Point[0].Y = 900;
+
+			}
+			if( touchData.nTouchKeyCode == 4 )
+			{
+			//touchkeycode = KEY_HOMEPAGE ;
+				touchData.Point[0].X = 100;//fwvga
+				touchData.Point[0].Y = 900;
+
+			}
+			if( touchData.nTouchKeyCode == 8 )
+			{
+				//touchkeycode = KEY_SEARCH;
+				touchData.Point[0].X = 200;
+				touchData.Point[0].Y = 517;
+
+			}
+					
+		}
+				//report
+		{
+	 
+			if( ( touchData.nFingerNum ) == 0 ) //touch end
+			{
+				TPD_DEBUG("------DOWN------ \n");
+			TPD_DEBUG(KERN_ERR "[msg2133]---X:%d, Y:%d; \n", touchData.Point[0].X, touchData.Point[0].Y);
+				tpd_up(touchData.Point[0].X, touchData.Point[0].Y, 0);
+
+				input_sync( tpd->dev );
+			}
+			else //touch on screenMSG2133
+			{
+	 
+				for( i = 0; i < ( (int)touchData.nFingerNum ); i++ )
+				{
+				    TPD_DEBUG("------DOWN------ \n");
+					tpd_down(touchData.Point[i].X, touchData.Point[i].Y, 1);
+					TPD_DEBUG(KERN_ERR "[han_onmsg2133]---X:%d, Y:%d; i=%d \n", touchData.Point[i].X, touchData.Point[i].Y, i);
+				}
+	 
+				input_sync( tpd->dev );
+			}
+		}//end if(touchData->nTouchKeyMode)
+	 
+			}
+
+     mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM); 
+	 return 0;
+ }
+ 
+ static int tpd_detect (struct i2c_client *client, struct i2c_board_info *info) 
+ {
+	 strcpy(info->type, TPD_DEVICE);
+	
+	  return 0;
+ }
+ 
+ static void tpd_eint_interrupt_handler(void)
+ {
+	 mt_eint_mask(CUST_EINT_TOUCH_PANEL_NUM);
+	 schedule_work( &msg21xx_wq );
+ }
+
+#ifdef __TP_PROXIMITY_SUPPORT__
+static int msg2133_enable_ps(int enable)
+{
+	u8 ps_store_data[4];
+
+	mutex_lock(&msg2133_sensor_mutex);
+
+	if(enable == 1)
+	{
+		if(g_bPsSensorOpen == 0)
+		{
+			ps_store_data[0] = 0x52;
+			ps_store_data[1] = 0x00;
+            /*if(curr_ic_type==CTP_ID_MSG21XXA)//probe 函数中获取到芯片类型,当然您可以忽略它
+            {
+                ps_store_data[2] = 0x4a;	//ps_store_data[1] ps_store_data[2] 是TP端某变量地址
+            }
+            else if(curr_ic_type==CTP_ID_MSG21XX)
+            {
+                ps_store_data[2] = 0x62;
+            }
+            else*/
+            {
+                ps_store_data[2] = 0x4a;
+            }
+			ps_store_data[3] = 0xa0;		//ps_store_data[4] 是写入TP端变量的值
+
+			HalTscrCDevWriteI2CSeq(0x26, &ps_store_data[0], 4);//发送命令到TP端
+			g_bPsSensorOpen = 1;							//要确保发命令时候TP是可用的状态没有下电
+		}						// suspend()的操作会使TP下电
+	}
+	else
+	{	
+		if(g_bPsSensorOpen == 1)
+		{
+			ps_store_data[0] = 0x52;
+			ps_store_data[1] = 0x00;
+			/*if(curr_ic_type==CTP_ID_MSG21XXA)
+            {
+                ps_store_data[2] = 0x4a;
+            }
+            else if(curr_ic_type==CTP_ID_MSG21XX)
+            {
+                ps_store_data[2] = 0x62;
+            }
+            else*/
+            {
+                ps_store_data[2] = 0x4a;
+            }
+			ps_store_data[3] = 0xa1;
+			HalTscrCDevWriteI2CSeq(0x26, &ps_store_data[0], 4);	
+			g_bPsSensorOpen = 0;			
+		}
+		g_nPsSensorDate = 1;
+	}
+	mutex_unlock(&msg2133_sensor_mutex);
+	return 0;
+}
+
+int msg2133_ps_operate(void* self, uint32_t command, void* buff_in, int size_in,
+		void* buff_out, int size_out, int* actualout)
+{
+	int err = 0;
+	int value;
+	hwm_sensor_data* sensor_data;
+
+	//APS_FUN(f);
+	switch (command)
+	{
+		case SENSOR_DELAY:
+			if((buff_in == NULL) || (size_in < sizeof(int)))
+			{
+				APS_ERR("Set delay parameter error!\n");
+				err = -EINVAL;
+			}
+			// Do nothing
+			break;
+
+		case SENSOR_ENABLE:
+			if((buff_in == NULL) || (size_in < sizeof(int)))
+			{
+				APS_ERR("Enable sensor parameter error!\n");
+				err = -EINVAL;
+			}
+			else
+			{				
+				value = *(int *)buff_in;
+				if(value)
+				{
+					wake_lock(&ps_lock);		//wujinyou
+					if(err = msg2133_enable_ps(1))
+					{
+						APS_ERR("enable ps fail: %d\n", err); 
+						return -1;
+					}
+					g_bPsSensorOpen = 1;
+				}
+				else
+				{
+					wake_unlock(&ps_lock);		//wujinyou
+					if(err = msg2133_enable_ps(0))
+					{
+						APS_ERR("disable ps fail: %d\n", err); 
+						return -1;
+					}
+					g_bPsSensorOpen = 0;
+				}
+			}
+			break;
+
+		case SENSOR_GET_DATA:
+			if((buff_out == NULL) || (size_out< sizeof(hwm_sensor_data)))
+			{
+				APS_ERR("get sensor data parameter error!\n");
+				err = -EINVAL;
+			}
+			else
+			{
+				sensor_data = (hwm_sensor_data *)buff_out;	
+				sensor_data->values[0] = g_nPsSensorDate;
+				sensor_data->value_divide = 1;
+				sensor_data->status = SENSOR_STATUS_ACCURACY_MEDIUM;			
+			}
+			break;
+		default:
+			APS_ERR("proxmy sensor operate function no this parameter %d!\n", command);
+			err = -1;
+			break;
+	}
+	
+	return err;
+}
+
+
+static void tpd_initialize_ps_sensor_function()
+{
+	struct hwmsen_object obj_ps = {0};
+	int err = 0;
+	
+	g_nPsSensorDate = 1;
+
+	obj_ps.self = NULL;	// no use
+	obj_ps.polling = 1;
+	obj_ps.sensor_operate = msg2133_ps_operate;
+
+	wake_lock_init(&ps_lock,WAKE_LOCK_SUSPEND,"ps wakelock"); //shaohui add
+		
+	if(err = hwmsen_attach(ID_PROXIMITY, &obj_ps))
+	{
+		TPD_DEBUG("attach fail = %d\n", err);
+		return;
+	}
+}
+#endif
+
+#ifdef Auto_Update_Msg2133A
+ static void  Msg2133a_firmware_Auto_update ( void )
+ {
+	 u8  dbbus_tx_data[4];
+	 u8  dbbus_rx_data[2] = {0};
+	 u8  life_counter[2];
+	 u32 i, j;
+	 u32 crc_main, crc_main_tp;
+	 u32 crc_info, crc_info_tp;
+   
+	 int update_pass = 1;
+	 u16 reg_data = 0;
+	 EMEM_TYPE_t emem_type = EMEM_MAIN;
+	 crc_main = 0xffffffff;
+	 crc_info = 0xffffffff;
+	 mt_eint_mask(CUST_EINT_TOUCH_PANEL_NUM);
+	 
+	 _HalTscrHWReset();
+	 
+	 // Erase TP Flash first
+	 dbbusDWIICEnterSerialDebugMode();
+	 dbbusDWIICStopMCU();
+	 dbbusDWIICIICUseBus();
+	 dbbusDWIICIICReshape();
+	 mdelay ( 300 );
+	 
+	 // Disable the Watchdog
+	 dbbus_tx_data[0] = 0x10;
+	 dbbus_tx_data[1] = 0x3C;
+	 dbbus_tx_data[2] = 0x60;
+	 dbbus_tx_data[3] = 0x55;
+	 HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	 dbbus_tx_data[0] = 0x10;
+	 dbbus_tx_data[1] = 0x3C;
+	 dbbus_tx_data[2] = 0x61;
+	 dbbus_tx_data[3] = 0xAA;
+	 HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+	 // Stop MCU
+	 dbbus_tx_data[0] = 0x10;
+	 dbbus_tx_data[1] = 0x0F;
+	 dbbus_tx_data[2] = 0xE6;
+	 dbbus_tx_data[3] = 0x01;
+	 HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX, dbbus_tx_data, 4 );
+ 
+ 
+	 drvTP_read_info_dwiic_c33();
+	 
+	 if (0)//( g_dwiic_info_data[0] == 'M' && g_dwiic_info_data[1] == 'S' && g_dwiic_info_data[2] == 'T' && g_dwiic_info_data[3] == 'A' && g_dwiic_info_data[4] == 'R' && g_dwiic_info_data[5] == 'T' && g_dwiic_info_data[6] == 'P' && g_dwiic_info_data[7] == 'C')
+	 {
+		 // updata FW Version
+		 //drvTP_info_updata_C33 ( 8, &temp[32][8], 5 );
+ 
+		 g_dwiic_info_data[8]=temp[32][8];
+		 g_dwiic_info_data[9]=temp[32][9];
+		 g_dwiic_info_data[10]=temp[32][10];
+		 g_dwiic_info_data[11]=temp[32][11];
+		 // updata life counter
+		 life_counter[1] = (( ( (g_dwiic_info_data[13] << 8 ) | g_dwiic_info_data[12]) + 1 ) >> 8 ) & 0xFF;
+		 life_counter[0] = ( ( (g_dwiic_info_data[13] << 8 ) | g_dwiic_info_data[12]) + 1 ) & 0xFF;
+		 g_dwiic_info_data[12]=life_counter[0];
+		 g_dwiic_info_data[13]=life_counter[1];
+		 //drvTP_info_updata_C33 ( 10, &life_counter[0], 3 );
+		 drvDB_WriteReg ( 0x3C, 0xE4, 0x78C5 );
+		 drvDB_WriteReg ( 0x1E, 0x04, 0x7d60 );
+		 // TP SW reset
+		 drvDB_WriteReg ( 0x1E, 0x04, 0x829F );
+ 
+		 mdelay ( 50 );
+		 //TP_DEBUG_ERR("666666666666");
+		 //polling 0x3CE4 is 0x2F43
+		 do
+		 {
+			 reg_data = drvDB_ReadReg ( 0x3C, 0xE4 );
+ 
+		 }
+		 while ( reg_data != 0x2F43 );
+		 //TP_DEBUG_ERR("777777777777");
+		 // transmit lk info data
+		 HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX_TP , &g_dwiic_info_data[0], 1024 );
+		 //TP_DEBUG_ERR("88888888888");
+		 //polling 0x3CE4 is 0xD0BC
+		 do
+		 {
+			 reg_data = drvDB_ReadReg ( 0x3C, 0xE4 );
+		 }
+		 while ( reg_data != 0xD0BC );
+		 //TP_DEBUG_ERR("9999999999999");
+	 }
+ 
+	 //erase main
+	 TP_DEBUG_ERR("MSG2133aaaaaaaaaaa");
+	 drvTP_erase_emem_c33 ( EMEM_MAIN );
+	 mdelay ( 1000 );
+ 
+	 //ResetSlave();
+	 _HalTscrHWReset();
+ //drvDB_EnterDBBUS();
+	 dbbusDWIICEnterSerialDebugMode();
+	 dbbusDWIICStopMCU();
+	 dbbusDWIICIICUseBus();
+	 dbbusDWIICIICReshape();
+	 mdelay ( 600 );
+ 
+	 /////////////////////////
+	 // Program
+	 /////////////////////////
+ 
+	 //polling 0x3CE4 is 0x1C70
+	 if ( ( emem_type == EMEM_ALL ) || ( emem_type == EMEM_MAIN ) )
+	 {
+		 do
+		 {
+			 reg_data = drvDB_ReadReg ( 0x3C, 0xE4 );
+		 }
+		 while ( reg_data != 0x1C70 );
+	 }
+ 
+	 switch ( emem_type )
+	 {
+		 case EMEM_ALL:
+			 drvDB_WriteReg ( 0x3C, 0xE4, 0xE38F );  // for all-blocks
+			 break;
+		 case EMEM_MAIN:
+			 drvDB_WriteReg ( 0x3C, 0xE4, 0x7731 );  // for main block
+			 break;
+		 case EMEM_INFO:
+			 drvDB_WriteReg ( 0x3C, 0xE4, 0x7731 );  // for info block
+ 
+			 drvDB_WriteReg8Bit ( 0x0F, 0xE6, 0x01 );
+ 
+			 drvDB_WriteReg8Bit ( 0x3C, 0xE4, 0xC5 ); //
+			 drvDB_WriteReg8Bit ( 0x3C, 0xE5, 0x78 ); //
+ 
+			 drvDB_WriteReg8Bit ( 0x1E, 0x04, 0x9F );
+			 drvDB_WriteReg8Bit ( 0x1E, 0x05, 0x82 );
+ 
+			 drvDB_WriteReg8Bit ( 0x0F, 0xE6, 0x00 );
+			 mdelay ( 100 );
+			 break;
+	 }
+ TP_DEBUG_ERR("MSG2133bbbbbbbbbbbbbb");
+	 // polling 0x3CE4 is 0x2F43
+	 do
+	 {
+		 reg_data = drvDB_ReadReg ( 0x3C, 0xE4 );
+	 }
+	 while ( reg_data != 0x2F43 );
+ TP_DEBUG_ERR("MSG2133ccccccccccccc");
+	 // calculate CRC 32
+	 Init_CRC32_Table ( &crc_tab[0] );
+ 
+	 for ( i = 0; i < 33; i++ ) // total  33 KB : 2 byte per R/W
+	 {
+		 if ( emem_type == EMEM_INFO )
+			 i = 32;
+ 
+		 if ( i < 32 )	 //emem_main
+		 {
+			 if ( i == 31 )
+			 {
+				 temp[i][1014] = 0x5A; //Fmr_Loader[1014]=0x5A;
+				 temp[i][1015] = 0xA5; //Fmr_Loader[1015]=0xA5;
+ 
+				 for ( j = 0; j < 1016; j++ )
+				 {
+					 //crc_main=Get_CRC(Fmr_Loader[j],crc_main,&crc_tab[0]);
+					 crc_main = Get_CRC ( temp[i][j], crc_main, &crc_tab[0] );
+				 }
+			 }
+			 else
+			 {
+				 for ( j = 0; j < 1024; j++ )
+				 {
+					 //crc_main=Get_CRC(Fmr_Loader[j],crc_main,&crc_tab[0]);
+					 crc_main = Get_CRC ( temp[i][j], crc_main, &crc_tab[0] );
+				 }
+			 }
+		 }
+		 else  //emem_info
+		 {
+			 for ( j = 0; j < 1024; j++ )
+			 {
+				 //crc_info=Get_CRC(Fmr_Loader[j],crc_info,&crc_tab[0]);
+				 crc_info = Get_CRC ( g_dwiic_info_data[j], crc_info, &crc_tab[0] );
+			 }
+			 if ( emem_type == EMEM_MAIN ) break;
+		 }
+		 //drvDWIIC_MasterTransmit( DWIIC_MODE_DWIIC_ID, 1024, Fmr_Loader );
+		 TP_DEBUG_ERR("MSG2133dddddddddddddd");
+        #if 1
+		 {
+			 u32 n = 0;
+			 for(n=0;n<UPDATE_TIMES;n++)
+			 {
+				 TP_DEBUG_ERR("i=%d,n=%d",i,n);
+				 HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX_TP, temp[i]+n*N_BYTE_PER_TIME, N_BYTE_PER_TIME );
+			 }
+		 }
+        #else
+		 HalTscrCDevWriteI2CSeq ( FW_ADDR_MSG21XX_TP, temp[i], 1024 );
+        #endif
+		 TP_DEBUG_ERR("MSG2133eeeeeeeeeeee");
+		 // polling 0x3CE4 is 0xD0BC
+		 do
+		 {
+			 reg_data = drvDB_ReadReg ( 0x3C, 0xE4 );
+		 }
+		 while ( reg_data != 0xD0BC );
+		 TP_DEBUG_ERR("MSG2133ffffffffffffff");
+		 drvDB_WriteReg ( 0x3C, 0xE4, 0x2F43 );
+	 }
+		 TP_DEBUG_ERR("MSG2133ggggggggg");
+	 if ( ( emem_type == EMEM_ALL ) || ( emem_type == EMEM_MAIN ) )
+	 {
+		 // write file done and check crc
+		 drvDB_WriteReg ( 0x3C, 0xE4, 0x1380 );
+		 TP_DEBUG_ERR("MSG2133hhhhhhhhhhhhhh");
+	 }
+	 mdelay ( 10 ); //MCR_CLBK_DEBUG_DELAY ( 10, MCU_LOOP_DELAY_COUNT_MS );
+ 
+	 if ( ( emem_type == EMEM_ALL ) || ( emem_type == EMEM_MAIN ) )
+	 {
+		 // polling 0x3CE4 is 0x9432
+		 TP_DEBUG_ERR("MSG2133iiiiiiiiii");
+		 do
+		 {
+			 reg_data = drvDB_ReadReg ( 0x3C, 0xE4 );
+		 }while ( reg_data != 0x9432 );
+		 TP_DEBUG_ERR("MSG2133jjjjjjjjjjjjj");
+	 }
+ 
+	 crc_main = crc_main ^ 0xffffffff;
+	 crc_info = crc_info ^ 0xffffffff;
+ 
+	 if ( ( emem_type == EMEM_ALL ) || ( emem_type == EMEM_MAIN ) )
+	 {
+		 TP_DEBUG_ERR("MSG2133kkkkkkkkkkk");
+		 // CRC Main from TP
+		 crc_main_tp = drvDB_ReadReg ( 0x3C, 0x80 );
+		 crc_main_tp = ( crc_main_tp << 16 ) | drvDB_ReadReg ( 0x3C, 0x82 );
+ 
+		 // CRC Info from TP
+		 crc_info_tp = drvDB_ReadReg ( 0x3C, 0xA0 );
+		 crc_info_tp = ( crc_info_tp << 16 ) | drvDB_ReadReg ( 0x3C, 0xA2 );
+	 }
+   //TP_DEBUG ( "crc_main=0x%x, crc_info=0x%x, crc_main_tp=0x%x, crc_info_tp=0x%x\n",
+	 // 		  crc_main, crc_info, crc_main_tp, crc_info_tp );
+ 
+	 //drvDB_ExitDBBUS();
+	 TP_DEBUG_ERR("MSG2133lllllllllllll");
+	 update_pass = 1;
+	 if ( ( emem_type == EMEM_ALL ) || ( emem_type == EMEM_MAIN ) )
+	 {
+		 if ( crc_main_tp != crc_main )
+			 update_pass = 0;
+ 
+		 if ( crc_info_tp != crc_info )
+			 update_pass = 0;
+	 }
+ 
+	 if ( !update_pass )
+	 {
+		 TP_DEBUG_ERR ( "MSG2133update_C33 ok111\n" );
+		 _HalTscrHWReset();
+		 FwDataCnt = 0;
+		 mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM);
+		 return 1;
+	 }
+ 
+	 TP_DEBUG_ERR ( "MSG2133update_C33 OK\n" );
+	 _HalTscrHWReset();
+	 FwDataCnt = 0;
+	 mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM);
+	 return 1;
+
+ }
+ 
+#endif
+
+
+ static int  tpd_probe(struct i2c_client *client, const struct i2c_device_id *id)
+ {	 
+ 
+	int retval = TPD_OK;
+	char data;
+	u8 report_rate=0;
+	int err=0;
+	int reset_count = 0;
+	int i = 0;
+	i2c_client = client;
+	//msg21xx_i2c_client = client;
+	
+	/*reset I2C clock*/
+    //i2c_client->timing = 0;
+   	do
+	{
+		printk("--%s:[%d]:wait ekt dirver probe over:have_ektf2k_chip_on_board = %d\n", __func__, __LINE__, have_ektf2k_chip_on_board);
+		//msleep(10);
+	}while(ektf2k_probed == 0);
+	if (have_ektf2k_chip_on_board == 1)
+	{
+		printk("--%s:[%d]:Board TP chip is ekt , now mstar probe stop ..\n", __func__, __LINE__);
+		return -1;
+	}
+   INIT_WORK( &msg21xx_wq, touch_event_handler );
+//power on, need confirm with SA
+#ifdef TPD_POWER_SOURCE_CUSTOM
+	hwPowerOn(TPD_POWER_SOURCE_CUSTOM, VOL_2800, "TP");
+#else
+	hwPowerOn(MT65XX_POWER_LDO_VGP2, VOL_2800, "TP");//MT65XX_POWER_LDO_VGP2
+#endif
+#ifdef TPD_POWER_SOURCE_1800
+	hwPowerOn(TPD_POWER_SOURCE_1800, VOL_1800, "TP");
+#endif 
+
+
+#if 1
+	_HalTscrHWReset();	
+#endif
+	if(!Check_msg2133_I2C_state())
+	{
+		return -1;
+	}
+
+	mt_set_gpio_mode(GPIO_CTP_EINT_PIN, GPIO_CTP_EINT_PIN_M_EINT);
+    mt_set_gpio_dir(GPIO_CTP_EINT_PIN, GPIO_DIR_IN);
+   	mt_set_gpio_pull_enable(GPIO_CTP_EINT_PIN, GPIO_PULL_ENABLE);
+    mt_set_gpio_pull_select(GPIO_CTP_EINT_PIN, GPIO_PULL_DOWN);
+		
+
+    msleep(10);
+
+	//mt65xx_eint_set_sens(CUST_EINT_TOUCH_PANEL_NUM, CUST_EINT_TOUCH_PANEL_SENSITIVE);
+	//mt65xx_eint_set_hw_debounce(CUST_EINT_TOUCH_PANEL_NUM, CUST_EINT_TOUCH_PANEL_DEBOUNCE_CN);
+	mt_eint_registration(CUST_EINT_TOUCH_PANEL_NUM, CUST_EINT_TOUCH_PANEL_TYPE, tpd_eint_interrupt_handler, 1);
+	msleep(50);
+	mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM);
+	msleep(200);
+
+    tpd_load_status = 1;
+
+	TPD_DMESG("msg2133 Touch Panel Device Probe %s\n", (retval < TPD_OK) ? "FAIL" : "PASS");
+	
+	TPD_DEBUG("msg2133--frameware upgrade \n");
+#ifdef Auto_Update_Msg2133A
+	{
+		unsigned char dbbus_tx_data[3];
+		unsigned char dbbus_rx_data[4] ;
+		unsigned short major = 0, minor = 0,FW_major = 0,FW_minor = 0;
+		dbbusDWIICEnterSerialDebugMode();
+		dbbusDWIICStopMCU();
+		dbbusDWIICIICUseBus();
+		dbbusDWIICIICReshape();
+		//Get_Chip_Version();
+		dbbus_tx_data[0] = 0x53;
+		dbbus_tx_data[1] = 0x00;
+		dbbus_tx_data[2] = 0x2A;
+		//i2c_write(TOUCH_ADDR_MSG20XX, &dbbus_tx_data[0], 3);
+		//i2c_read(TOUCH_ADDR_MSG20XX, &dbbus_rx_data[0], 4);
+		HalTscrCDevWriteI2CSeq( FW_ADDR_MSG21XX_TP, &dbbus_tx_data[0], 3 );
+		HalTscrCReadI2CSeq( FW_ADDR_MSG21XX_TP, &dbbus_rx_data[0], 4 );
+		major = (dbbus_rx_data[1] << 8) + dbbus_rx_data[0];
+		minor = (dbbus_rx_data[3] << 8) + dbbus_rx_data[2];
+		FW_major = (MSG_2133_BIN[0x7F4F] << 8) + MSG_2133_BIN[0x7F4E];
+		FW_minor = (MSG_2133_BIN[0x7F51] << 8) + MSG_2133_BIN[0x7F50];			
+		for(i = 0; i < 33; i++)
+		{
+			memcpy(&temp[i][0], &MSG_2133_BIN[i*1024], 1024);//33779
+		}
+		//if(((major == FW_major)&&(minor < FW_minor))||(major != FW_major))
+		if((minor != FW_minor)||(major != FW_major))
+			Msg2133a_firmware_Auto_update();
+	}
+
+#endif
+    /*frameware upgrade*/	
+#ifdef __FIRMWARE_UPDATE__
+		firmware_class = class_create( THIS_MODULE, "ms-touchscreen-msg20xx" );
+		if( IS_ERR( firmware_class ) )
+			pr_err( "Failed to create class(firmware)!\n" );
+		firmware_cmd_dev = device_create( firmware_class,
+										  NULL, 0, NULL, "device" );
+		if( IS_ERR( firmware_cmd_dev ) )
+			pr_err( "Failed to create device(firmware_cmd_dev)!\n" );
+	
+		// version
+		if( device_create_file( firmware_cmd_dev, &dev_attr_version ) < 0 )
+			pr_err( "Failed to create device file(%s)!\n", dev_attr_version.attr.name );
+		// update
+		if( device_create_file( firmware_cmd_dev, &dev_attr_update ) < 0 )
+			pr_err( "Failed to create device file(%s)!\n", dev_attr_update.attr.name );
+		// data
+		if( device_create_file( firmware_cmd_dev, &dev_attr_data ) < 0 )
+			pr_err( "Failed to create device file(%s)!\n", dev_attr_data.attr.name );
+		// clear
+		if( device_create_file( firmware_cmd_dev, &dev_attr_clear ) < 0 )
+			pr_err( "Failed to create device file(%s)!\n", dev_attr_clear.attr.name );
+
+#ifdef  MSG_GESTURE_FUNCTION
+			// DoubleClick
+			if (device_create_file(firmware_cmd_dev, &dev_attr_doubleclick) < 0)
+				pr_err("Failed to create device file(%s)!\n", dev_attr_doubleclick.attr.name);
+			
+			// UpDirect
+			if (device_create_file(firmware_cmd_dev, &dev_attr_updirect) < 0)
+				pr_err("Failed to create device file(%s)!\n", dev_attr_updirect.attr.name);
+		
+			// DownDirect
+			if (device_create_file(firmware_cmd_dev, &dev_attr_downdirect) < 0)
+				pr_err("Failed to create device file(%s)!\n", dev_attr_downdirect.attr.name);
+		
+			// LeftDirect
+			if (device_create_file(firmware_cmd_dev, &dev_attr_leftdirect) < 0)
+				pr_err("Failed to create device file(%s)!\n", dev_attr_leftdirect.attr.name);
+		
+			// RightDirect
+			if (device_create_file(firmware_cmd_dev, &dev_attr_rightdirect) < 0)
+				pr_err("Failed to create device file(%s)!\n", dev_attr_rightdirect.attr.name);
+#endif
+
+		dev_set_drvdata( firmware_cmd_dev, NULL );
+#endif
+
+#ifdef __TP_PROXIMITY_SUPPORT__
+	tpd_initialize_ps_sensor_function();
+	#ifdef __SHOW_HW_INFORMATION__
+	hw_set_alsps_info(ALSPS_MSG2133);
+	#endif
+#endif
+   return 0;
+   
+ }
+
+ static int  tpd_remove(struct i2c_client *client)
+ 
+ {
+   
+	 TPD_DEBUG("TPD removed\n");
+ 
+   return 0;
+ }
+ 
+ 
+ static int tpd_local_init(void)
+ {
+
+ 
+  	TPD_DMESG("Mstar msg2133 I2C Touchscreen Driver (Built %s @ %s)\n", __DATE__, __TIME__);
+ 
+ 
+    if(i2c_add_driver(&tpd_i2c_driver)!=0)
+   	{
+  		TPD_DMESG("msg2133 unable to add i2c driver.\n");
+	      	return -1;
+    }
+    if(tpd_load_status == 0) 
+    {
+    	TPD_DMESG("msg2133 add error touch panel driver.\n");
+    	i2c_del_driver(&tpd_i2c_driver);
+    	return -1;
+    }
+
+#ifdef TPD_HAVE_BUTTON     
+    tpd_button_setting(TPD_KEY_COUNT, tpd_keys_local, tpd_keys_dim_local);// initialize tpd button data
+#endif   
+  
+//#if (defined(TPD_WARP_START) && defined(TPD_WARP_END))    
+//WARP CHECK IS NEED --XB.PANG
+//#endif 
+
+	TPD_DMESG("end %s, %d\n", __FUNCTION__, __LINE__);  
+		
+    return 0; 
+ }
+
+ static void tpd_resume( struct early_suspend *h )
+ {
+   TPD_DMESG("TPD wake up\n");
+
+#ifdef MSG_GESTURE_FUNCTION
+	 tpd_gesture_flag = 0;
+#endif
+
+#ifdef __TP_PROXIMITY_SUPPORT__
+	if(g_bPsSensorOpen == 1 && (g_bSuspend))
+	{
+		TPD_DMESG("msg sensor resume in calling tp no need to resume\n");
+		return 0;
+	}
+	g_bSuspend = 0;
+	if(g_call_state)
+		return;
+#endif
+#ifdef TPD_CLOSE_POWER_IN_SLEEP	
+	hwPowerOn(TPD_POWER_SOURCE,VOL_2800,"TP");
+#endif
+	msleep(100);
+	mt_set_gpio_mode(GPIO_CTP_RST_PIN, GPIO_CTP_RST_PIN_M_GPIO);
+    mt_set_gpio_dir(GPIO_CTP_RST_PIN, GPIO_DIR_OUT);
+	mt_set_gpio_out(GPIO_CTP_RST_PIN, GPIO_OUT_ONE);
+	mt_set_gpio_mode(GPIO_CTP_RST_PIN, GPIO_CTP_RST_PIN_M_GPIO);
+    mt_set_gpio_dir(GPIO_CTP_RST_PIN, GPIO_DIR_OUT);
+    mt_set_gpio_out(GPIO_CTP_RST_PIN, GPIO_OUT_ZERO);  
+	msleep(50);
+	TPD_DMESG(" msg2133 reset\n");
+	mt_set_gpio_mode(GPIO_CTP_RST_PIN, GPIO_CTP_RST_PIN_M_GPIO);
+    mt_set_gpio_dir(GPIO_CTP_RST_PIN, GPIO_DIR_OUT);
+    mt_set_gpio_out(GPIO_CTP_RST_PIN, GPIO_OUT_ONE);
+	msleep(200);
+	mt_eint_unmask(CUST_EINT_TOUCH_PANEL_NUM);
+	TPD_DMESG("TPD wake up done\n");
+	
+ }
+
+ static void tpd_suspend( struct early_suspend *h )
+ {
+#ifdef MSG_GESTURE_FUNCTION
+		 int msg_gesturemoderetval = 0;
+#endif
+
+#ifdef __TP_PROXIMITY_SUPPORT__
+	if(g_bPsSensorOpen == 1)
+	{
+		TPD_DMESG("msg suspend in calling tp no need to suspend\n");
+		return 0;
+	}
+	g_bSuspend = 1;
+	if(g_call_state)
+	{
+		return;
+	}
+#endif
+
+#ifdef MSG_GESTURE_FUNCTION
+	
+		msg_GetGestureModeValue();
+		if(set_gesture_mode != 0)
+		{
+			
+			if((set_gesture_mode >= 0x01)&&(set_gesture_mode <= 0x1F))
+			{
+				while(msg_gesturemoderetval == 0){
+					msg_gesturemoderetval = msg_OpenGestureFunction(set_gesture_mode);
+					} ////be sure enter this function
+				return ;
+			}
+			else
+			{
+			   ////command wrong!
+			}
+		}
+#endif
+
+	TPD_DMESG("TPD enter sleep\n");
+	mt_eint_mask(CUST_EINT_TOUCH_PANEL_NUM);
+	
+	mt_set_gpio_mode(GPIO_CTP_RST_PIN, GPIO_CTP_RST_PIN_M_GPIO);
+    mt_set_gpio_dir(GPIO_CTP_RST_PIN, GPIO_DIR_OUT);
+    mt_set_gpio_out(GPIO_CTP_RST_PIN, GPIO_OUT_ZERO);  
+
+#ifdef TPD_CLOSE_POWER_IN_SLEEP	
+	hwPowerDown(TPD_POWER_SOURCE,"TP");
+#else
+	//TP enter sleep mode----XB.PANG NEED CHECK
+	//if have sleep mode
+#endif
+    TPD_DMESG("TPD enter sleep done\n");
+ } 
+
+
+ static struct tpd_driver_t tpd_device_driver = {
+		 .tpd_device_name = "msg2133",
+		 .tpd_local_init = tpd_local_init,
+		 .suspend = tpd_suspend,
+		 .resume = tpd_resume,
+#ifdef TPD_HAVE_BUTTON
+		 .tpd_have_button = 1,
+#else
+		 .tpd_have_button = 0,
+#endif		
+ };
+ /* called when loaded into kernel */
+ static int __init tpd_driver_init(void) {
+	 TPD_DEBUG("MediaTek MSG2133 touch panel driver init\n");
+	   i2c_register_board_info(2, &msg2133_i2c_tpd, 1);//hhhhhhhhhhhhhhhhhhh
+		 if(tpd_driver_add(&tpd_device_driver) < 0)
+			 TPD_DMESG("add MSG2133 driver failed\n");
+
+
+	 return 0;
+ }
+ 
+ /* should never be called */
+ static void __exit tpd_driver_exit(void) {
+	 TPD_DMESG("MediaTek MSG2133 touch panel driver exit\n");
+	 tpd_driver_remove(&tpd_device_driver);
+ }
+ 
+ module_init(tpd_driver_init);
+ module_exit(tpd_driver_exit);
+
+
diff --git a/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/tpd_custom_ektf2k.h b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/tpd_custom_ektf2k.h
new file mode 100755
index 0000000..00b4cb3
--- /dev/null
+++ b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/tpd_custom_ektf2k.h
@@ -0,0 +1,46 @@
+#ifndef TPD_CUSTOM_EKTF2K_H__
+#define TPD_CUSTOM_EKTF2K_H__
+
+#define ELAN_X_MAX      760 
+#define ELAN_Y_MAX      1280
+
+#define LCM_X_MAX      240 //simple_strtoul(LCM_WIDTH, NULL, 0)
+#define LCM_Y_MAX      320//simple_strtoul(LCM_HEIGHT, NULL, 0)
+
+//Elan Key's define
+#define ELAN_KEY_BACK		0x10
+#define ELAN_KEY_HOME		0x08
+#define ELAN_KEY_MENU		0x04
+#define ELAN_KEY_SEARCH 	0x11
+
+/////////////////////////////////////////////////////////
+#define I2C_NUM 2
+#define TPD_POWER_SOURCE_CUSTOM PMIC_APP_CAP_TOUCH_VDD	
+
+//#define SOFTKEY_AXIS_VER
+//#define ELAN_TEN_FINGERS
+//#define _DMA_MODE_
+
+#define ELAN_BUTTON
+#define LCT_VIRTUAL_KEY
+#define TPD_HAVE_BUTTON
+//#define ELAN_3K_IC_SOLUTION
+
+//#define NON_MTK_MODE	//I2C Support > 8bits Transfer
+
+//#define MTK_ELAN_DEBUG
+
+#ifdef ELAN_TEN_FINGERS
+#define PACKET_SIZE             44            /* support 10 fingers packet */
+#else
+#define PACKET_SIZE             8            	/* support 2 fingers packet  */
+//#define PACKET_SIZE            	18            /* support 5 fingers packet  */
+#endif
+
+#define ELAN_DEBUG
+
+#define TP_PROXIMITY_SENSOR_NEW //tp proximity
+
+#define IAP_PORTION                     //upgrade  FW
+#define ESD_CHECK
+#endif /* TOUCHPANEL_H__ */
diff --git a/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/tpd_custom_msg2133.h b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/tpd_custom_msg2133.h
new file mode 100644
index 0000000..4c2d0c6
--- /dev/null
+++ b/mediatek/custom/common/kernel/touchpanel/msg2133_and_ektf2k_v2/tpd_custom_msg2133.h
@@ -0,0 +1,158 @@
+/* Copyright Statement:
+ *
+ * This software/firmware and related documentation ("MediaTek Software") are
+ * protected under relevant copyright laws. The information contained herein
+ * is confidential and proprietary to MediaTek Inc. and/or its licensors.
+ * Without the prior written permission of MediaTek inc. and/or its licensors,
+ * any reproduction, modification, use or disclosure of MediaTek Software,
+ * and information contained herein, in whole or in part, shall be strictly prohibited.
+ */
+/* MediaTek Inc. (C) 2010. All rights reserved.
+ *
+ * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
+ * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
+ * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
+ * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
+ * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
+ * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
+ * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
+ * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
+ * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
+ * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
+ * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
+ * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
+ * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
+ * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
+ * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
+ * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
+ * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
+ *
+ * The following software/firmware and/or related documentation ("MediaTek Software")
+ * have been modified by MediaTek Inc. All revisions are subject to any receiver's
+ * applicable license agreements with MediaTek Inc.
+ */
+
+#ifndef __TPD_CUSTOM_MSG2133_H__
+#define __TPD_CUSTOM_MSG2133_H__
+
+#include <pmic_drv.h>
+#define TPD_POWER_SOURCE_CUSTOM PMIC_APP_CAP_TOUCH_VDD
+/* Pre-defined definition */
+#define TPD_TYPE_CAPACITIVE
+#define TPD_I2C_NUMBER           2
+
+#if defined(__TP_GESTURE_WAKEUP__)
+	#define MSG_GESTURE_FUNCTION
+#endif
+//#define TOUCH_ADDR_MSG20XX 0Xc0
+
+#define TPD_DELAY                (2*HZ/100)
+
+//#define SWAP_X_Y
+//#define REVERSE_Y
+//#define REVERSE_X
+#define MAX_TOUCH_FINGER     5
+#if defined(__MAINLCD_480X800__)
+#define MS_TS_MSG21XX_X_MAX  480//480
+	#define MS_TS_MSG21XX_Y_MAX   800
+#else
+#define MS_TS_MSG21XX_X_MAX  240//480
+#define MS_TS_MSG21XX_Y_MAX   320//800
+#endif
+
+#define REPORT_PACKET_LENGTH   8//2--8--128--80
+
+#define TPD_RES_X                240
+#define TPD_RES_Y                320
+
+#define TPD_HAVE_BUTTON
+#define HAVE_TOUCH_KEY
+#define TPD_BUTTON_HEIGHT       900
+//#define TPD_KEY_COUNT           3
+//#define TPD_KEYS                {KEY_BACK, KEY_HOMEPAGE, KEY_MENU}
+//#define TPD_KEYS_DIM        {{40,517,78,38},{120,517,78,38},{200,517,78,38}}
+
+#if defined(__A19_BP_TP__)
+#define TPD_KEY_COUNT           3
+	#define TPD_KEYS                	{ KEY_HOME, KEY_BACK, KEY_MENU}
+	#define TPD_KEYS_DIM            {{100,900,20,40},{250,900,100,40},{400,900,100,40}}
+#else
+	#if defined(MSG_GESTURE_FUNCTION)
+	#define GESTRUE_KEY_X 600
+	#define GESTRUE_KEY_Y 1200
+
+	#define KEY_WIDTH 	2
+	#define KEY_HEIGHT	2
+
+	#define KEY_UP_VALUE	0x29
+	#define KEY_DOWN_VALUE	0x27
+	#define KEY_LEFT_VALUE	0x28
+	#define KEY_RIGHT_VALUE	0x26
+	#define KEY_DOUBLE_VALUE	0x58
+
+	#define KEY_M_VALUE	0x20
+	#define KEY_O_VALUE	0x21
+	#define KEY_W_VALUE	0x22
+	#define KEY_C_VALUE	0x23
+	#define KEY_E_VALUE	0x24
+	#define KEY_L_VALUE	0x25
+	#define KEY_S_VALUE	0x2A
+	#define KEY_V_VALUE	0x2B
+	#define KEY_Z_VALUE	0x2C
+
+	#define KEY_UP_P	(GESTRUE_KEY_X),GESTRUE_KEY_Y
+	#define KEY_DOWN_P	(GESTRUE_KEY_X+10),GESTRUE_KEY_Y
+	#define KEY_LEFT_P	(GESTRUE_KEY_X+20),GESTRUE_KEY_Y
+	#define KEY_RIGHT_P	(GESTRUE_KEY_X+30),GESTRUE_KEY_Y
+	#define KEY_DOUBLE_P	(GESTRUE_KEY_X+40),GESTRUE_KEY_Y
+	#define KEY_M_P		(GESTRUE_KEY_X+50),GESTRUE_KEY_Y
+	#define KEY_O_P		(GESTRUE_KEY_X+60),GESTRUE_KEY_Y
+	#define KEY_W_P		(GESTRUE_KEY_X+70),GESTRUE_KEY_Y
+	#define KEY_C_P		(GESTRUE_KEY_X+80),GESTRUE_KEY_Y
+	#define KEY_E_P		(GESTRUE_KEY_X+90),GESTRUE_KEY_Y
+	#define KEY_L_P		(GESTRUE_KEY_X+100),GESTRUE_KEY_Y
+	#define KEY_S_P		(GESTRUE_KEY_X+110),GESTRUE_KEY_Y
+	#define KEY_V_P		(GESTRUE_KEY_X+120),GESTRUE_KEY_Y
+	#define KEY_Z_P		(GESTRUE_KEY_X+130),GESTRUE_KEY_Y
+	#define KEY_WIDTH_HEIGHT	KEY_WIDTH,KEY_HEIGHT
+
+	#define KEY_UP_D	(GESTRUE_KEY_X),GESTRUE_KEY_Y,KEY_WIDTH_HEIGHT
+	#define KEY_DOWN_D	(GESTRUE_KEY_X+10),GESTRUE_KEY_Y,KEY_WIDTH_HEIGHT
+	#define KEY_LEFT_D	(GESTRUE_KEY_X+20),GESTRUE_KEY_Y,KEY_WIDTH_HEIGHT
+	#define KEY_RIGHT_D	(GESTRUE_KEY_X+30),GESTRUE_KEY_Y,KEY_WIDTH_HEIGHT
+	#define KEY_DOULBE_D	(GESTRUE_KEY_X+40),GESTRUE_KEY_Y,KEY_WIDTH_HEIGHT
+	#define KEY_M_D		(GESTRUE_KEY_X+50),GESTRUE_KEY_Y,KEY_WIDTH_HEIGHT
+	#define KEY_O_D		(GESTRUE_KEY_X+60),GESTRUE_KEY_Y,KEY_WIDTH_HEIGHT
+	#define KEY_W_D		(GESTRUE_KEY_X+70),GESTRUE_KEY_Y,KEY_WIDTH_HEIGHT
+	#define KEY_C_D		(GESTRUE_KEY_X+80),GESTRUE_KEY_Y,KEY_WIDTH_HEIGHT
+	#define KEY_E_D		(GESTRUE_KEY_X+90),GESTRUE_KEY_Y,KEY_WIDTH_HEIGHT
+	#define KEY_L_D		(GESTRUE_KEY_X+100),GESTRUE_KEY_Y,KEY_WIDTH_HEIGHT
+	#define KEY_S_D		(GESTRUE_KEY_X+110),GESTRUE_KEY_Y,KEY_WIDTH_HEIGHT
+	#define KEY_V_D		(GESTRUE_KEY_X+120),GESTRUE_KEY_Y,KEY_WIDTH_HEIGHT
+	#define KEY_Z_D		(GESTRUE_KEY_X+130),GESTRUE_KEY_Y,KEY_WIDTH_HEIGHT
+
+	#define TPD_KEY_COUNT       17    
+	#define TPD_KEYS                { KEY_MENU, KEY_HOME, KEY_BACK, KEY_UP, KEY_DOWN, KEY_LEFT, KEY_RIGHT, KEY_POWER,\
+					KEY_M, KEY_O,KEY_W, KEY_C, KEY_E, KEY_L, KEY_S, KEY_V, KEY_Z}
+	#define TPD_KEYS_DIM            {{100,900,20,40},{250,900,100,40},{400,900,100,40},{KEY_UP_D},{KEY_DOWN_D},{KEY_LEFT_D},\
+					{KEY_RIGHT_D},{KEY_DOULBE_D},{KEY_M_D},{KEY_O_D},{KEY_W_D},{KEY_C_D},{KEY_E_D},{KEY_L_D},\
+					{KEY_S_D},{KEY_V_D},{KEY_Z_D}}
+
+	#else
+	#define TPD_KEY_COUNT           3
+	#define TPD_KEYS                	{ KEY_MENU, KEY_HOME,KEY_BACK}
+	#define TPD_KEYS_DIM            {{100,900,20,40},{250,900,100,40},{400,900,100,40}}
+	#endif
+#endif
+
+#define Auto_Update_Msg2133A// 2133A auto update 
+
+const char MSG_2133_BIN[94*1024]=
+{
+#include "hicam_mstar_update.i"
+};
+
+
+
+#endif /* TOUCHPANEL_H__ */
-- 
1.9.1

