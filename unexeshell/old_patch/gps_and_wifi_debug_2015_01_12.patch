diff --git a/hardware/libhardware_legacy/wifi/wifi.c b/hardware/libhardware_legacy/wifi/wifi.c
index 9710d33..403eb77 100644
--- a/hardware/libhardware_legacy/wifi/wifi.c
+++ b/hardware/libhardware_legacy/wifi/wifi.c
@@ -1040,6 +1040,7 @@ int wifi_change_fw_path(const char *fwpath)
     int len;
     int fd;
     int ret = 0;
+	int retry_count = 4;
 
     ALOGD("enter -->%s fwpath=%s\n", __func__, fwpath);
     
@@ -1051,10 +1052,19 @@ int wifi_change_fw_path(const char *fwpath)
         return -1;
     }
     len = strlen(fwpath) + 1;
-    if (TEMP_FAILURE_RETRY(write(fd, fwpath, len)) != len) {
-        ALOGE("Failed to write wlan fw path param (%s)", strerror(errno));
-        ret = -1;
-    }
+	do {
+		if (TEMP_FAILURE_RETRY(write(fd, fwpath, len)) != len) {
+			ALOGE("Failed to write wlan fw path param (%s), retry_count = %d", strerror(errno), retry_count);
+			retry_count--;
+			usleep(100 * 1000);
+			ret = -1;
+		}
+		else {
+			ret = 0;
+			ALOGD("%s:[%d]wrtie fw path success after retry %d times\n", __func__, __LINE__, (4 - retry_count));
+			break;
+		}
+	} while (0 < retry_count);
     close(fd);
 
 #ifdef CONFIG_HOTSPOT_MGR_SUPPORT
diff --git a/mediatek/config/mt6595/init.rc b/mediatek/config/mt6595/init.rc
index accf551..95a73f2 100755
--- a/mediatek/config/mt6595/init.rc
+++ b/mediatek/config/mt6595/init.rc
@@ -1678,10 +1678,10 @@ service agpsd /system/bin/mtk_agpsd
     group gps ccci inet sdcard_r sdcard_rw misc
 
 service mnld /system/xbin/mnld
-    class main
-    user gps
-    group nvram gps inet misc sdcard_rw sdcard_r media_rw
-    socket mnld stream 660 gps system
+	class main
+	user root
+	group nvram gps inet misc sdcard_rw sdcard_r media_rw
+	socket mnld stream 660 gps system
 
 service ipod /system/bin/ipod
     user root
diff --git a/mediatek/external/mnl/mnl_aosp/mnld/src/mnld.c b/mediatek/external/mnl/mnl_aosp/mnld/src/mnld.c
index ca1a07f..a0b8dfc 100644
--- a/mediatek/external/mnl/mnl_aosp/mnld/src/mnld.c
+++ b/mediatek/external/mnl/mnl_aosp/mnld/src/mnld.c
@@ -1641,10 +1641,12 @@ linux_gps_init (void)
 	if(g_is_1Hz)
 	{
 		init_cfg.fix_interval = 1000;               // 1Hz update rate
+		MND_MSG("#####into 1HZ mode ...\n");
 	}
 	else 
 	{
 		init_cfg.fix_interval = 200;               // 5Hz update rate
+		MND_MSG("#####into 5HZ mode ...\n");
 	}
 
 
@@ -2062,7 +2064,7 @@ static int launch_daemon_thread(void)
 
     MND_MSG("chip_id is %s\n", chip_id);
 
-    g_is_1Hz = 1;
+    g_is_1Hz = 0;
 
     /* adjust priority when 5 Hz Mode */        
     policy = sched_getscheduler(0);
